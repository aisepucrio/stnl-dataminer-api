services:
  web:
    build: .
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
        # O serviço web só será iniciado quando o serviço db realmente tiver finalizado a inicialização.
        # Por padrão, o depends_on apenas espera o container iniciar, mas não garante que o serviço esteja pronto para uso.
        # Para garantir que o serviço esteja pronto, você pode usar a condição service_healthy.
    healthcheck:
      test: ["CMD", "nc", "-z", "web", "8000"]
    environment:
      DJANGO_SUPERUSER_PASSWORD: "admin"

  worker:
    build: .
    command: celery -A dataminer_api worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      redis:
        condition: service_healthy

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 30s
      retries: 3

  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: mining_db
      POSTGRES_USER: aise-stone
      POSTGRES_PASSWORD: "#St@n3L@b2@24!"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d mining_db -U aise-stone"]
      interval: 10s
      timeout: 30s
      retries: 3

volumes:
  postgres_data:
    driver: local
