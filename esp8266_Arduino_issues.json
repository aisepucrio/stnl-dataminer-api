[
    {
        "id": 1517019222,
        "number": 8783,
        "title": "Reading GPIO16 on power up",
        "state": "closed",
        "locked": false,
        "assignees": [],
        "labels": [],
        "milestone": null,
        "created_at": "2023-01-03T07:22:38Z",
        "updated_at": "2023-03-20T21:40:20Z",
        "closed_at": "2023-03-20T21:40:20Z",
        "author_association": "NONE",
        "body": "### Basic Infos\r\n\r\nWe are working on something that requires me to detect the state of GPIO16 inside user_rf_pre_init() - more specifically, in RF_PRE_INIT() in Arduino IDE. \r\n\r\n#### Platform\r\n\r\n- Hardware:\t\t\t\tESP-12F\r\n- Core Version:\t\t\t3.0.2\r\n- Development Env:\t\tArduino IDE / NONOS_SDK\r\n- Operating System:\t\tMacOS\r\n\r\n### Settings in IDE\r\n\r\n- Module:  \t\t\tNodemcu 1.0 (ESP-12E Module)\r\n- Flash Size: \t\t\t4MB\r\n- lwip Variant:   \t\tv2 Lower Memory\r\n- CPU Frequency:\t\t160MHz\r\n- Upload Using:\t\tSERIAL\r\n- Upload Speed:   \t\t115200\r\n\r\n\r\n### Problem Description\r\n\r\n\r\nWe tried the following code, but it always returns me the same value:\r\n\r\n```cpp\r\nRF_PRE_INIT()\r\n{\r\n  system_phy_set_powerup_option(2);\r\n\u00a0\r\n  GPIO_DIS_OUTPUT(GPIO_ID_PIN(16));\r\n  int value = GPIO_INPUT_GET(GPIO_ID_PIN(16));\r\n  GPIO_OUTPUT_SET(GPIO_ID_PIN(2), value );        //  Set LED based on state of Pin 16\r\n}\r\n```\r\n\r\nWe tried various APIs in NONOS_SDK, but none worked.  For other GPIOs, we were able to do something like:\r\n\r\n```cpp\r\n  PIN_FUNC_SELECT(PERIPHS_IO_MUX_MTDI_U, FUNC_GPIO12);     \r\n      OR\r\n  PIN_FUNC_SELECT(PERIPHS_IO_MUX_MTMS_U, FUNC_GPIO14);\r\n```\r\nbefore we setup the GPIO.  But for GPIO16, there is no equivalent. \r\n\r\nWe understand that GPIO16 is part of the RTC system and is handled differently but we cannot find the appropriate example or documentation on reading GPIO16.\r\n\r\nHelp would be greatly appreciated!\r\n\r\nJoseph",
        "reactions": {
            "url": "https://api.github.com/repos/esp8266/Arduino/issues/8783/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "is_pull_request": false,
        "timeline_events": [
            {
                "event": "commented",
                "actor": "mcspr",
                "created_at": "2023-01-03T18:33:55Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "cross-referenced",
                "actor": "dok-net",
                "created_at": "2023-03-12T01:25:15Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "dok-net",
                "created_at": "2023-03-12T02:10:46Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "dok-net",
                "created_at": "2023-03-12T09:12:05Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "mentioned",
                "actor": "joehui",
                "created_at": "2023-03-12T09:12:05Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "subscribed",
                "actor": "joehui",
                "created_at": "2023-03-12T09:12:05Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "cross-referenced",
                "actor": "dok-net",
                "created_at": "2023-03-12T09:48:35Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "joehui",
                "created_at": "2023-03-13T02:27:52Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "mentioned",
                "actor": "joehui",
                "created_at": "2023-03-13T02:27:52Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "subscribed",
                "actor": "joehui",
                "created_at": "2023-03-13T02:27:52Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "TD-er",
                "created_at": "2023-03-13T07:41:23Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "mentioned",
                "actor": "joehui",
                "created_at": "2023-03-13T07:41:23Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "subscribed",
                "actor": "joehui",
                "created_at": "2023-03-13T07:41:23Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "joehui",
                "created_at": "2023-03-13T07:56:52Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "closed",
                "actor": "mcspr",
                "created_at": "2023-03-20T21:40:20Z",
                "assignee": null,
                "label": null
            }
        ],
        "comments_data": [
            {
                "id": 1370098152,
                "user": "mcspr",
                "body": "> GPIO_DIS_OUTPUT(GPIO_ID_PIN(16));\r\n\r\npinMode?\r\n\r\n> We understand that GPIO16 is part of the RTC system and is handled differently but we cannot find the appropriate example or documentation on reading GPIO16.\r\n\r\nJust use Arduino API? \r\n\r\nGPIO16 is a separate thing, yes, see our `pinMode` and `digital{Read,Write}` implementations on top of the register macros\r\nhttps://github.com/esp8266/Arduino/blob/master/cores/esp8266/core_esp8266_wiring_digital.cpp\r\n(...which is probably due for a rewrite to make it more readable. atm, works best with some kind of code completion / lsp server that expands preprocessor right in the editor...)\r\n\r\nOtherwise, you'd have to use SDK headers as reference for GPIO access\r\nhttps://github.com/esp8266/Arduino/blob/da6ec83b5fdbd5b02f04cf143dcf8e158a8cfd36/tools/sdk/include/eagle_soc.h\r\n\r\nAlso see espressif's RTOS esp8266 component for a much more coherent header and register<->struct API\r\nhttps://github.com/espressif/ESP8266_RTOS_SDK/blob/master/components/esp8266/include/esp8266/gpio_register.h\r\nhttps://github.com/espressif/ESP8266_RTOS_SDK/blob/master/components/esp8266/include/esp8266/gpio_struct.h",
                "created_at": "2023-01-03T18:33:55Z",
                "updated_at": "2023-01-03T18:33:55Z",
                "author_association": "COLLABORATOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1370098152/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1465072411,
                "user": "dok-net",
                "body": "Should https://github.com/esp8266/Arduino/pull/7979 get merged:\r\n\r\n```\r\nRF_PRE_INIT()\r\n{\r\n    system_phy_set_powerup_option(2);\r\n    // ...\r\n}\r\n```\r\n\r\nThe right thing to do will be to overwrite the weak symbol `__get_rf_powerup_mode()` and return 2, then remove the line `system_phy_set_powerup_option(2);`",
                "created_at": "2023-03-12T02:10:46Z",
                "updated_at": "2023-03-12T02:10:46Z",
                "author_association": "CONTRIBUTOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1465072411/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1465134218,
                "user": "dok-net",
                "body": "Let's drill down deeper, though.\r\nFirst, an MCVE that will actually compile:\r\n```\r\n// This Arduino code is specific to the ESP8266\r\n#include \"user_interface.h\"\r\n\r\nRF_PRE_INIT()\r\n{\r\n    system_phy_set_powerup_option(2);\r\n    // ...\r\n}\r\n\r\nvoid setup()\r\n{\r\n}\r\nvoid loop()\r\n{\r\n}\r\n```\r\n\r\n@joehui Did you take into consideration the changes in release 3.0.0, since which WiFi is disabled by default? According to https://www.espressif.com/sites/default/files/documentation/2c-esp8266_non_os_sdk_api_reference_en.pdf, is the parameter value `2` really what you want?\r\n\r\nFast-forward to #7979, `system_phy_set_powerup_option(2)` is default anyway, which only calibrates `VDD33` because WiFi is assumed to be disabled. So there's no need to even overwrite `__get_rf_powerup_mode()` at all. Should WiFi be required, I don't know that it is safe to elide the calibration of TX power (`system_phy_set_powerup_option 0, 1, or 3`).\r\n",
                "created_at": "2023-03-12T09:12:05Z",
                "updated_at": "2023-03-12T09:12:05Z",
                "author_association": "CONTRIBUTOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1465134218/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1465417313,
                "user": "joehui",
                "body": " Our intended functionality is that ONLY when GPIO16 is connected to HIGH (button pressed) during bootup, we would enable RF calibration.\n\nThis is the code we have now, which seems to work.\n\n// Reduce powerup current base on whether GPIO16 is pressed on power upRF_PRE_INIT()\n{\n\u00a0 gpio16_input_conf();\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 //config GPIO16 to input\n\u00a0 if (0==gpio16_input_get())\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 //if setup button is left alone (not pressed)\n\u00a0\u00a0\u00a0 system_phy_set_powerup_option(2); //disable RF calibration (else go ahead with calibration)\n}\n\n===============\nBelow is the code for gpio16_input_conf() and gpio16_input_get().\n\n//-------------------------------------\nvoid ICACHE_FLASH_ATTR gpio16_output_conf(void)\n{\n\u00a0\u00a0\u00a0 WRITE_PERI_REG(PAD_XPD_DCDC_CONF,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 (READ_PERI_REG(PAD_XPD_DCDC_CONF) & 0xffffffbc) | (uint32)0x1);\u00a0\u00a0 // mux configuration for XPD_DCDC to output rtc_gpio0\n\u00a0\u00a0\u00a0 WRITE_PERI_REG(RTC_GPIO_CONF,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 (READ_PERI_REG(RTC_GPIO_CONF) & (uint32)0xfffffffe) | (uint32)0x0);\u00a0 //mux configuration for out enable\n\u00a0\u00a0\u00a0 WRITE_PERI_REG(RTC_GPIO_ENABLE,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 (READ_PERI_REG(RTC_GPIO_ENABLE) & (uint32)0xfffffffe) | (uint32)0x1);\u00a0 //out enable\n}\n//-------------------------------------void ICACHE_FLASH_ATTR gpio16_output_set(uint8 value)\n{\n\u00a0\u00a0\u00a0 WRITE_PERI_REG(RTC_GPIO_OUT,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 (READ_PERI_REG(RTC_GPIO_OUT) & (uint32)0xfffffffe) | (uint32)(value & 1));\n}\n//-------------------------------------void ICACHE_FLASH_ATTR gpio16_input_conf(void)\n{\n\u00a0\u00a0\u00a0 WRITE_PERI_REG(PAD_XPD_DCDC_CONF,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 (READ_PERI_REG(PAD_XPD_DCDC_CONF) & 0xffffffbc) | (uint32)0x1);\u00a0 // mux configuration for XPD_DCDC and rtc_gpio0 connection\n\u00a0\u00a0\u00a0 WRITE_PERI_REG(RTC_GPIO_CONF,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 (READ_PERI_REG(RTC_GPIO_CONF) & (uint32)0xfffffffe) | (uint32)0x0);\u00a0 //mux configuration for out enable\n\u00a0\u00a0\u00a0 WRITE_PERI_REG(RTC_GPIO_ENABLE,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 READ_PERI_REG(RTC_GPIO_ENABLE) & (uint32)0xfffffffe);\u00a0 //out disable\n}\n//-------------------------------------\nuint8 ICACHE_FLASH_ATTR gpio16_input_get(void)\n{\n\u00a0\u00a0\u00a0 return (uint8)(READ_PERI_REG(RTC_GPIO_IN_DATA) & 1);\n}\n    On Sunday, March 12, 2023 at 05:12:16 PM GMT+8, Dirk O. Kaar ***@***.***> wrote:  \n \n \n\n\nLet's drill down deeper, though.\nFirst, an MCVE that will actually compile:\n// This Arduino code is specific to the ESP8266\n#include \"user_interface.h\"\n\nRF_PRE_INIT()\n{\n    system_phy_set_powerup_option(2);\n    // ...\n}\n\nvoid setup()\n{\n}\nvoid loop()\n{\n}\n\n@joehui Did you take into consideration the changes in release 3.0.0, since which WiFi is disabled by default? According to https://www.espressif.com/sites/default/files/documentation/2c-esp8266_non_os_sdk_api_reference_en.pdf, is the parameter value 2 really what you want?\n\nFast-forward to #7979, system_phy_set_powerup_option(2) is default anyway, which only calibrates VDD33 because WiFi is assumed to be disabled. So there's no need to even overwrite __get_rf_powerup_mode() at all. Should WiFi be required, I don't know that it is safe to elide the calibration of TX power (system_phy_set_powerup_option 0, 1, or 3).\n\n\u2014\nReply to this email directly, view it on GitHub, or unsubscribe.\nYou are receiving this because you were mentioned.Message ID: ***@***.***>\n  ",
                "created_at": "2023-03-13T02:27:52Z",
                "updated_at": "2023-03-13T02:27:52Z",
                "author_association": "NONE",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1465417313/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1465650132,
                "user": "TD-er",
                "body": "@joehui \r\nCan you please edit your post to add 3 backticks wrapping the code? \r\nI got the impression some code formatting got lost as it seems like you commented out the function declarations.\r\n",
                "created_at": "2023-03-13T07:41:23Z",
                "updated_at": "2023-03-13T07:41:23Z",
                "author_association": "CONTRIBUTOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1465650132/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1465664549,
                "user": "joehui",
                "body": "Sorry, here's the code again.\r\n\r\n```\r\n//  GPIO16 functions\r\nvoid ICACHE_FLASH_ATTR gpio16_output_conf(void)\r\n{\r\n    WRITE_PERI_REG(PAD_XPD_DCDC_CONF,\r\n                   (READ_PERI_REG(PAD_XPD_DCDC_CONF) & 0xffffffbc) | (uint32)0x1);   // mux configuration for XPD_DCDC to output rtc_gpio0\r\n    WRITE_PERI_REG(RTC_GPIO_CONF,\r\n                   (READ_PERI_REG(RTC_GPIO_CONF) & (uint32)0xfffffffe) | (uint32)0x0);  //mux configuration for out enable\r\n    WRITE_PERI_REG(RTC_GPIO_ENABLE,\r\n                   (READ_PERI_REG(RTC_GPIO_ENABLE) & (uint32)0xfffffffe) | (uint32)0x1);  //out enable\r\n}\r\n\r\nvoid ICACHE_FLASH_ATTR gpio16_output_set(uint8 value)\r\n{\r\n    WRITE_PERI_REG(RTC_GPIO_OUT,\r\n                   (READ_PERI_REG(RTC_GPIO_OUT) & (uint32)0xfffffffe) | (uint32)(value & 1));\r\n}\r\n\r\nvoid ICACHE_FLASH_ATTR gpio16_input_conf(void)\r\n{\r\n    WRITE_PERI_REG(PAD_XPD_DCDC_CONF,\r\n                   (READ_PERI_REG(PAD_XPD_DCDC_CONF) & 0xffffffbc) | (uint32)0x1);  // mux configuration for XPD_DCDC and rtc_gpio0 connection\r\n    WRITE_PERI_REG(RTC_GPIO_CONF,\r\n                   (READ_PERI_REG(RTC_GPIO_CONF) & (uint32)0xfffffffe) | (uint32)0x0);  //mux configuration for out enable\r\n    WRITE_PERI_REG(RTC_GPIO_ENABLE,\r\n                   READ_PERI_REG(RTC_GPIO_ENABLE) & (uint32)0xfffffffe);  //out disable\r\n}\r\n\r\nuint8 ICACHE_FLASH_ATTR gpio16_input_get(void)\r\n{\r\n    return (uint8)(READ_PERI_REG(RTC_GPIO_IN_DATA) & 1);\r\n}\r\n//  GPIO16 functions End\r\n\r\n\r\n\r\n// Reduce powerup current base on whether GPIO16 is pressed on power up\r\nRF_PRE_INIT()\r\n{\r\n  gpio16_input_conf();                //config GPIO16 to input\r\n  if (0==gpio16_input_get())          //if setup button is left alone (not pressed)\r\n    system_phy_set_powerup_option(2); //disable RF calibration (else go ahead with calibration)\r\n}\r\n```\r\n\r\n",
                "created_at": "2023-03-13T07:56:52Z",
                "updated_at": "2023-03-13T07:57:16Z",
                "author_association": "NONE",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1465664549/reactions",
                    "total_count": 1,
                    "+1": 1,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            }
        ]
    },
    {
        "id": 1516805216,
        "number": 8782,
        "title": "parseFloat is not able to parse positive float numbers",
        "state": "closed",
        "locked": false,
        "assignees": [
            "d-a-v"
        ],
        "labels": [
            "type: bug",
            "component: core"
        ],
        "milestone": null,
        "created_at": "2023-01-03T00:03:13Z",
        "updated_at": "2023-01-03T19:14:11Z",
        "closed_at": "2023-01-03T19:14:11Z",
        "author_association": "NONE",
        "body": "### Basic Infos\r\n\r\n- [X] This issue complies with the [issue POLICY doc](https://github.com/esp8266/Arduino/blob/master/POLICY.md).\r\n- [X] I have read the documentation at [readthedocs](https://arduino-esp8266.readthedocs.io/en/latest) and the issue is not addressed there.\r\n- [X] I have tested that the issue is present in current master branch (aka latest git).\r\n- [X] I have searched the issue tracker for a similar issue.\r\n- [ ] If there is a stack dump, I have decoded it.\r\n- [X] I have filled out all fields below.\r\n\r\n#### Platform\r\n\r\n- Hardware:\t\t\t\tAdafruit Feather HUZZAH ESP8266\r\n- Core Version:\t\t\t[latest git hash or date]\r\n- Development Env:\t\tArduino IDE\r\n- Operating System:\t\tWindows\r\n\r\n### Settings in IDE\r\n\r\n- Module:  \t\t\tGeneric ESP8266 Module\r\n- Flash Mode:\t\t\t[qio|dio|other]\r\n- Flash Size: \t\t[4MB/1MB]\r\n- lwip Variant:   [v1.4|v2 Lower Memory|Higher Bandwidth]\r\n- Reset Method:\t\t[ck|nodemcu]\r\n- Flash Frequency:\t[40Mhz]\r\n- CPU Frequency:\t\t[160MHz]\r\n- Upload Using:\t\t[SERIAL]\r\n- Upload Speed:   11520\r\n\r\n\r\n### Problem Description\r\nparseFloat is not able to parse positive float numbers\r\n\r\nDetailed problem description goes here.\r\nI want to send float numbers from Arduino UNO to ESP8266. I2c was my first choice but unfortunately ESP8266 does not support receiver mode and I can not make ESP8266 master as there are time critical threads running on UNO and when it is free, it sends telemetry data to ESP8266. \r\n\r\nHence, I am attempting to receive data using serial and parseFloat. However, the parser is not able to parse the positive float numbers and also does not allow me to modify the SKIP parameters. \r\n\r\nAny help would be greatly appreciated.\r\n\r\n\r\n**Sender Code :**  (Arduino UNO)\r\n```cpp\r\nvoid setup()\r\n{\r\n  Serial.begin(115200);\r\n}\r\n\r\nfloat x = 157.50;\r\n\r\nvoid loop()\r\n{\r\n  // Start the packet\r\n  Serial.print(x);\r\n  x++;\r\n  delay(100);\r\n}\r\n```\r\n**Receiver Code : (ESP8266)**\r\n```cpp\r\n#include <Arduino.h>\r\n#include <Stream.h>\r\n\r\nvoid setup() {\r\n  Serial.begin(115200);\r\n}\r\n\r\nvoid loop() {\r\n  if (Serial.available() > 0) {\r\n    float myFloat = Serial.parseFloat();\r\n\r\n    //prints the received float number\r\n    Serial.print(\"I received: \");\r\n    Serial.println(myFloat);\r\n  }\r\n}\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/esp8266/Arduino/issues/8782/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "is_pull_request": false,
        "timeline_events": [
            {
                "event": "labeled",
                "actor": "d-a-v",
                "created_at": "2023-01-03T13:25:51Z",
                "assignee": null,
                "label": "type: bug"
            },
            {
                "event": "labeled",
                "actor": "d-a-v",
                "created_at": "2023-01-03T13:25:51Z",
                "assignee": null,
                "label": "component: core"
            },
            {
                "event": "assigned",
                "actor": "d-a-v",
                "created_at": "2023-01-03T13:25:53Z",
                "assignee": "d-a-v",
                "label": null
            },
            {
                "event": "cross-referenced",
                "actor": "d-a-v",
                "created_at": "2023-01-03T15:44:12Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "closed",
                "actor": "mcspr",
                "created_at": "2023-01-03T19:14:11Z",
                "assignee": null,
                "label": null
            }
        ],
        "comments_data": []
    },
    {
        "id": 1527807005,
        "number": 8798,
        "title": "I am new to Arduino. I have installed the latest ESP8266 core for my project but the version.h error still occur. I could not find any solutions yet. Help!",
        "state": "closed",
        "locked": false,
        "assignees": [],
        "labels": [],
        "milestone": null,
        "created_at": "2023-01-10T18:07:31Z",
        "updated_at": "2023-01-10T22:26:53Z",
        "closed_at": "2023-01-10T18:50:22Z",
        "author_association": "NONE",
        "body": "```\r\nIn file included from c:\\Users\\Acer\\Documents\\Arduino\\libraries\\blynk-library-master\\src/Blynk/BlynkApi.h:37:0,\r\n                 from c:\\Users\\Acer\\Documents\\Arduino\\libraries\\blynk-library-master\\src/Blynk.h:14,\r\n                 from C:\\Users\\Acer\\AppData\\Local\\Temp\\.arduinoIDE-unsaved2023010-9940-1bbtkg3.qoef\\sketch_jan10a\\sketch_jan10a.ino:6:\r\nc:\\Users\\Acer\\Documents\\Arduino\\libraries\\blynk-library-master\\src/Blynk/BlynkTimer.h:38:44: error: missing binary operator before token \"(\"\r\n #if defined(__has_include) && __has_include(<functional>)\r\n                                            ^\r\nIn file included from C:\\Users\\Acer\\AppData\\Local\\Temp\\.arduinoIDE-unsaved2023010-9940-1bbtkg3.qoef\\sketch_jan10a\\sketch_jan10a.ino:8:0:\r\nc:\\Users\\Acer\\Documents\\Arduino\\libraries\\blynk-library-master\\src/BlynkSimpleEsp8266.h:18:21: fatal error: version.h: No such file or directory\r\n #include <version.h>\r\n                     ^\r\ncompilation terminated.\r\n\r\nexit status 1\r\n\r\nCompilation error: exit status 1\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/esp8266/Arduino/issues/8798/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "is_pull_request": false,
        "timeline_events": [
            {
                "event": "commented",
                "actor": "mcspr",
                "created_at": "2023-01-10T18:46:52Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "mcspr",
                "created_at": "2023-01-10T18:50:22Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "closed",
                "actor": "mcspr",
                "created_at": "2023-01-10T18:50:22Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "cross-referenced",
                "actor": "mcspr",
                "created_at": "2023-01-10T19:45:15Z",
                "assignee": null,
                "label": null
            }
        ],
        "comments_data": [
            {
                "id": 1377698494,
                "user": "mcspr",
                "body": "<s>Looks like some kind of misunderstanding from the lib part, I think this should refer to core_version.h?\r\nhttps://github.com/blynkkk/blynk-library/commit/2bf72bffdb99219922b05d1bbd66141bae93b0c2\r\nhttps://github.com/blynkkk/blynk-library/issues/432 brought this up before, but was closed</s>\r\n\r\n*edit* ...unless they meant to refer to this one\r\nhttps://github.com/esp8266/Arduino/blob/master/tools/sdk/include/version.h",
                "created_at": "2023-01-10T18:46:52Z",
                "updated_at": "2023-01-10T18:49:08Z",
                "author_association": "COLLABORATOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1377698494/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1377702298,
                "user": "mcspr",
                "body": "Yep, SDK one. Check your install once more! This should work just fine circa 2018",
                "created_at": "2023-01-10T18:50:22Z",
                "updated_at": "2023-01-10T18:50:22Z",
                "author_association": "COLLABORATOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1377702298/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            }
        ]
    },
    {
        "id": 1524761733,
        "number": 8794,
        "title": "core_esp8266_features.h",
        "state": "closed",
        "locked": false,
        "assignees": [],
        "labels": [],
        "milestone": null,
        "created_at": "2023-01-09T00:53:17Z",
        "updated_at": "2023-01-11T00:48:32Z",
        "closed_at": "2023-01-11T00:48:31Z",
        "author_association": "NONE",
        "body": "This issue is regard on your latest updates 2 days ago, before that update everything is Okay.\r\n\r\n```\r\nIn file included from c:\\Users\\abieg\\OneDrive\\Documents\\Arduino\\libraries\\WebSockets\\src\\libb64\\cdecode.c:9:\r\nC:\\Users\\abieg\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.0\\cores\\esp8266/core_esp8266_features.h:141:42: error: expected ',' or ';' before 'esp_is_8285'\r\n  141 |     bool __attribute__((const, nothrow)) esp_is_8285();\r\n      |                                          ^~~~~~~~~~~\r\nC:\\Users\\abieg\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.0\\cores\\esp8266/core_esp8266_features.h:148:1: error: expected identifier or '(' before '}' token\r\n  148 | }\r\n      | ^\r\nIn file included from c:\\Users\\abieg\\OneDrive\\Documents\\Arduino\\libraries\\WebSockets\\src\\libb64\\cencode.c:9:\r\nC:\\Users\\abieg\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.0\\cores\\esp8266/core_esp8266_features.h:141:42: error: expected ',' or ';' before 'esp_is_8285'\r\n  141 |     bool __attribute__((const, nothrow)) esp_is_8285();\r\n      |                                          ^~~~~~~~~~~\r\nC:\\Users\\abieg\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.0\\cores\\esp8266/core_esp8266_features.h:148:1: error: expected identifier or '(' before '}' token\r\n  148 | }\r\n      | ^\r\n\r\nexit status 1\r\n\r\nCompilation error: exit status 1\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/esp8266/Arduino/issues/8794/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "is_pull_request": false,
        "timeline_events": [
            {
                "event": "commented",
                "actor": "d-a-v",
                "created_at": "2023-01-09T08:19:04Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "cross-referenced",
                "actor": "mcspr",
                "created_at": "2023-01-09T15:52:08Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "closed",
                "actor": "mcspr",
                "created_at": "2023-01-11T00:48:32Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "cross-referenced",
                "actor": "mcspr",
                "created_at": "2023-01-11T02:39:05Z",
                "assignee": null,
                "label": null
            }
        ],
        "comments_data": [
            {
                "id": 1375252072,
                "user": "d-a-v",
                "body": "This issue seems like an installation error.\r\nLine number is not matching, and this code passes all CI tests.\r\n\r\nhttps://github.com/esp8266/Arduino/blob/3.1.0/cores/esp8266/core_esp8266_features.h#L132\r\n\r\nCan you try and reinstall the complete core for example by first removing it from the [`Arduino15` directory from `Appdata`](https://forum.arduino.cc/t/uninstall-for-a-fresh-re-install/349503) ?",
                "created_at": "2023-01-09T08:19:04Z",
                "updated_at": "2023-01-09T08:19:04Z",
                "author_association": "COLLABORATOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1375252072/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            }
        ]
    },
    {
        "id": 1531092944,
        "number": 8800,
        "title": "Multiple Instances of WiFiClientSecure is not working.",
        "state": "closed",
        "locked": false,
        "assignees": [],
        "labels": [],
        "milestone": null,
        "created_at": "2023-01-12T17:17:52Z",
        "updated_at": "2023-01-14T14:08:14Z",
        "closed_at": "2023-01-12T17:22:36Z",
        "author_association": "NONE",
        "body": "### Basic Infos\r\n\r\nWe are working on something that requires multiple instances of WiFiClientSecure, more specifically we want to connect to a secure mqtt broker and a https server.\r\n\r\n#### Platform\r\n\r\n- Hardware: ESP-12E\r\n- Core Version: 3.1.0\r\n- Development Env: Arduino IDE \r\n- Operating System: Windows\r\n\r\n### Settings in IDE\r\n\r\n- Module: Nodemcu 1.0 (ESP-12E Module)\r\n- Flash Size: 4MB\r\n- lwip Variant: v2 Lower Memory\r\n- CPU Frequency:  80MHz\r\n- Upload Using: SERIAL\r\n- Upload Speed: 115200\r\n\r\n### Problem Description\r\n\r\nWe tried the following code but couldn't get it to work. First client is connected and working perfectly but other is not.\r\n\r\n```\r\n#include <Arduino.h>\r\n#include <PubSubClient.h>\r\n#include <ESP8266WiFiMulti.h>\r\n#include <WiFiClientSecureBearSSL.h>\r\n#include <ESP8266httpUpdate.h>\r\n\r\nESP8266WiFiMulti WiFiMulti;\r\n\r\nconst char* ca_cert = \"Root CA Certificate Here\";\r\nconst char* client_cert = \"Client Certificate Here\":\r\nconst char* client_key = \"Client Private Key Here\";\r\n\r\nPubSubClient PubSub_1;\r\nPubSubClient PubSub_2;\r\nBearSSL::WiFiClientSecure wifi_client_1;\r\nBearSSL::WiFiClientSecure wifi_client_2;\r\n\r\nBearSSL::X509List* rootCA_1 = NULL;\r\nBearSSL::X509List* clientCert_1 = NULL;\r\nBearSSL::PrivateKey* clientKey_1 = NULL;\r\n\r\nBearSSL::X509List* rootCA_2 = NULL;\r\nBearSSL::X509List* clientCert_2 = NULL;\r\nBearSSL::PrivateKey* clientKey_2 = NULL;\r\n\r\nconst char* topic = \"/tenants/project1/devices/1/actions\";\r\n\r\nvoid mqttCallback(char* topic, byte* message, unsigned int length) {\r\n  Serial.println(\"I am mqttCallback()\");\r\n\r\n  Serial.print(\"{topic : \");\r\n  Serial.print(topic);\r\n  Serial.print(\", message : \");\r\n  for (int i = 0; i < length; i++) {\r\n    Serial.print((char)message[i]);\r\n  }\r\n  Serial.println(\"}\");\r\n}\r\n\r\nvoid setClock() {\r\n   // Set time via NTP, as required for x.509 validation\r\n  configTime(19800, 0, \"pool.ntp.org\"); \r\n \r\n  time_t now = time(nullptr);\r\n  while (now < 8 * 3600 * 2) {\r\n    delay(500);\r\n    Serial.print(\".\");\r\n    now = time(nullptr);\r\n  }\r\n  \r\n  struct tm * timeinfo;\r\n  time(&now);\r\n  // Serial.println(now);\r\n  timeinfo = localtime(&now);\r\n\r\n  Serial.print(\"Current time: \");\r\n  Serial.print(asctime(timeinfo));\r\n  Serial.println();\r\n}\r\n\r\nvoid doSomething() {  \r\n\r\n    rootCA_1 = new BearSSL::X509List(ca_cert);\r\n    clientCert_1 = new BearSSL::X509List(client_cert);\r\n    clientKey_1 = new BearSSL::PrivateKey(client_key);\r\n\r\n    rootCA_2 = new BearSSL::X509List(ca_cert);\r\n    clientCert_2 = new BearSSL::X509List(client_cert);\r\n    clientKey_2 = new BearSSL::PrivateKey(client_key);\r\n\r\n    wifi_client_1.setTrustAnchors(rootCA_1);\r\n    wifi_client_1.setClientRSACert(clientCert_1, clientKey_1);\r\n\r\n    wifi_client_2.setTrustAnchors(rootCA_2);\r\n    wifi_client_2.setClientRSACert(clientCert_2, clientKey_2);\r\n\r\n    PubSub_1.setClient(wifi_client_1);\r\n    PubSub_1.setCallback(mqttCallback);\r\n    PubSub_1.setServer(\"cloud.bytebeam.io\", 8883);\r\n\r\n    if(!PubSub_1.connect(\"Client_1\")) {\r\n      Serial.println(\"error while connecting PubSub_1\");\r\n      Serial.printf(\"PubSub_1 State is %d\\n\", PubSub_1.state());\r\n    } else {\r\n      Serial.println(\"PubSub_1 Connected\");\r\n    }\r\n\r\n    if(!PubSub_1.subscribe(topic)) {\r\n      Serial.println(\"PubSub_1 subscribe failed\");\r\n    } else {\r\n      Serial.println(\"PubSub_1 subscribed\");\r\n    }\r\n    \r\n    PubSub_2.setClient(wifi_client_2);\r\n    PubSub_2.setCallback(mqttCallback);\r\n    PubSub_2.setServer(\"cloud.bytebeam.io\", 8883);\r\n\r\n    if(!PubSub_2.connect(\"Client_2\")) {\r\n      Serial.println(\"error while connecting PubSub_2\");\r\n      Serial.printf(\"PubSub_2 State is %d\\n\", PubSub_2.state());\r\n    } else {\r\n      Serial.println(\"PubSub_2 Connected\");\r\n    }\r\n\r\n    if(!PubSub_2.subscribe(topic)) {\r\n      Serial.println(\"PubSub_2 subscribe failed\");\r\n    } else {\r\n      Serial.println(\"PubSub_2 subscribed\");\r\n    }\r\n\r\n    Serial.println();\r\n\r\n}\r\n\r\nvoid setup() {\r\n\r\n  Serial.begin(9600);\r\n  Serial.println();\r\n\r\n  WiFi.mode(WIFI_STA);\r\n  WiFiMulti.addAP(\"SSID\", \"PASSWORD\");\r\n\r\n  if(WiFiMulti.run() == WL_CONNECTED) {\r\n    Serial.println(\"Ok, wifi is connected\");\r\n  }\r\n\r\n  setClock();\r\n  doSomething();\r\n}\r\n\r\nvoid loop() {\r\n  \r\n  if(!PubSub_1.loop()) {\r\n    Serial.println(\"Pubsub_1 loop failed\");\r\n  } else {\r\n    Serial.println(\"Pubsub_1 looped\");\r\n  }\r\n\r\n  if(!PubSub_2.loop()) {\r\n    Serial.println(\"Pubsub_2 loop failed\");\r\n  } else {\r\n     Serial.println(\"Pubsub_2 looped\");\r\n  }\r\n\r\n  delay(2000);\r\n}\r\n```\r\n\r\n### Serial Logs\r\n\r\n```\r\nOk, wifi is connected\r\n.Current time: Thu Jan 12 22:11:09 2023\r\n\r\nPubSub_1 Connected\r\nPubSub_1 subscribed\r\nerror while connecting PubSub_2\r\nPubSub_2 State is -2\r\nPubSub_2 subscribe failed\r\n\r\nPubsub_1 looped\r\nPubsub_2 loop failed\r\nPubsub_1 looped\r\nPubsub_2 loop failed\r\nPubsub_1 looped\r\nPubsub_2 loop failed\r\nPubsub_1 looped\r\nPubsub_2 loop failed\r\n```\r\n\r\nAny help would be greatly appreciated!\r\n\r\nThanks in Advance\r\nMayank",
        "reactions": {
            "url": "https://api.github.com/repos/esp8266/Arduino/issues/8800/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "is_pull_request": false,
        "timeline_events": [
            {
                "event": "commented",
                "actor": "earlephilhower",
                "created_at": "2023-01-12T17:22:36Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "closed",
                "actor": "earlephilhower",
                "created_at": "2023-01-12T17:22:37Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "narangmayank",
                "created_at": "2023-01-12T18:14:40Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "mentioned",
                "actor": "earlephilhower",
                "created_at": "2023-01-12T18:14:40Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "subscribed",
                "actor": "earlephilhower",
                "created_at": "2023-01-12T18:14:40Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "earlephilhower",
                "created_at": "2023-01-12T18:27:18Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "narangmayank",
                "created_at": "2023-01-13T12:10:34Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "mentioned",
                "actor": "earlephilhower",
                "created_at": "2023-01-13T12:10:35Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "subscribed",
                "actor": "earlephilhower",
                "created_at": "2023-01-13T12:10:35Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "narangmayank",
                "created_at": "2023-01-13T16:21:09Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "mentioned",
                "actor": "earlephilhower",
                "created_at": "2023-01-13T16:21:10Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "subscribed",
                "actor": "earlephilhower",
                "created_at": "2023-01-13T16:21:10Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "earlephilhower",
                "created_at": "2023-01-13T16:39:38Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "narangmayank",
                "created_at": "2023-01-13T16:58:58Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "earlephilhower",
                "created_at": "2023-01-13T21:17:43Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "narangmayank",
                "created_at": "2023-01-14T10:26:33Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "d-a-v",
                "created_at": "2023-01-14T11:56:02Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "narangmayank",
                "created_at": "2023-01-14T14:08:14Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "mentioned",
                "actor": "d-a-v",
                "created_at": "2023-01-14T14:08:14Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "subscribed",
                "actor": "d-a-v",
                "created_at": "2023-01-14T14:08:14Z",
                "assignee": null,
                "label": null
            }
        ],
        "comments_data": [
            {
                "id": 1380753560,
                "user": "earlephilhower",
                "body": "You're out of memory.\r\n\r\nEach SSL connection requires a contiguous buffer of 16KB to hold the encrypted data before decryption.  There is also a ~7KB additional stack required to run the SSL code that comes out of heap as well.  Fitting 2 connection states in RAM isn't possible by default.\r\n\r\nLook at the MFLN example for a way of shrinking the buffers required, but note that it requires support on the remote server end as well.\r\n\r\nhttps://github.com/esp8266/Arduino/blob/master/libraries/ESP8266WiFi/examples/BearSSL_MaxFragmentLength/BearSSL_MaxFragmentLength.ino",
                "created_at": "2023-01-12T17:22:36Z",
                "updated_at": "2023-01-12T17:22:36Z",
                "author_association": "COLLABORATOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1380753560/reactions",
                    "total_count": 1,
                    "+1": 1,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1380807475,
                "user": "narangmayank",
                "body": "Thanks @earlephilhower for the update. Just curious to know whether any ESP8266 Hardware out there supports 2 parallel secure clients without MFLN. ",
                "created_at": "2023-01-12T18:14:40Z",
                "updated_at": "2023-01-12T18:14:40Z",
                "author_association": "NONE",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1380807475/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1380829305,
                "user": "earlephilhower",
                "body": "All ESP8266 have the same amount of on-chip RAM, so without doing extraordinary things (i.e. adding an external (P)SRAM chip and using the virtual memory mode) it's not really possible.\r\n\r\nNote that MFLN will \"work,\" even if unsupported at the server end, as long as any message/packet sent across fits within the allocated buffer.  I..e if you can guarantee never sending or receiving packets > 7KB, then you can set an 8KB MFLN size and it will run fine.  But, as soon as a message grows beyond the MFLN buffer the connection will fail.",
                "created_at": "2023-01-12T18:27:18Z",
                "updated_at": "2023-01-12T18:27:18Z",
                "author_association": "COLLABORATOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1380829305/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1381768610,
                "user": "narangmayank",
                "body": "Thank you so much @earlephilhower for the clear insights :)",
                "created_at": "2023-01-13T12:10:34Z",
                "updated_at": "2023-01-13T12:10:34Z",
                "author_association": "NONE",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1381768610/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1382079573,
                "user": "narangmayank",
                "body": "### Problem Description\r\n\r\nHi @earlephilhower, as per your suggestion by changing the buffers size we are able to setup 2 clients, but I observed when the second client is getting connected the first client loses its connectivity. can you please help here?   \r\n\r\n```\r\n#include <Arduino.h>\r\n#include <time.h>\r\n#include <ESP8266WiFiMulti.h>\r\n#include <PubSubClient.h>\r\n#include <WiFiClientSecureBearSSL.h>\r\n#include <ESP8266httpUpdate.h>\r\n\r\nESP8266WiFiMulti WiFiMulti;\r\n\r\nchar ca_cert[] = \"Root CA Cert\";\r\nchar client_cert[] = \"Client Cert\";\r\nchar client_key[] = \"Client Key\";\r\n\r\nPubSubClient PubSub_1;\r\nBearSSL::WiFiClientSecure wifi_client_1;\r\nBearSSL::WiFiClientSecure wifi_client_2;\r\n\r\nBearSSL::X509List* rootCA_1 = NULL;\r\nBearSSL::X509List* clientCert_1 = NULL;\r\nBearSSL::PrivateKey* clientKey_1 = NULL;\r\n\r\nconst char* topic = \"/tenants/project1/devices/1/actions\";\r\n\r\nbool updateFlag = false;\r\n\r\nvoid mqttCallback(char* topic, byte* message, unsigned int length) {\r\n  Serial.println(\"I am mqttCallback()\");\r\n\r\n  Serial.print(\"{topic : \");\r\n  Serial.print(topic);\r\n  Serial.print(\", message : \");\r\n  for (int i = 0; i < length; i++) {\r\n    Serial.print((char)message[i]);\r\n  }\r\n  Serial.println(\"}\");\r\n\r\n  updateFlag = true;\r\n}\r\n\r\n// function to sync time from ntp server with predefined credentials\r\nvoid setClock() {\r\n   // Set time via NTP, as required for x.509 validation\r\n  configTime(19800, 0, \"pool.ntp.org\"); \r\n \r\n  time_t now = time(nullptr);\r\n  while (now < 8 * 3600 * 2) {\r\n    delay(500);\r\n    Serial.print(\".\");\r\n    now = time(nullptr);\r\n  }\r\n  \r\n  struct tm * timeinfo;\r\n  time(&now);\r\n  // Serial.println(now);\r\n  timeinfo = localtime(&now);\r\n\r\n  Serial.print(\"Current time: \");\r\n  Serial.print(asctime(timeinfo));\r\n}\r\n\r\nvoid doSomething() {  \r\n    Serial.printf(\"Free Heap : %d\\n\", ESP.getFreeHeap());    \r\n\r\n    rootCA_1 = new BearSSL::X509List(ca_cert);\r\n    clientCert_1 = new BearSSL::X509List(client_cert);\r\n    clientKey_1 = new BearSSL::PrivateKey(client_key);\r\n\r\n    Serial.printf(\"Free Heap : %d\\n\", ESP.getFreeHeap());  \r\n\r\n    wifi_client_1.setTrustAnchors(rootCA_1);\r\n    wifi_client_1.setClientRSACert(clientCert_1, clientKey_1);\r\n    wifi_client_1.setBufferSizes(4096, 4096);\r\n\r\n    wifi_client_2.setTrustAnchors(rootCA_1);\r\n    wifi_client_2.setClientRSACert(clientCert_1, clientKey_1);\r\n    wifi_client_2.setBufferSizes(4096, 4096);\r\n\r\n    Serial.printf(\"Free Heap : %d\\n\", ESP.getFreeHeap());\r\n\r\n    PubSub_1.setClient(wifi_client_1);\r\n    PubSub_1.setCallback(mqttCallback);\r\n    PubSub_1.setServer(\"cloud.bytebeam.io\", 8883);\r\n\r\n    Serial.println(\"Connecting devices...\");\r\n\r\n    if(!PubSub_1.connect(\"Client_1\")) {\r\n      Serial.println(\"error while connecting PubSub_1\");\r\n      Serial.printf(\"PubSub_1 State is %d\\n\", PubSub_1.state());\r\n    } else {\r\n      Serial.println(\"PubSub_1 Connected\");\r\n    }\r\n\r\n    if(!PubSub_1.subscribe(topic)) {\r\n      Serial.println(\"PubSub_1 subscribe failed\");\r\n    } else {\r\n      Serial.println(\"PubSub_1 subscribed\");      \r\n    }\r\n}\r\n\r\nvoid setup() {\r\n\r\n  Serial.begin(9600);\r\n  Serial.println();\r\n\r\n  WiFi.mode(WIFI_STA);\r\n  WiFiMulti.addAP(\"SSID\", \"PASSWORD\");\r\n\r\n  if(WiFiMulti.run() == WL_CONNECTED) {\r\n    Serial.println(\"Ok, wifi is connected\");\r\n  }\r\n\r\n  setClock();\r\n\r\n  doSomething();\r\n}\r\n\r\nvoid HTTPUpdateStarted() {\r\n  Serial.println(\"CALLBACK:  HTTP update process started\");\r\n}\r\n\r\nvoid HTTPUpdateFinished() {\r\n  Serial.println(\"CALLBACK:  HTTP update process finished\");\r\n}\r\n\r\nvoid HTTPUpdateProgress(int cur, int total) {\r\n  static int loopVar = 0;\r\n  static int percentOffset = 10;\r\n  static int progressPercent = 0;\r\n\r\n  Serial.printf(\"CALLBACK:  HTTP update process at %d of %d bytes...\\n\", cur, total);\r\n  progressPercent = (((float)cur / (float)total) * 100.00);\r\n\r\n  if(progressPercent == loopVar ) {\r\n   \r\n    // dummy publish \r\n    if(PubSub_1.publish(topic, \"{\\\"sensor\\\":\\\"gps\\\",\\\"time\\\":1351824120,\\\"data\\\":[48.756080,2.302038]}\")) {\r\n      Serial.println(\"publish done\");\r\n    } else {\r\n      Serial.println(\"publish failed\");\r\n    }\r\n      loopVar = loopVar + percentOffset;\r\n  }\r\n}\r\n\r\nvoid HTTPUpdateError(int err) {\r\n  Serial.printf(\"CALLBACK:  HTTP update fatal error code %d\\n\", err);\r\n}\r\n\r\nvoid loop() {\r\n  \r\n  if(!PubSub_1.loop()) {\r\n    Serial.println(\"Pubsub_1 loop failed\");\r\n  } else {\r\n     Serial.println(\"Pubsub_1 looped\");\r\n  }\r\n\r\n  if(updateFlag) {\r\n    ESPhttpUpdate.rebootOnUpdate(false);\r\n    ESPhttpUpdate.setLedPin(2, LOW);\r\n\r\n    /* set the update callbacks */\r\n    ESPhttpUpdate.onStart(HTTPUpdateStarted);\r\n    ESPhttpUpdate.onEnd(HTTPUpdateFinished);\r\n    ESPhttpUpdate.onProgress(HTTPUpdateProgress);\r\n    ESPhttpUpdate.onError(HTTPUpdateError);\r\n\r\n    t_httpUpdate_return ret = ESPhttpUpdate.update(wifi_client_2, \"https_url_comes_here\");\r\n\r\n    switch (ret) {\r\n      case HTTP_UPDATE_FAILED:\r\n\r\n        /* If update failed then we will reach here, just log the error and send failure message to the server */\r\n        Serial.printf(\"HTTP_UPDATE_FAILED Error (%d): %s\\n\", ESPhttpUpdate.getLastError(), ESPhttpUpdate.getLastErrorString().c_str());\r\n  \r\n        break;\r\n\r\n      case HTTP_UPDATE_NO_UPDATES:\r\n        Serial.println(\"HTTP_UPDATE_NO_UPDATES\");\r\n        break;\r\n\r\n      case HTTP_UPDATE_OK:\r\n        Serial.println(\"HTTP_UPDATE_OK\");\r\n\r\n        /* If update is successfull then we will reach here, just save the OTA information and reboot the chip */\r\n\r\n        break;\r\n      }\r\n\r\n    updateFlag = false;\r\n  }\r\n\r\n  delay(2000);\r\n}\r\n```\r\n\r\n### Serial Logs\r\n\r\n```\r\nOk, wifi is connected\r\n.Current time: Fri Jan 13 21:47:46 2023\r\nFree Heap : 36624\r\nFree Heap : 32168\r\nFree Heap : 32168\r\nConnecting devices...\r\nPubSub_1 Connected\r\nPubSub_1 subscribed\r\nPubsub_1 looped\r\nPubsub_1 looped\r\nPubsub_1 looped\r\nI am mqttCallback()\r\n{topic : /tenants/project1/devices/1/actions, message : {\"name\":\"update_firmware\",\"id\":\"4046\",\"payload\":\"{\\\"content-length\\\":449280,\\\"status\\\":false,\\\"url\\\":\\\"https://firmware.cloud.bytebeam.io/api/v1/firmwares/13.1/artifact\\\",\\\"version\\\":\\\"13.1\\\"}\",\"kind\":\"process\"}}\r\nPubsub_1 looped\r\nCALLBACK:  HTTP update process started\r\nCALLBACK:  HTTP update process at 0 of 449280 bytes...\r\npublish failed\r\nCALLBACK:  HTTP update process at 0 of 449280 bytes...\r\nCALLBACK:  HTTP update process at 4096 of 449280 bytes...\r\nCALLBACK:  HTTP update process at 8192 of 449280 bytes...\r\nCALLBACK:  HTTP update process at 12288 of 449280 bytes...\r\nCALLBACK:  HTTP update process at 16384 of 449280 bytes...\r\nCALLBACK:  HTTP update process at 20480 of 449280 bytes...\r\nCALLBACK:  HTTP update process at 24576 of 449280 bytes...\r\nCALLBACK:  HTTP update process at 28672 of 449280 bytes...\r\nCALLBACK:  HTTP update process at 32768 of 449280 bytes...\r\nCALLBACK:  HTTP update process at 36864 of 449280 bytes...\r\nCALLBACK:  HTTP update process at 40960 of 449280 bytes...\r\nCALLBACK:  HTTP update process at 45056 of 449280 bytes...\r\npublish failed\r\nCALLBACK:  HTTP update process at 49152 of 449280 bytes...\r\nCALLBACK:  HTTP update process at 53248 of 449280 bytes...\r\nCALLBACK:  HTTP update process at 57344 of 449280 bytes...\r\n```\r\n\r\nAlways Thankful for any help!\r\n\r\nMayank",
                "created_at": "2023-01-13T16:21:09Z",
                "updated_at": "2023-01-13T16:24:25Z",
                "author_association": "NONE",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1382079573/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1382110276,
                "user": "earlephilhower",
                "body": "I'd enable full debugging and rerun and see what spits out.\r\n\r\nYou've got a lot going on w/both the sketch and the 3rd party library.  If the issue is in the core then you're probably hitting an OOM error condition (i.e. shrink those buffers even more if you can, or look at the add'l IRAM heap configs) or a timeout on one or the other because SSL is very slow on the 8266 (make sure you're at 160MHz!).",
                "created_at": "2023-01-13T16:39:38Z",
                "updated_at": "2023-01-13T16:39:38Z",
                "author_association": "COLLABORATOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1382110276/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1382136430,
                "user": "narangmayank",
                "body": "I really appreciate your help.\r\n\r\nWe tried with 2K and 4K buffer sizes with 80 MHZ CPU. We will update the CPU to 160MHz.\r\n\r\nUpdate:\r\nI tried with 2k buffer size with 160MHz CPU but couldn't make it work.",
                "created_at": "2023-01-13T16:58:58Z",
                "updated_at": "2023-01-13T18:39:42Z",
                "author_association": "NONE",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1382136430/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1382401156,
                "user": "earlephilhower",
                "body": ">  I tried with 2k buffer size with 160MHz CPU but couldn't make it work.\r\n\r\nMy guess is that the buffer shrink is causing the failure.  AS I said, the receiver needs to keep a copy of the full encrypted message in RAM and can't decode it unless it's all there.  So, if you got a response from the other end that was larger than your buffer the TLS connection would have to fail.  (With MFLN, the server promises never to send messages larger than whatever was specified so this isn't a problem there...the server will break things up properly to make it happen.)\r\n\r\nI'd go up to 8K and try again at 160MHz.  There might be enough space for 2 8K buffers + other stuff in the 8266 RAM.  You could also look at the add'l heap options to eek out a few more (slow) KB.",
                "created_at": "2023-01-13T21:17:43Z",
                "updated_at": "2023-01-13T21:17:43Z",
                "author_association": "COLLABORATOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1382401156/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1382708675,
                "user": "narangmayank",
                "body": "I really disagree on the point that buffer shrink is causing the issue because I tested both the clients separately with 2k buffer size and 160MHZ CPU frequency. Therefore, it's hard to believe that server response is larger than the buffer size. can you check for the possibility of error in the core with 2k and 4k buffer sizes because we are building for the community, and we really want to optimize the things here as much as possible.\r\n\r\nAlso, I really don't know much about add heap options, I will be happy if you can share some relevant reference.",
                "created_at": "2023-01-14T10:26:33Z",
                "updated_at": "2023-01-14T10:26:33Z",
                "author_association": "NONE",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1382708675/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1382721929,
                "user": "d-a-v",
                "body": "> Also, I really don't know much about add heap options, I will be happy if you can share some relevant reference.\r\n\r\nhttps://arduino-esp8266.readthedocs.io/en/latest/mmu.html",
                "created_at": "2023-01-14T11:56:02Z",
                "updated_at": "2023-01-14T11:56:02Z",
                "author_association": "COLLABORATOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1382721929/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1382749570,
                "user": "narangmayank",
                "body": "> > Also, I really don't know much about add heap options, I will be happy if you can share some relevant reference.\r\n> \r\n> https://arduino-esp8266.readthedocs.io/en/latest/mmu.html\r\n\r\nThanks @d-a-v",
                "created_at": "2023-01-14T14:08:14Z",
                "updated_at": "2023-01-14T14:08:14Z",
                "author_association": "NONE",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1382749570/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            }
        ]
    },
    {
        "id": 1533521054,
        "number": 8805,
        "title": "Release 3.1.1 tracker",
        "state": "closed",
        "locked": false,
        "assignees": [],
        "labels": [],
        "milestone": null,
        "created_at": "2023-01-14T22:15:46Z",
        "updated_at": "2023-01-14T23:47:42Z",
        "closed_at": "2023-01-14T23:47:42Z",
        "author_association": "COLLABORATOR",
        "body": "[Reference](https://github.com/esp8266/Arduino/tree/master/package#creating-a-release-for-maintainers) for details.\r\n\r\n- [x] 1. Make sure that no issues or PRs are assigned to the milestone to be released.\r\n\r\n- [x] 2. Open a new issue to track activities.\r\n\r\n- [x] 3. Assemble release notes.\r\n\r\n- [x] 4. Make a PR with the following, [wait for CI](https://github.com/esp8266/Arduino/pull/8034/checks), and merge.\r\n\r\n   * [platform.txt](https://github.com/esp8266/Arduino/blob/master/platform.txt)\r\n   * [package.json](https://github.com/esp8266/Arduino/blob/master/package.json)\r\n   * [TZ.h](https://github.com/esp8266/Arduino/blob/master/cores/esp8266/TZ.h) (<= `cd tools; sh ./TZupdate.sh`)\r\n   * Certificates (<= `cd tools; sh certsUpdate.sh`)\r\n\r\n- [x] 5. Wait until the release notes have been checked by other maintainers (can be changed afterwards anyway)\r\n\r\n- [x] 6. Tag the latest commit on the master branch, then push it to esp8266/Arduino\r\n      add: `git tag -a -m \"Release 3.1.1\" 3.1.1; git push origin 3.1.1`\r\n      remove: `git tag -d 3.1.1; git push --delete origin 3.1.1`\r\n\r\n- [x] 7. Wait for CI build for the tag to pass (in `Actions` menu)\r\n\r\n- [x] 8. Check that the new (draft) release has been created (no editing at this point!), see https://github.com/esp8266/Arduino/releases.\r\n\r\n- [x] 9. Check that the boards manager package .zip file has been successfully uploaded as a release asset.\r\n\r\n- [x] 10. Check that the package index downloaded from https://arduino.esp8266.com/stable/package_esp8266com_index.json contains an entry for the new version (it may not be the first one).\r\n\r\n- [x] 11. Navigate to [release list in Github](https://github.com/esp8266/Arduino/releases), press \"Edit\" button to edit release description, paste release notes, and publish it.\r\n\r\n- [x] 12. Close the milestone associated with the released version (the milestone should be empty per point 1 above)\r\n\r\n- [x] 13. Check that https://arduino-esp8266.readthedocs.io/en/latest/ has a new doc build for the new tag, and that \"stable\" points to that build. If a new build did not trigger, log into readthedoc's home here https://readthedocs.org/ (account must have been added to project as maintainer) and trigger it manually.\r\n\r\n- [x] 14. Create a commit to the master branch, updating:\r\n\r\n    * The version in platform.txt and package.json files. This should correspond to the version of the *next* milestone, plus `-dev` suffix. E.g. `3.2.0-dev`.\r\n    * In main README.md go to \"Latest release\" section, change version number in the readthedocs link to the version which was just released, and verify that all links work.",
        "reactions": {
            "url": "https://api.github.com/repos/esp8266/Arduino/issues/8805/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "is_pull_request": false,
        "timeline_events": [
            {
                "event": "closed",
                "actor": "mcspr",
                "created_at": "2023-01-14T23:47:42Z",
                "assignee": null,
                "label": null
            }
        ],
        "comments_data": []
    },
    {
        "id": 1533365895,
        "number": 8803,
        "title": "Eclipse Sloeber - cannot build using 3.1.0",
        "state": "closed",
        "locked": false,
        "assignees": [],
        "labels": [],
        "milestone": null,
        "created_at": "2023-01-14T16:59:47Z",
        "updated_at": "2023-03-01T17:49:01Z",
        "closed_at": "2023-01-22T08:19:40Z",
        "author_association": "NONE",
        "body": "Hello,\r\n\r\n- i installed the sloeber IDE bundle fresh on linux.\r\n- i added the link `https://arduino.esp8266.com/stable/package_esp8266com_index.json` to the third party tab\r\n- i installed through the sloeber preferences the esp8266 3.1.0 \r\n- when i try to compile the blink example i get this error\r\n\r\n```\r\n18:46:06 **** Incremental Build of configuration Release for project testesp8266 ****\r\nmake all \r\nBuilding file: ../sloeber.ino.cpp\r\nStarting C++ compile\r\n\"/home/labcnc/eclipse/Sloeber/arduinoPlugin/packages/esp8266/tools/xtensa-lx106-elf-gcc/3.1.0-gcc10.3-e5f9fec/bin/xtensa-lx106-elf-g++\" -D__ets__ -DICACHE_FLASH -U__STRICT_ANSI__ -D_GNU_SOURCE -DESP8266 \"@/home/labcnc/eclipse-workspaceNew/testesp8266/Release/core/build.opt\" \"-I/home/labcnc/eclipse/Sloeber/arduinoPlugin/packages/esp8266/hardware/esp8266/3.1.0/tools/sdk/include\" \"-I/home/labcnc/eclipse/Sloeber/arduinoPlugin/packages/esp8266/hardware/esp8266/3.1.0/tools/sdk/lwip2/include\" \"-I/home/labcnc/eclipse/Sloeber/arduinoPlugin/packages/esp8266/hardware/esp8266/3.1.0/tools/sdk/libc/xtensa-lx106-elf/include\" \"-I/home/labcnc/eclipse-workspaceNew/testesp8266/Release/core\" -c \"@/home/labcnc/eclipse/Sloeber/arduinoPlugin/packages/esp8266/hardware/esp8266/3.1.0/tools/warnings/extra-g++\"  -Os -g -free -fipa-pta -Werror=return-type -mlongcalls -mtext-section-literals -fno-rtti -falign-functions=4 -std=gnu++17 -MMD -ffunction-sections -fdata-sections -fno-exceptions  -DMMU_IRAM_SIZE=0x8000 -DMMU_ICACHE_SIZE=0x8000  -DNONOSDK22x_190703=1 -DF_CPU=80000000L -DLWIP_OPEN_SRC -DTCP_MSS=536 -DLWIP_FEATURES=1 -DLWIP_IPV6=0   -DARDUINO=10812 -DARDUINO_ESP8266_GENERIC -DARDUINO_ARCH_ESP8266 \"-DARDUINO_BOARD=\\\"ESP8266_GENERIC\\\"\" -DARDUINO_BOARD_ID=\"\" -DLED_BUILTIN=2 -DFLASHMODE_DOUT     -I\"/home/labcnc/eclipse/Sloeber/arduinoPlugin/packages/esp8266/hardware/esp8266/3.1.0/cores/esp8266\" -I\"/home/labcnc/eclipse/Sloeber/arduinoPlugin/packages/esp8266/hardware/esp8266/3.1.0/variants/generic\" -MMD -MP -MF\"sloeber.ino.cpp.d\" -MT\"sloeber.ino.cpp.o\" -D__IN_ECLIPSE__=1 -x c++ \"../sloeber.ino.cpp\"   -o \"sloeber.ino.cpp.o\"\r\nxtensa-lx106-elf-g++: error: /home/labcnc/eclipse-workspaceNew/testesp8266/Release/core/build.opt: No such file or directory\r\nsubdir.mk:18: recipe for target 'sloeber.ino.cpp.o' failed\r\nmake: *** [sloeber.ino.cpp.o] Error 1\r\n\"make all\" terminated with exit code 2. Build might be incomplete.\r\n\r\n18:46:06 Build Failed. 2 errors, 0 warnings. (took 609ms)\r\n```\r\non the arduino IDE i make the exact same steps for installing the 3.1.0 board manager and i tried again to compile the blink sketch. The results are these\r\n```\r\n/home/labcnc/Programs/arduino-1.8.13/arduino-builder -dump-prefs -logger=machine -hardware /home/labcnc/Programs/arduino-1.8.13/hardware -hardware /home/labcnc/.arduino15/packages -tools /home/labcnc/Programs/arduino-1.8.13/tools-builder -tools /home/labcnc/Programs/arduino-1.8.13/hardware/tools/avr -tools /home/labcnc/.arduino15/packages -built-in-libraries /home/labcnc/Programs/arduino-1.8.13/libraries -libraries /home/labcnc/Arduino/libraries -fqbn=esp8266:esp8266:generic:xtal=80,vt=flash,exception=disabled,stacksmash=disabled,ssl=all,mmu=3232,non32xfer=fast,ResetMethod=nodemcu,CrystalFreq=26,FlashFreq=40,FlashMode=dout,eesz=1M64,led=2,sdk=nonosdk_190703,ip=lm2f,dbg=Disabled,lvl=None____,wipe=all,baud=115200 -ide-version=10813 -build-path /tmp/arduino_build_276859 -warnings=default -build-cache /tmp/arduino_cache_475570 -prefs=build.warn_data_percentage=75 -prefs=runtime.tools.xtensa-lx106-elf-gcc.path=/home/labcnc/.arduino15/packages/esp8266/tools/xtensa-lx106-elf-gcc/3.1.0-gcc10.3-e5f9fec -prefs=runtime.tools.xtensa-lx106-elf-gcc-3.1.0-gcc10.3-e5f9fec.path=/home/labcnc/.arduino15/packages/esp8266/tools/xtensa-lx106-elf-gcc/3.1.0-gcc10.3-e5f9fec -prefs=runtime.tools.mklittlefs.path=/home/labcnc/.arduino15/packages/esp8266/tools/mklittlefs/3.1.0-gcc10.3-e5f9fec -prefs=runtime.tools.mklittlefs-3.1.0-gcc10.3-e5f9fec.path=/home/labcnc/.arduino15/packages/esp8266/tools/mklittlefs/3.1.0-gcc10.3-e5f9fec -prefs=runtime.tools.python3.path=/home/labcnc/.arduino15/packages/esp8266/tools/python3/3.7.2-post1 -prefs=runtime.tools.python3-3.7.2-post1.path=/home/labcnc/.arduino15/packages/esp8266/tools/python3/3.7.2-post1 -prefs=runtime.tools.mkspiffs.path=/home/labcnc/.arduino15/packages/esp8266/tools/mkspiffs/3.1.0-gcc10.3-e5f9fec -prefs=runtime.tools.mkspiffs-3.1.0-gcc10.3-e5f9fec.path=/home/labcnc/.arduino15/packages/esp8266/tools/mkspiffs/3.1.0-gcc10.3-e5f9fec -verbose /home/labcnc/Programs/arduino-1.8.13/examples/01.Basics/Blink/Blink.ino\r\n/home/labcnc/Programs/arduino-1.8.13/arduino-builder -compile -logger=machine -hardware /home/labcnc/Programs/arduino-1.8.13/hardware -hardware /home/labcnc/.arduino15/packages -tools /home/labcnc/Programs/arduino-1.8.13/tools-builder -tools /home/labcnc/Programs/arduino-1.8.13/hardware/tools/avr -tools /home/labcnc/.arduino15/packages -built-in-libraries /home/labcnc/Programs/arduino-1.8.13/libraries -libraries /home/labcnc/Arduino/libraries -fqbn=esp8266:esp8266:generic:xtal=80,vt=flash,exception=disabled,stacksmash=disabled,ssl=all,mmu=3232,non32xfer=fast,ResetMethod=nodemcu,CrystalFreq=26,FlashFreq=40,FlashMode=dout,eesz=1M64,led=2,sdk=nonosdk_190703,ip=lm2f,dbg=Disabled,lvl=None____,wipe=all,baud=115200 -ide-version=10813 -build-path /tmp/arduino_build_276859 -warnings=default -build-cache /tmp/arduino_cache_475570 -prefs=build.warn_data_percentage=75 -prefs=runtime.tools.xtensa-lx106-elf-gcc.path=/home/labcnc/.arduino15/packages/esp8266/tools/xtensa-lx106-elf-gcc/3.1.0-gcc10.3-e5f9fec -prefs=runtime.tools.xtensa-lx106-elf-gcc-3.1.0-gcc10.3-e5f9fec.path=/home/labcnc/.arduino15/packages/esp8266/tools/xtensa-lx106-elf-gcc/3.1.0-gcc10.3-e5f9fec -prefs=runtime.tools.mklittlefs.path=/home/labcnc/.arduino15/packages/esp8266/tools/mklittlefs/3.1.0-gcc10.3-e5f9fec -prefs=runtime.tools.mklittlefs-3.1.0-gcc10.3-e5f9fec.path=/home/labcnc/.arduino15/packages/esp8266/tools/mklittlefs/3.1.0-gcc10.3-e5f9fec -prefs=runtime.tools.python3.path=/home/labcnc/.arduino15/packages/esp8266/tools/python3/3.7.2-post1 -prefs=runtime.tools.python3-3.7.2-post1.path=/home/labcnc/.arduino15/packages/esp8266/tools/python3/3.7.2-post1 -prefs=runtime.tools.mkspiffs.path=/home/labcnc/.arduino15/packages/esp8266/tools/mkspiffs/3.1.0-gcc10.3-e5f9fec -prefs=runtime.tools.mkspiffs-3.1.0-gcc10.3-e5f9fec.path=/home/labcnc/.arduino15/packages/esp8266/tools/mkspiffs/3.1.0-gcc10.3-e5f9fec -verbose /home/labcnc/Programs/arduino-1.8.13/examples/01.Basics/Blink/Blink.ino\r\nUsing board 'generic' from platform in folder: /home/labcnc/.arduino15/packages/esp8266/hardware/esp8266/3.1.0\r\nUsing core 'esp8266' from platform in folder: /home/labcnc/.arduino15/packages/esp8266/hardware/esp8266/3.1.0\r\n/home/labcnc/.arduino15/packages/esp8266/tools/python3/3.7.2-post1/python3 /home/labcnc/.arduino15/packages/esp8266/hardware/esp8266/3.1.0/tools/mkbuildoptglobals.py /home/labcnc/Programs/arduino-1.8.13 10813 /tmp/arduino_build_276859 /tmp/arduino_build_276859/core/build.opt /home/labcnc/Programs/arduino-1.8.13/examples/01.Basics/Blink/Blink.ino.globals.h /home/labcnc/.arduino15/packages/esp8266/hardware/esp8266/3.1.0/cores/esp8266/CommonHFile.h\r\nTraceback (most recent call last):\r\n  File \"/home/labcnc/.arduino15/packages/esp8266/hardware/esp8266/3.1.0/tools/mkbuildoptglobals.py\", line 846, in <module>\r\n    sys.exit(main())\r\n  File \"/home/labcnc/.arduino15/packages/esp8266/hardware/esp8266/3.1.0/tools/mkbuildoptglobals.py\", line 759, in main\r\n    if time.time_ns() < os.stat(commonhfile_fqfn).st_mtime_ns:\r\nAttributeError: module 'time' has no attribute 'time_ns'\r\nexit status 1\r\nError compiling for board Generic ESP8266 Module.\r\n```\r\n\r\nthe 3.0.2 version of the boards manager works perfectly on both sloeber and arduino IDE",
        "reactions": {
            "url": "https://api.github.com/repos/esp8266/Arduino/issues/8803/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "is_pull_request": false,
        "timeline_events": [
            {
                "event": "cross-referenced",
                "actor": "mcspr",
                "created_at": "2023-01-14T17:34:30Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "referenced",
                "actor": "mcspr",
                "created_at": "2023-01-14T17:34:41Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "referenced",
                "actor": "mcspr",
                "created_at": "2023-01-14T18:22:40Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "renamed",
                "actor": "mcspr",
                "created_at": "2023-01-14T23:52:30Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "mcspr",
                "created_at": "2023-01-15T00:00:02Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "JAndrassy",
                "created_at": "2023-01-15T07:02:18Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "JAndrassy",
                "created_at": "2023-01-15T07:10:05Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "jantje",
                "created_at": "2023-01-15T14:37:33Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "cross-referenced",
                "actor": "jantje",
                "created_at": "2023-01-15T18:06:20Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "jantje",
                "created_at": "2023-01-16T16:44:37Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "connected",
                "actor": "mcspr",
                "created_at": "2023-01-19T01:27:20Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "closed",
                "actor": "mcspr",
                "created_at": "2023-01-22T08:19:40Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "jantje",
                "created_at": "2023-01-22T14:50:09Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "cross-referenced",
                "actor": "mcspr",
                "created_at": "2023-01-25T09:35:01Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "ArminJo",
                "created_at": "2023-03-01T17:48:08Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "cross-referenced",
                "actor": "denis-stepanov",
                "created_at": "2023-03-04T22:00:05Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "cross-referenced",
                "actor": "GreyCon",
                "created_at": "2023-10-23T20:30:10Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "referenced",
                "actor": "hasenradball",
                "created_at": "2024-11-18T16:42:11Z",
                "assignee": null,
                "label": null
            }
        ],
        "comments_data": [
            {
                "id": 1382968189,
                "user": "mcspr",
                "body": "> on the arduino IDE i make the exact same steps for installing the 3.1.0 board manager and i tried again to compile the blink sketch. The results are these\r\n\r\nhttps://github.com/esp8266/Arduino/pull/8804 should fix that, assuming the issue is with locally-installed python <3.7\r\n(which it looks like based on the error message)\r\n\r\nWhat happens with Sloeber is whole other thing. Searching in the issue tracker, there is a mention of stm32duino (which is similar to the implementation of build options here)\r\n* https://github.com/Sloeber/arduino-eclipse-plugin/issues/1143 \r\n\r\nBut, exception for stm32duino in tests is removed in the current version... so, it works? I wonder what our differences, then.",
                "created_at": "2023-01-15T00:00:02Z",
                "updated_at": "2023-01-15T00:00:31Z",
                "author_association": "COLLABORATOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1382968189/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1383073557,
                "user": "JAndrassy",
                "body": "https://github.com/Sloeber/arduino-eclipse-plugin/issues/1546",
                "created_at": "2023-01-15T07:02:18Z",
                "updated_at": "2023-01-15T07:06:27Z",
                "author_association": "CONTRIBUTOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1383073557/reactions",
                    "total_count": 1,
                    "+1": 1,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1383074802,
                "user": "JAndrassy",
                "body": "workaround: in platform.sloeber.txt change `recipe.hooks.prebuild.2.pattern` to `recipe.hooks.prebuild.1.pattern`\r\n\r\nand this could be the fix  in platform.txt too",
                "created_at": "2023-01-15T07:10:05Z",
                "updated_at": "2023-01-15T07:13:29Z",
                "author_association": "CONTRIBUTOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1383074802/reactions",
                    "total_count": 2,
                    "+1": 2,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1383167188,
                "user": "jantje",
                "body": "Note that if you do the workaround as described above you also need to do the following steps to clear the caching\r\nhttps://github.com/Sloeber/arduino-eclipse-plugin/discussions/1533",
                "created_at": "2023-01-15T14:37:33Z",
                "updated_at": "2023-01-15T14:37:33Z",
                "author_association": "NONE",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1383167188/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1384310764,
                "user": "jantje",
                "body": "After more investigation in this issue my proposed workaround is to comment out the following line in the platform.txt and execute the cache clearing steps https://github.com/Sloeber/arduino-eclipse-plugin/discussions/1533\r\n`build.opt.flags=\"@{build.opt.fqfn}\"`\r\n\r\nThis is a better solution because Sloeber uses the build command for discovery purposes. As the discovery is triggered early on it is very unlikely the build has run before the discovery runs. Therefore the opt file is missing and the discovery fails.\r\nIf one of your project uses build options you can add the \"@{my build opt file}\" to the build options in the project properties->sloeber pages.\r\nIf you point to your real file there is no need for a prebuild copying action. Still both the discovery and build will work and take it into account.\r\nNote you will have to do a manual clean if you change the opt file.\r\n",
                "created_at": "2023-01-16T16:44:37Z",
                "updated_at": "2023-01-16T16:45:33Z",
                "author_association": "NONE",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1384310764/reactions",
                    "total_count": 1,
                    "+1": 1,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1399510418,
                "user": "jantje",
                "body": "I'm glad to see this got fixed",
                "created_at": "2023-01-22T14:50:09Z",
                "updated_at": "2023-01-22T14:50:09Z",
                "author_association": "NONE",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1399510418/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1450586154,
                "user": "ArminJo",
                "body": "For all struggling with this error:\r\nJust removing the line `build.opt.flags=\"@{build.opt.fqfn}\"` in the files: Sloeber\\arduinoPlugin\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\platform.txt and Sloeber\\arduinoPlugin\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\platform.sloeber.txt and restarting Slober worked for me \ud83d\ude00 .",
                "created_at": "2023-03-01T17:48:08Z",
                "updated_at": "2023-03-01T17:49:01Z",
                "author_association": "NONE",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1450586154/reactions",
                    "total_count": 1,
                    "+1": 1,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            }
        ]
    },
    {
        "id": 1532686315,
        "number": 8801,
        "title": "OTA upload fails with SDK 3.0.5",
        "state": "closed",
        "locked": false,
        "assignees": [],
        "labels": [],
        "milestone": null,
        "created_at": "2023-01-13T17:40:54Z",
        "updated_at": "2023-01-20T22:51:37Z",
        "closed_at": "2023-01-20T22:51:36Z",
        "author_association": "CONTRIBUTOR",
        "body": "### Basic Infos\r\n\r\n- [x] This issue complies with the [issue POLICY doc](https://github.com/esp8266/Arduino/blob/master/POLICY.md).\r\n- [x] I have read the documentation at [readthedocs](https://arduino-esp8266.readthedocs.io/en/latest) and the issue is not addressed there.\r\n- [x] I have tested that the issue is present in current master branch (aka latest git).\r\n- [x] I have searched the issue tracker for a similar issue.\r\n- [x] If there is a stack dump, I have decoded it.\r\n- [x] I have filled out all fields below.\r\n\r\n#### Platform\r\n\r\n- Hardware:\t\t\t\t[ESP8266 device]\r\n- Core Version:\t\t\t[latest git (3.0.5(b29dcd3), framework-arduinoespressif8266 @ 3.2.0-dev+sha.840ef78)]\r\n- Development Env:\t\t[Platformio]\r\n- Operating System:\t\t[MacOS]\r\n\r\n### Settings in IDE\r\n\r\n- Module:  \t\t\t[other]\r\n- Flash Mode:\t\t\t[qio]\r\n- Flash Size: \t\t[2MB]\r\n- lwip Variant:   [v1.4|v2 Lower Memory|Higher Bandwidth]\r\n- Reset Method:\t\t[nodemcu]\r\n- Flash Frequency:\t[40Mhz]\r\n- CPU Frequency:\t\t[80Mhz]\r\n- Upload Using:\t\t[OTA]\r\n\r\n\r\n### Problem Description\r\n\r\nUpload starts and gets slower after some percent. Finally it stops and breaks with an error.\r\n\r\n```\r\nConfiguring upload protocol...\r\nAVAILABLE: espota, esptool\r\nCURRENT: upload_protocol = espota\r\nUploading .pio/build/upstream_develop_upload/firmware.bin\r\n18:26:45 [DEBUG]: Options: {'esp_ip': '192.168.x.x', 'host_ip': '0.0.0.0', 'esp_port': 8266, 'host_port': 58294, 'auth': '', 'image': '.pio/build/upstream_develop_upload/firmware.bin', 'spiffs': False, 'debug': True, 'progress': True}\r\n18:26:45 [INFO]: Starting on 0.0.0.0:58294\r\n18:26:45 [INFO]: Upload size: 545696\r\n18:26:45 [INFO]: Sending invitation to: 192.168.x.x\r\n18:26:45 [INFO]: Waiting for device...\r\n\r\nUploading: [                                                            ] 0% \r\nUploading: [                                                            ] 0% \r\nUploading: [                                                            ] 0% \r\nUploading: [                                                            ] 0% \r\nUploading: [=                                                           ] 1% \r\n...\r\nUploading: [===========================================                 ] 71% \r\nUploading: [===========================================                 ] 72% \r\nUploading: [============================================                ] 72% \r\nUploading: [============================================                ] 72% \r\nUploading: [============================================                ] 73% \r\n18:27:08 [ERROR]: Error Uploading\r\n*** [upload] Error 1\r\n```\r\nOn Serial Monitor I see\r\n```\r\nStart updating sketch\r\nProgress: 75%\r\nError[4]: End Failed\r\n```\r\n\r\nDoing the same thing with SDK 2.2.2-dev(38a443e) works reliable.\r\n\r\n### [MCVE](https://stackoverflow.com/help/mcve) Sketch\r\n\r\n```cpp\r\n\r\n#include <Arduino.h>\r\n\r\nvoid setup() {\r\n ...\r\n  ArduinoOTA.onStart([]() {\r\n    String type;\r\n    if (ArduinoOTA.getCommand() == U_FLASH) {\r\n      type = \"sketch\";\r\n    } else {  // U_FS\r\n      type = \"filesystem\";\r\n    }\r\n\r\n    // NOTE: if updating FS this would be the place to unmount FS using FS.end()\r\n    Serial.println(\"Start updating \" + type);\r\n  });\r\n  ArduinoOTA.onEnd([]() {\r\n    Serial.println(\"\\nEnd\");\r\n  });\r\n  ArduinoOTA.onProgress([](unsigned int progress, unsigned int total) {\r\n    Serial.printf(\"Progress: %u%%\\r\", (progress / (total / 100)));\r\n  });\r\n  ArduinoOTA.onError([](ota_error_t error) {\r\n    Serial.printf(\"\\nError[%u]: \", error);\r\n    if (error == OTA_AUTH_ERROR) {\r\n      Serial.println(\"Auth Failed\");\r\n    } else if (error == OTA_BEGIN_ERROR) {\r\n      Serial.println(\"Begin Failed\");\r\n    } else if (error == OTA_CONNECT_ERROR) {\r\n      Serial.println(\"Connect Failed\");\r\n    } else if (error == OTA_RECEIVE_ERROR) {\r\n      Serial.println(\"Receive Failed\");\r\n    } else if (error == OTA_END_ERROR) {\r\n      Serial.println(\"End Failed\");\r\n    }\r\n  });\r\n  ArduinoOTA.begin();\r\n}\r\n\r\nvoid loop() {\r\n    ...\r\n    ArduinoOTA.handle();\r\n}\r\n\r\n```\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/esp8266/Arduino/issues/8801/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "is_pull_request": false,
        "timeline_events": [
            {
                "event": "commented",
                "actor": "earlephilhower",
                "created_at": "2023-01-13T17:59:41Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "mcspr",
                "created_at": "2023-01-13T18:04:55Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "mhightower83",
                "created_at": "2023-01-13T18:45:48Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "hmueller01",
                "created_at": "2023-01-13T18:48:50Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "hmueller01",
                "created_at": "2023-01-13T18:50:25Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "mhightower83",
                "created_at": "2023-01-13T19:06:39Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "hmueller01",
                "created_at": "2023-01-13T19:28:02Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "hmueller01",
                "created_at": "2023-01-20T22:51:36Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "closed",
                "actor": "hmueller01",
                "created_at": "2023-01-20T22:51:36Z",
                "assignee": null,
                "label": null
            }
        ],
        "comments_data": [
            {
                "id": 1382198520,
                "user": "earlephilhower",
                "body": "Can you please run this with full debugging enabled and capture the `Serial` output?  That should provide a more complete picture of what's happening.",
                "created_at": "2023-01-13T17:59:41Z",
                "updated_at": "2023-01-13T17:59:41Z",
                "author_association": "COLLABORATOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1382198520/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1382204231,
                "user": "mcspr",
                "body": "> Hardware: [ESP8266 device]\r\n> Flash Mode: [qio]\r\n> Flash Size: [2MB]\r\n\r\nAlso, what device is it?\r\n`printf(\"%08X\\n\", ESP.getFlashChipId());`?\r\n\r\nAt a minimum, we need `-DDEBUG_ESP_UPDATER` and `-DDEBUG_ESP_PORT=Serial`\r\nhttps://github.com/esp8266/Arduino/blob/840ef782371d2c0310aa9cbde8a311fd8b80bf28/cores/esp8266/Updater.h#L29-L33\r\n(https://docs.platformio.org/en/stable/platforms/espressif8266.html#debug-level)",
                "created_at": "2023-01-13T18:04:55Z",
                "updated_at": "2023-01-13T18:04:55Z",
                "author_association": "COLLABORATOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1382204231/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1382243335,
                "user": "mhightower83",
                "body": "Not to be forgotten when changing SDKs, you should erase the WiFi Settings. Commonly covered by selecting Arduino IDE Tools->Erase Flash: \"Sketch + WiFi Settings\" once with a change of SDK version.",
                "created_at": "2023-01-13T18:45:48Z",
                "updated_at": "2023-01-13T18:45:48Z",
                "author_association": "CONTRIBUTOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1382243335/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1382245838,
                "user": "hmueller01",
                "body": "Ok, it's a Shelly1 what I am using.\r\n`FlashChipId  : 0015605E`\r\n\r\nBoard config file `shelly1.json` (created by me in my boards folder):\r\n```json\r\n{\r\n  \"build\": {\r\n    \"arduino\": {\r\n      \"ldscript\": \"eagle.flash.2m.ld\"\r\n    },\r\n    \"core\": \"esp8266\",\r\n    \"extra_flags\": \"-DESP8266 -DARDUINO_ARCH_ESP8266 -DARDUINO_ESP8266_SHELLY1\",\r\n    \"f_cpu\": \"80000000L\",\r\n    \"f_flash\": \"40000000L\",\r\n    \"flash_mode\": \"qio\",\r\n    \"mcu\": \"esp8266\",\r\n    \"variant\": \"nodemcu\"\r\n  },\r\n  \"connectivity\": [\r\n    \"wifi\"\r\n  ],\r\n  \"frameworks\": [\r\n    \"arduino\",\r\n    \"esp8266-rtos-sdk\",\r\n    \"esp8266-nonos-sdk\"\r\n  ],\r\n  \"name\": \"Shelly1\",\r\n  \"upload\": {\r\n    \"maximum_ram_size\": 81920,\r\n    \"maximum_size\": 2097152,\r\n    \"require_upload_port\": true,\r\n    \"resetmethod\": \"nodemcu\",\r\n    \"speed\": 115200\r\n  },\r\n  \"url\": \"http://www.esp8266.com/wiki/doku.php?id=esp8266-module-family\",\r\n  \"vendor\": \"Espressif\"\r\n}\r\n```\r\nI will provide more details later.",
                "created_at": "2023-01-13T18:48:50Z",
                "updated_at": "2023-01-13T18:48:50Z",
                "author_association": "CONTRIBUTOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1382245838/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1382247221,
                "user": "hmueller01",
                "body": "> Not to be forgotten when changing SDKs, you should erase the WiFi Settings. Commonly covered by selecting Arduino IDE Tools->Erase Flash: \"Sketch + WiFi Settings\" once with a change of SDK version.\r\n\r\nIs `esptool.py erase_flash` sufficient too?",
                "created_at": "2023-01-13T18:50:25Z",
                "updated_at": "2023-01-13T18:50:25Z",
                "author_association": "CONTRIBUTOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1382247221/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1382262424,
                "user": "mhightower83",
                "body": "> Is esptool.py erase_flash sufficient too?\r\n\r\nYes, that should work. It is the same as running Arduino IDE Tools->Erase Flash: \"All Flash Contents\".",
                "created_at": "2023-01-13T19:06:39Z",
                "updated_at": "2023-01-13T19:06:39Z",
                "author_association": "CONTRIBUTOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1382262424/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1382295097,
                "user": "hmueller01",
                "body": "Ok, this time I see an Exception:\r\n\r\n```\r\nsleep disable\r\n[begin] roundedSize:       0x00086000 (548864)\r\n[begin] updateEndAddress:  0x001F0000 (2031616)\r\n[begin] currentSketchSize: 0x00086000 (548864)\r\n[begin] _startAddress:     0x0016A000 (1482752)\r\n[begin] _currentAddress:   0x0016A000 (1482752)\r\n[begin] _size:             0x00085F30 (548656)\r\nStart updating sketch\r\nHeader: 0xE9 2 0 30\r\nFatal exception 29(StoreProhibitedCause):\r\nepc1=0x4000df64, epc2=0x00000000, epc3=0x00000000, excvaddr=0x00000000, depc=0x00000000\r\n\r\n--------------- CUT HERE FOR EXCEPTION DECODER ---------------\r\n\r\nException (29):\r\nepc1=0x4000df64 epc2=0x00000000 epc3=0x00000000 excvaddr=0x00000000 depc=0x00000000\r\n\r\n>>>stack>>>\r\n\r\nctx: sys\r\nsp: 3fffec20 end: 3fffffb0 offset: 0190\r\n3fffedb0:  000000d4 3ffef3a8 000000d4 401013bc  \r\n3fffedc0:  000000e0 40105b87 3ffee308 ffffffff  \r\n3fffedd0:  40256d8b 3ffef3a8 00000002 40256d20  \r\n3fffede0:  00000002 40256cd7 00000002 00000001  \r\n3fffedf0:  40255e2d 3fffee90 3ffef254 3ffeebc4  \r\n3fffee00:  4025385f 3fffee90 3ffef254 3ffeebc4  \r\n3fffee10:  75652040 00006d68 7fffffff 00000001  \r\n3fffee20:  00000001 00000080 3fffb060 40100dfa  \r\n3fffee30:  4024fa39 3ffeb150 05b10b26 3ffeb120  \r\n3fffee40:  3ffeca8c 3ffeed4c ffffffce 3ffeca9c  \r\n3fffee50:  3ffee308 0000002e 00000000 4025451f  \r\n3fffee60:  00000000 3fff37ec ffffffce 00000000  \r\n3fffee70:  00000000 00000030 c224c8c5 ffffffff  \r\n3fffee80:  40000f58 00000000 0000c8c5 00000000  \r\n3fffee90:  00000000 14310101 00640100 00000045  \r\n3fffeea0:  3ffecab0 00000169 3ffecac5 3ffecaa4  \r\n3fffeeb0:  00000000 3ffecab0 3ffecab8 3ffecb0d  \r\n3fffeec0:  00000000 00000000 3ffecad9 3ffecaf3  \r\n3fffeed0:  3ffecb1a 3ffecb36 00000000 3ffecbdd  \r\n3fffeee0:  00000000 00000000 0000002e 00000000  \r\n3fffeef0:  3fff3be4 402540e0 3ffee308 3fff37ec  \r\n3fffef00:  00000000 3ffeca8c 3ffee308 3ffeca8c  \r\n3fffef10:  00000191 3ffef3a8 00000000 0000002e  \r\n3fffef20:  00000191 3ffeca96 00000000 40269333  \r\n3fffef30:  3ffee308 3ffeca80 3fffdcc0 3ffea978  \r\n3fffef40:  00000080 00000080 00000000 3fffdab0  \r\n3fffef50:  40268bf7 3fffdab0 00000000 402195ea  \r\n3fffef60:  3ffea978 40000f49 ffff0081 40000f49  \r\n3fffef70:  40000e19 00085f2c bff00000 0000bfff  \r\n3fffef80:  00000005 40106af1 00085f2c bff00000  \r\n3fffef90:  40106af7 fbadf9ce 198e343a 50406ff1  \r\n3fffefa0:  4010000d bff00000 00085f2c 401000ab  \r\n3fffefb0:  4025d580 3fffef4c 4025d531 3ffffea8  \r\n3fffefc0:  3fffffd0 00000000 00000000 feefeffe  \r\n3fffefd0:  feefeffe feefeffe feefeffe feefeffe  \r\n3fffefe0:  feefeffe feefeffe feefeffe feefeffe  \r\n3fffeff0:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff000:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff010:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff020:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff030:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff040:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff050:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff060:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff070:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff080:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff090:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff0a0:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff0b0:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff0c0:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff0d0:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff0e0:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff0f0:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff100:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff110:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff120:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff130:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff140:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff150:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff160:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff170:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff180:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff190:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff1a0:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff1b0:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff1c0:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff1d0:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff1e0:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff1f0:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff200:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff210:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff220:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff230:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff240:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff250:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff260:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff270:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff280:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff290:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff2a0:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff2b0:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff2c0:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff2d0:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff2e0:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff2f0:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff300:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff310:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff320:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff330:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff340:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff350:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff360:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff370:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff380:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff390:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff3a0:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff3b0:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff3c0:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff3d0:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff3e0:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff3f0:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff400:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff410:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff420:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff430:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff440:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff450:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff460:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff470:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff480:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff490:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff4a0:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff4b0:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff4c0:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff4d0:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff4e0:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff4f0:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff500:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff510:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff520:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff530:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff540:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff550:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff560:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff570:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff580:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff590:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff5a0:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff5b0:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff5c0:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff5d0:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff5e0:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff5f0:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff600:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff610:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff620:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff630:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff640:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff650:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff660:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff670:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff680:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff690:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff6a0:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff6b0:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff6c0:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff6d0:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff6e0:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff6f0:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff700:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff710:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff720:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff730:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff740:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff750:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff760:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff770:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff780:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff790:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff7a0:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff7b0:  feefeffe feefeffe feefeffe feefeffe  \r\n3ffff7c0:  15a94cbb 1ed3d7e9 563e9121 d39778a5  \r\n3ffff7d0:  6ccd1a04 12a0975c 00588a4f 3a0a43ee  \r\n3ffff7e0:  5c5c5c5c 5c5c5c5c 5c5c5c5c 5c5c5c5c  \r\n3ffff7f0:  5c5c5c5c 5c5c5c5c 5c5c5c5c 5c5c5c5c  \r\n3ffff800:  3bd5f6af 0d06e180 8824326a 20a83de3  \r\n3ffff810:  0829e9e7 44db3251 7251288e 19781afb  \r\n3ffff820:  bed1c528 96c9647f fb47bb26 a73ff64b  \r\n3ffff830:  702525f6 78971193 50529ada aabaf3ee  \r\n3ffff840:  aa9ca465 f87d377c c3258fd6 83aa0d3a  \r\n3ffff850:  5d68ed27 34d5e422 7bcf70d2 4a9add84  \r\n3ffff860:  c2a7d9db 4ba6c5c1 1513623b 6a8cbb84  \r\n3ffff870:  00000005 00000000 00000020 40100460  \r\n3ffff880:  bf14d697 e60c6980 00000005 401028ac  \r\n3ffff890:  3ffea8a5 40105b87 3ffee268 eaa550a0  \r\n3ffff8a0:  00000002 00000000 00000020 40100460  \r\n3ffff8b0:  40102cdd 021bde2a 00000002 401028ac  \r\n3ffff8c0:  3ffea8a2 40105b6f 3ffedfe8 00000300  \r\n3ffff8d0:  00000001 40104d4a 3ffeea68 00000100  \r\n3ffff8e0:  401051bb 00000000 7fffffff 00000001  \r\n3ffff8f0:  00000002 00000000 00000020 40100460  \r\n3ffff900:  40104c83 00000037 00000002 00002200  \r\n3ffff910:  00040000 40104a7c 00040000 401028ac  \r\n3ffff920:  40103b4d 00080000 40269d4f 00000000  \r\n3ffff930:  ffffffff 00000000 3ffea9f1 00000000  \r\n3ffff940:  40269d9e 3ffee038 3fff37ec 00000001  \r\n3ffff950:  40269eaa 3ffee038 3fff37ec 3ffee038  \r\n3ffff960:  40104a7f 00040000 00000000 00002200  \r\n3ffff970:  00040000 40104a7c 00040000 3fffa24c  \r\n3ffff980:  3ffeea68 40103a1d 3ffef3a8 00000080  \r\n3ffff990:  00000000 00000002 00000000 3ffee038  \r\n3ffff9a0:  00000000 2c9f0300 4000050c 00040000  \r\n3ffff9b0:  3fffc278 401037f8 3fffc200 00000022  \r\n3ffff9c0:  3ffeea68 4022df85 3fff3ef4 3fff0ba0  \r\n3ffff9d0:  40232685 00000030 00000010 ffffffff  \r\n3ffff9e0:  00000002 00000000 00000020 40100460  \r\n3ffff9f0:  40102cdd 00000000 00000002 401028ac  \r\n3ffffa00:  3ffea8a2 40105b6f 3ffedfc0 3fff98f4  \r\n3ffffa10:  00000001 40104d4a 3ffeea68 40100dfa  \r\n3ffffa20:  00000002 00000000 00000020 40100460  \r\n3ffffa30:  00000005 00000000 00000020 40100460  \r\n3ffffa40:  3ffea8a2 40105b6f 00000005 401028ac  \r\n3ffffa50:  00000002 00000000 00000020 40100460  \r\n3ffffa60:  00000005 00000000 00000020 40100460  \r\n3ffffa70:  3ffea8a2 40105b6f 00000005 401028ac  \r\n3ffffa80:  3ffea8a5 40105b87 3ffee2e0 00002200  \r\n3ffffa90:  3ffea8a5 40105b87 3ffee308 40100460  \r\n3ffffaa0:  40103437 3ffee308 00000005 401028ac  \r\n3ffffab0:  00007fff 058d6aef 3ffeebc4 40103614  \r\n3ffffac0:  3ffeb15c 00000000 00000000 401028ac  \r\n3ffffad0:  00007fff 058d6aef 40103ae6 00000100  \r\n3ffffae0:  3ffeb15c 00002200 7fffffff 00000001  \r\n3ffffaf0:  00000001 00004288 40103ae6 00000100  \r\n3ffffb00:  3ffeb138 3ffeb15c 058d6aef 3ffeb12c  \r\n3ffffb10:  00000000 2c9f0300 4000050c 00000000  \r\n3ffffb20:  3fffc278 401037f8 3fffc200 00000022  \r\n3ffffb30:  00000000 2c9f0300 4000050c 00000000  \r\n3ffffb40:  40225e7a 00000030 00000004 ffffffff  \r\n3ffffb50:  40225e62 00000000 3ffffd03 00000000  \r\n3ffffb60:  00000000 3ffffe2a 00000006 3ffffd70  \r\n3ffffb70:  00000000 00000000 3ffffd03 3ffffcc0  \r\n3ffffb80:  fffffffe 3ffe853c 3ffffc70 00000030  \r\n3ffffb90:  3ffee030 3ffea7c8 000000a0 3ffee010  \r\n3ffffba0:  3fff37ec 00000001 3fffb6dc 00000030  \r\n3ffffbb0:  00000006 00000000 0000000a 00000000  \r\n3ffffbc0:  00000006 00000000 0000000a 00000000  \r\n3ffffbd0:  3fffdab0 00000000 40269d4f 00000000  \r\n3ffffbe0:  00000000 a0000000 00000000 0000001c  \r\n3ffffbf0:  00006000 3ffee010 00006000 3ffe853c  \r\n3ffffc00:  00000000 00000000 3ffffd70 4022b460  \r\n3ffffc10:  3ffffd02 3ffffd03 00000000 00000000  \r\n3ffffc20:  40269d9e 3ffee010 40226291 3ffe853c  \r\n3ffffc30:  00000001 3ffe853c 3ffffd70 4022b460  \r\n3ffffc40:  4022b39c 3ffffd02 00000001 00000000  \r\n3ffffc50:  3ffea8a2 40268e5b 3ffee010 3ffffd70  \r\n3ffffc60:  3ffe8bd6 3ffe853c 3ffffcc0 402263c0  \r\n3ffffc70:  00000001 00000002 00000000 3ffe853c  \r\n3ffffc80:  00000001 3ffe853c 3ffffd70 4022b460  \r\n3ffffc90:  00000000 3ffe8bd6 00000001 00000000  \r\n3ffffca0:  3fff0bb8 4022df85 3fff3f10 3ffe8bd7  \r\n3ffffcb0:  3ffe8bd6 3ffe853c 3ffffd70 4022b65d  \r\n3ffffcc0:  00000000 ffffffff 00000000 00000000  \r\n3ffffcd0:  00000001 0000000e 3f302025 4022e1b7  \r\n3ffffce0:  3fff0bf0 3fffb6dc 00000000 4022e616  \r\n3ffffcf0:  3fff0f24 0000cf6b 0000a3a1 3fffba78  \r\n3ffffd00:  002536fc 3fffb960 00000002 3fff0f24  \r\n3ffffd10:  3fff0bb8 3fff0bf0 00000000 40235b90  \r\n3ffffd20:  3ffffea0 3ffffe70 0000000c 40100dfa  \r\n3ffffd30:  3ffffea0 3ffffe70 00000008 00000001  \r\n3ffffd40:  00000001 3ffe893c 3fffbae8 3fffb6dc  \r\n3ffffd50:  3fffb6dc 3fffaef0 3fff0bb8 3fff0610  \r\n3ffffd60:  3ffffe70 3ffe853c 00000040 40228829  \r\n3ffffd70:  3ffffe2e 3fff0bb8 00000031 ffff0208  \r\n3ffffd80:  3ffffe20 0000003f 00000020 40101384  \r\n3ffffd90:  00000014 3fffaeec 000000ff 00000000  \r\n3ffffda0:  00000006 3fff1000 00000000 4022ef24  \r\n3ffffdb0:  4021158e 00000030 0000001c 3fff99bc  \r\n3ffffdc0:  3fff0bb8 3fffaeec 00000000 40237778  \r\n3ffffdd0:  3fff0bb8 00000000 00000000 402327e2  \r\n3ffffde0:  3fff0bb8 00000008 3fff04a8 4021b264  \r\n3ffffdf0:  3ffffe2e fffffffc 00000008 402386f3  \r\n3ffffe00:  00000001 00000003 3ffffe9d 3fff0610  \r\n3ffffe10:  3ffffe70 00000008 3ffffe20 4021679c <\r\n3ffffe20:  676f7250 73736572 3136203a 01000d25  \r\n3ffffe30:  400098b1 00000000 00000000 00000002  \r\n3ffffe40:  00000001 00000000 3fff9d2c 4020e51a  \r\n3ffffe50:  00000003 00000000 01bc06a6 00000000  \r\n3ffffe60:  3ffffea0 3ffffe70 00000008 3ffffee0  \r\n3ffffe70:  40105cd9 01c72deb 0000003d 0000000d  \r\n3ffffe80:  40105d86 3ffeff50 01c72deb 00000000  \r\n3ffffe90:  40105f5d 01c72deb 3fff07ec 00000000  \r\n3ffffea0:  3ffefac0 3fff07ec 3ffe8938 3fff07ec  \r\n3ffffeb0:  00052160 000002d9 40219658 3fffefb0  \r\n3ffffec0:  3fff07ec 00052160 00000001 4021979d  \r\n3ffffed0:  40211a6a 3fff06c0 3fff04a8 40211a6a  \r\n3ffffee0:  4022344c 00000000 00001388 00000001  \r\n3ffffef0:  00000000 3fff15a4 3fff9d2c 00000000  \r\n3fffff00:  3fff37ec 4020d840 40223930 1702a8c0  \r\n3fffff10:  40223930 1702a8c0 3fff13cc 4020be97  \r\n3fffff20:  3fff052c 00000218 3fff15a4 4020fa03  \r\n3fffff30:  00000000 3fff0050 00000000 3fff0814  \r\n3fffff40:  3fffdad0 00000000 3fff04a8 40211b88  \r\n3fffff50:  3fffdad0 00000000 3fff00cc 4020c051  \r\n3fffff60:  3fffdad0 402232c4 3fff00d0 00000001  \r\n3fffff70:  3fff0698 3fff0694 00000001 40216bac  \r\n3fffff80:  00000000 3fff984c 00000020 3fff0814  \r\n3fffff90:  00000005 3fff972c 3fff00e4 3fff0814  \r\n3fffffa0:  3fffdad0 00000000 3fff07e8 3fff0814  \r\n<<<stack<<<\r\n\r\n--------------- CUT HERE FOR EXCEPTION DECODER ---------------\r\n\ufffd@*r\ufffd\ufffdP\ufffd\ufffd\ufffdK\ufffdt\ufffddr\ufffd,@\ufffd\ufffd.\ufffd\u046a\ufffdKo8a \ufffd\ufffd*\ufffdT\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdP\ufffd-\ufffd\ufffd\ufffd*\ufffd\ufffd\ufffd\ufffdnzAl )\ufffdm~\ufffdP'!\ufffd(P\ufffd+t\u05ecX@j|\ufffd\ufffd\ufffd\ufffd*\ufffd\ufffd\ufffdr\ufffd(\ufffd8x\ufffdvA,PZ\ufffdr\ufffd(\ufffd+N\ufffdP\ufffd\ufffd\ufffdl /\u0462\ufffdboot not set\r\nota1 not set\r\nota2 not set\r\nV2\r\nMo\r\n,\ufffdrf cal sector: 508\r\nfreq trace enable 0\r\nrf[112] \r\nSDK:3.0.5(b29dcd3)/Core:3.1.0-8-g840ef78=30100008/lwIP:STABLE-2_1_3_RELEASE/glue:1.2-65-g06164fb/BearSSL:b024386\r\n```\r\n[dump-20230113-decoded.txt](https://github.com/esp8266/Arduino/files/10414787/dump-20230113-decoded.txt)",
                "created_at": "2023-01-13T19:28:02Z",
                "updated_at": "2023-01-13T19:28:02Z",
                "author_association": "CONTRIBUTOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1382295097/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1399043398,
                "user": "hmueller01",
                "body": "This is really strange.\r\nI **never** had problems with ESPhttpUpdate. Only ArduinoOTA was causing it.\r\nIn the meantime I updated to platformio/espressif8266 @ 4.1.0 and latest framework-arduinoespressif8266 @ 3.2.0-dev+sha.bed2fa3 and all of a sudden I can't reproduce the problem. Closing this and hoping it won't come again. ;-)",
                "created_at": "2023-01-20T22:51:36Z",
                "updated_at": "2023-01-20T22:51:36Z",
                "author_association": "CONTRIBUTOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1399043398/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            }
        ]
    },
    {
        "id": 1535509475,
        "number": 8811,
        "title": "All GIT Versions Higher than 3.0.2 Can't Find the Arduino Preferences.txt File",
        "state": "closed",
        "locked": false,
        "assignees": [],
        "labels": [],
        "milestone": null,
        "created_at": "2023-01-16T21:33:49Z",
        "updated_at": "2023-03-20T10:01:28Z",
        "closed_at": "2023-01-18T21:34:16Z",
        "author_association": "NONE",
        "body": "### Basic Infos\r\n\r\n- [X] This issue complies with the [issue POLICY doc](https://github.com/esp8266/Arduino/blob/master/POLICY.md).\r\n- [X] I have read the documentation at [readthedocs](https://arduino-esp8266.readthedocs.io/en/latest) and the issue is not addressed there.\r\n- [X] I have tested that the issue is present in current master branch (aka latest git).\r\n- [X] I have searched the issue tracker for a similar issue.\r\n- [X] If there is a stack dump, I have decoded it.\r\n- [ ] I have filled out all fields below.  (Some not needed)\r\n\r\n#### Platform\r\n\r\n- Hardware:\t\t\t\tESP8266\r\n- Core Version:\t\t\t3.1.1\r\n- Development Env:\t\tArduino IDE\r\n- Operating System:\t\tWindows 11\r\n\r\n### Settings in IDE\r\n\r\n- Module:  \t\t\tAdafruit Feather HUZZAH ESP8266\r\n- Flash Mode:\t\t\tOnly Sketch\r\n- Flash Size: \t\t        4MB\r\n- lwip Variant:                  v2 Lower Memory\r\n- Reset Method:\t\tnodemcu\r\n- Flash Frequency:\t        40Mhz\r\n- CPU Frequency:\t\t80Mhz\r\n- Upload Using:\t\tSERIAL\r\n- Upload Speed:              115200\r\n\r\n\r\n### Problem Description\r\n\r\nUsing any GIT version higher than 3.0.2 results in the compiler not being able to find my \"preferences.txt\" file.  The file is always in the same place, in D:\\Documents\\ArduinoData, yet newer GIT versions can't find it.  However, all versions 3.0.2 and lower, have no problem finding the file.  \r\n\r\n#include <Arduino.h>\r\n\r\nIrrelevant since NO sketch will compile.\r\n\r\n### Debug Messages\r\n\r\n```\r\nArduino: 1.8.19 (Windows Store 1.8.57.0) (Windows 10), Board: \"Adafruit Feather HUZZAH ESP8266, 80 MHz, Flash, Disabled (new aborts on oom), Disabled, All SSL ciphers (most compatible), 32KB cache + 32KB IRAM (balanced), Use pgm_read macros for IRAM/PROGMEM, 4MB (FS:2MB OTA:~1019KB), v2 Lower Memory, Disabled, None, Only Sketch, 115200\"\r\n\r\nC:\\Program Files\\WindowsApps\\ArduinoLLC.ArduinoIDE_1.8.57.0_x86__mdqgnx93n4wtt\\arduino-builder -dump-prefs -logger=machine -hardware C:\\Program Files\\WindowsApps\\ArduinoLLC.ArduinoIDE_1.8.57.0_x86__mdqgnx93n4wtt\\hardware -hardware D:\\Documents\\ArduinoData\\packages -tools C:\\Program Files\\WindowsApps\\ArduinoLLC.ArduinoIDE_1.8.57.0_x86__mdqgnx93n4wtt\\tools-builder -tools C:\\Program Files\\WindowsApps\\ArduinoLLC.ArduinoIDE_1.8.57.0_x86__mdqgnx93n4wtt\\hardware\\tools\\avr -tools D:\\Documents\\ArduinoData\\packages -built-in-libraries C:\\Program Files\\WindowsApps\\ArduinoLLC.ArduinoIDE_1.8.57.0_x86__mdqgnx93n4wtt\\libraries -libraries D:\\Documents\\Arduino\\libraries -fqbn=esp8266:esp8266:huzzah:xtal=80,vt=flash,exception=disabled,stacksmash=disabled,ssl=all,mmu=3232,non32xfer=fast,eesz=4M2M,ip=lm2f,dbg=Disabled,lvl=None____,wipe=none,baud=115200 -ide-version=10819 -build-path C:\\Users\\JOEGUA~1\\AppData\\Local\\Temp\\arduino_build_756055 -warnings=default -build-cache C:\\Users\\JOEGUA~1\\AppData\\Local\\Temp\\arduino_cache_195117 -prefs=build.warn_data_percentage=75 -prefs=runtime.tools.python3.path=D:\\Documents\\ArduinoData\\packages\\esp8266\\tools\\python3\\3.7.2-post1 -prefs=runtime.tools.python3-3.7.2-post1.path=D:\\Documents\\ArduinoData\\packages\\esp8266\\tools\\python3\\3.7.2-post1 -prefs=runtime.tools.mklittlefs.path=D:\\Documents\\ArduinoData\\packages\\esp8266\\tools\\mklittlefs\\3.1.0-gcc10.3-e5f9fec -prefs=runtime.tools.mklittlefs-3.1.0-gcc10.3-e5f9fec.path=D:\\Documents\\ArduinoData\\packages\\esp8266\\tools\\mklittlefs\\3.1.0-gcc10.3-e5f9fec -prefs=runtime.tools.xtensa-lx106-elf-gcc.path=D:\\Documents\\ArduinoData\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec -prefs=runtime.tools.xtensa-lx106-elf-gcc-3.1.0-gcc10.3-e5f9fec.path=D:\\Documents\\ArduinoData\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec -prefs=runtime.tools.mkspiffs.path=D:\\Documents\\ArduinoData\\packages\\esp8266\\tools\\mkspiffs\\3.1.0-gcc10.3-e5f9fec -prefs=runtime.tools.mkspiffs-3.1.0-gcc10.3-e5f9fec.path=D:\\Documents\\ArduinoData\\packages\\esp8266\\tools\\mkspiffs\\3.1.0-gcc10.3-e5f9fec -verbose D:\\Documents\\Arduino\\Mini_Temp_Sensor_Feather_V6\\Mini_Temp_Sensor_Feather_V6.ino\r\n\r\nC:\\Program Files\\WindowsApps\\ArduinoLLC.ArduinoIDE_1.8.57.0_x86__mdqgnx93n4wtt\\arduino-builder -compile -logger=machine -hardware C:\\Program Files\\WindowsApps\\ArduinoLLC.ArduinoIDE_1.8.57.0_x86__mdqgnx93n4wtt\\hardware -hardware D:\\Documents\\ArduinoData\\packages -tools C:\\Program Files\\WindowsApps\\ArduinoLLC.ArduinoIDE_1.8.57.0_x86__mdqgnx93n4wtt\\tools-builder -tools C:\\Program Files\\WindowsApps\\ArduinoLLC.ArduinoIDE_1.8.57.0_x86__mdqgnx93n4wtt\\hardware\\tools\\avr -tools D:\\Documents\\ArduinoData\\packages -built-in-libraries C:\\Program Files\\WindowsApps\\ArduinoLLC.ArduinoIDE_1.8.57.0_x86__mdqgnx93n4wtt\\libraries -libraries D:\\Documents\\Arduino\\libraries -fqbn=esp8266:esp8266:huzzah:xtal=80,vt=flash,exception=disabled,stacksmash=disabled,ssl=all,mmu=3232,non32xfer=fast,eesz=4M2M,ip=lm2f,dbg=Disabled,lvl=None____,wipe=none,baud=115200 -ide-version=10819 -build-path C:\\Users\\JOEGUA~1\\AppData\\Local\\Temp\\arduino_build_756055 -warnings=default -build-cache C:\\Users\\JOEGUA~1\\AppData\\Local\\Temp\\arduino_cache_195117 -prefs=build.warn_data_percentage=75 -prefs=runtime.tools.python3.path=D:\\Documents\\ArduinoData\\packages\\esp8266\\tools\\python3\\3.7.2-post1 -prefs=runtime.tools.python3-3.7.2-post1.path=D:\\Documents\\ArduinoData\\packages\\esp8266\\tools\\python3\\3.7.2-post1 -prefs=runtime.tools.mklittlefs.path=D:\\Documents\\ArduinoData\\packages\\esp8266\\tools\\mklittlefs\\3.1.0-gcc10.3-e5f9fec -prefs=runtime.tools.mklittlefs-3.1.0-gcc10.3-e5f9fec.path=D:\\Documents\\ArduinoData\\packages\\esp8266\\tools\\mklittlefs\\3.1.0-gcc10.3-e5f9fec -prefs=runtime.tools.xtensa-lx106-elf-gcc.path=D:\\Documents\\ArduinoData\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec -prefs=runtime.tools.xtensa-lx106-elf-gcc-3.1.0-gcc10.3-e5f9fec.path=D:\\Documents\\ArduinoData\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec -prefs=runtime.tools.mkspiffs.path=D:\\Documents\\ArduinoData\\packages\\esp8266\\tools\\mkspiffs\\3.1.0-gcc10.3-e5f9fec -prefs=runtime.tools.mkspiffs-3.1.0-gcc10.3-e5f9fec.path=D:\\Documents\\ArduinoData\\packages\\esp8266\\tools\\mkspiffs\\3.1.0-gcc10.3-e5f9fec -verbose D:\\Documents\\Arduino\\Mini_Temp_Sensor_Feather_V6\\Mini_Temp_Sensor_Feather_V6.ino\r\n\r\nUsing board 'huzzah' from platform in folder: D:\\Documents\\ArduinoData\\packages\\esp8266\\hardware\\esp8266\\3.1.1\r\n\r\nUsing core 'esp8266' from platform in folder: D:\\Documents\\ArduinoData\\packages\\esp8266\\hardware\\esp8266\\3.1.1\r\n\r\n\"D:\\\\Documents\\\\ArduinoData\\\\packages\\\\esp8266\\\\tools\\\\python3\\\\3.7.2-post1/python3\" -I \"D:\\\\Documents\\\\ArduinoData\\\\packages\\\\esp8266\\\\hardware\\\\esp8266\\\\3.1.1/tools/mkbuildoptglobals.py\" \"C:\\\\Program Files\\\\WindowsApps\\\\ArduinoLLC.ArduinoIDE_1.8.57.0_x86__mdqgnx93n4wtt\" 10819 \"C:\\\\Users\\\\JOEGUA~1\\\\AppData\\\\Local\\\\Temp\\\\arduino_build_756055\" \"C:\\\\Users\\\\JOEGUA~1\\\\AppData\\\\Local\\\\Temp\\\\arduino_build_756055/core/build.opt\" \"D:\\\\Documents\\\\Arduino\\\\Mini_Temp_Sensor_Feather_V6/Mini_Temp_Sensor_Feather_V6.ino.globals.h\" \"D:\\\\Documents\\\\ArduinoData\\\\packages\\\\esp8266\\\\hardware\\\\esp8266\\\\3.1.1\\\\cores\\\\esp8266/CommonHFile.h\"\r\n\r\n*** File preferences.txt not found on Windows\r\n\r\n*** 'preferences.txt' file missing from well known locations.\r\n\r\nexit status 1\r\n\r\nError compiling for board Adafruit Feather HUZZAH ESP8266.\r\n\r\n```\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/esp8266/Arduino/issues/8811/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "is_pull_request": false,
        "timeline_events": [
            {
                "event": "commented",
                "actor": "risidoro81",
                "created_at": "2023-01-16T22:24:23Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "jgrass3",
                "created_at": "2023-01-16T22:50:00Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "cross-referenced",
                "actor": "mhightower83",
                "created_at": "2023-01-17T01:15:00Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "mhightower83",
                "created_at": "2023-01-17T18:26:07Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "mentioned",
                "actor": "jgrass3",
                "created_at": "2023-01-17T18:26:08Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "subscribed",
                "actor": "jgrass3",
                "created_at": "2023-01-17T18:26:08Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "mentioned",
                "actor": "risidoro81",
                "created_at": "2023-01-17T18:26:08Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "subscribed",
                "actor": "risidoro81",
                "created_at": "2023-01-17T18:26:08Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "jgrass3",
                "created_at": "2023-01-17T18:42:17Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "closed",
                "actor": "mcspr",
                "created_at": "2023-01-18T21:34:17Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "cross-referenced",
                "actor": "mhightower83",
                "created_at": "2023-01-18T23:27:07Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "mhightower83",
                "created_at": "2023-01-18T23:27:28Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "mentioned",
                "actor": "mcspr",
                "created_at": "2023-01-18T23:27:28Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "subscribed",
                "actor": "mcspr",
                "created_at": "2023-01-18T23:27:28Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "mentioned",
                "actor": "jgrass3",
                "created_at": "2023-01-18T23:27:28Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "subscribed",
                "actor": "jgrass3",
                "created_at": "2023-01-18T23:27:28Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "mentioned",
                "actor": "risidoro81",
                "created_at": "2023-01-18T23:27:28Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "subscribed",
                "actor": "risidoro81",
                "created_at": "2023-01-18T23:27:28Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "connected",
                "actor": "mcspr",
                "created_at": "2023-01-19T01:27:11Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "cross-referenced",
                "actor": "mcspr",
                "created_at": "2023-01-25T09:35:01Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "cross-referenced",
                "actor": "ken830",
                "created_at": "2023-01-26T11:48:33Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "cgalvan21",
                "created_at": "2023-01-29T22:39:24Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "mentioned",
                "actor": "risidoro81",
                "created_at": "2023-01-29T22:39:24Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "subscribed",
                "actor": "risidoro81",
                "created_at": "2023-01-29T22:39:24Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "martysm",
                "created_at": "2023-02-05T23:47:51Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "cross-referenced",
                "actor": "mcspr",
                "created_at": "2023-02-15T11:26:57Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "04alband",
                "created_at": "2023-03-20T10:01:27Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "mentioned",
                "actor": "mhightower83",
                "created_at": "2023-03-20T10:01:28Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "subscribed",
                "actor": "mhightower83",
                "created_at": "2023-03-20T10:01:28Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "mentioned",
                "actor": "cgalvan21",
                "created_at": "2023-03-20T10:01:28Z",
                "assignee": null,
                "label": null
            }
        ],
        "comments_data": [
            {
                "id": 1384628605,
                "user": "risidoro81",
                "body": "Hi, same issue with latest 3.1.1\r\nI think the error is in  %USERPROFILE%\\Documents\\ArduinoData\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\tools\\mkbuildoptglobals.py  line 466:\r\n\r\n`return [fqfn, fqfn2]`\r\n\r\nit must be\r\n\r\n`return [fqfn, None]`\r\n\r\nbecause fqfn2 path does not exist if we reach that else clause (probably lines 464 and 466 should be swapped)\r\n\r\nI modified line 466 by hand and I can now compile correctly.\r\n\r\nBye\r\n\r\n\r\n\r\n",
                "created_at": "2023-01-16T22:24:23Z",
                "updated_at": "2023-01-16T22:30:25Z",
                "author_association": "NONE",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1384628605/reactions",
                    "total_count": 1,
                    "+1": 1,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1384640912,
                "user": "jgrass3",
                "body": "Your reply is posted with the issue so I think we\u2019re covered and the developer will see your comments there.\r\nThanks for this.\r\nJguarrasi\r\n\r\nFrom: Isidoro Russo ***@***.***>\r\nSent: Monday, January 16, 2023 5:25 PM\r\nTo: esp8266/Arduino ***@***.***>\r\nCc: jgrass3 ***@***.***>; Author ***@***.***>\r\nSubject: Re: [esp8266/Arduino] All GIT Versions Higher than 3.0.2 Can't Find the Arduino Preferences.txt File (Issue #8811)\r\n\r\n\r\nHi, same issue with latest 3.1.1\r\nI think the error is in %USERPROFILE%\\Documents\\ArduinoData\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\tools\\mkbuildoptglobals.py line 466:\r\n\r\nreturn [fqfn, fqfn2]\r\n\r\nit must be\r\n\r\nreturn [fqfn, None]\r\n\r\nbecause fqfn2 path does not exist if we reach that else clause (probably lines 464 and 466 should be exchanged)\r\n\r\nI modified line 466 by hand and I can now compile correctly.\r\n\r\nI don't know what is the best ways to report the issue to the developer though...\r\n\r\nBye\r\n\r\n\u2014\r\nReply to this email directly, view it on GitHub<https://github.com/esp8266/Arduino/issues/8811#issuecomment-1384628605>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AQOHZAEZYTGBSFBN73BL3HLWSXDCDANCNFSM6AAAAAAT5FDZWA>.\r\nYou are receiving this because you authored the thread.Message ID: ***@***.***>\r\n",
                "created_at": "2023-01-16T22:50:00Z",
                "updated_at": "2023-01-16T22:50:00Z",
                "author_association": "NONE",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1384640912/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1385848413,
                "user": "mhightower83",
                "body": "@risidoro81 I think I have your issues resolved with PR#8812\r\n\r\n@jgrass3 I don't think that PR will resolve your issue. Your installation looks strange to me. Your installation has moved the Arduino sketch folder to `D:\\Documents\\Arduino` which is easy to change through the File->Preferences on the IDE; however, the ArduinoData folder has also moved to `D:\\Documents\\ArduinoData`. How did you make this change?",
                "created_at": "2023-01-17T18:26:07Z",
                "updated_at": "2023-01-17T18:26:07Z",
                "author_association": "CONTRIBUTOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1385848413/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1385868522,
                "user": "jgrass3",
                "body": "Hi, thanks for the update.  I believe that when you install Arduino IDE from the Microsoft Store, you have the option to put the App in whatever location you want.  And so the ArduinoData directory goes with the installation.  And since it is a Store App, you can go into the Apps section of Windows Settings and move it wherever you want.  I typically move most of my Apps to my D: drive which has alot of storage vice my C: boot drive which is small.  And remember, I never had a problem with any of the older versions of the Git.  Something changed in the latest versions.",
                "created_at": "2023-01-17T18:42:17Z",
                "updated_at": "2023-01-17T18:44:18Z",
                "author_association": "NONE",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1385868522/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1396227433,
                "user": "mhightower83",
                "body": "@mcspr I think there are two different issues in this thread. I think what @risidoro81 describes is fixed.\r\n\r\nRE: The origin issue report by @jgrass3, based on the content of \"Debug messages\" there is some unusual placement of files. I think his issue may need [PR#8814](https://github.com/esp8266/Arduino/pull/8814/#issue-1537101536)",
                "created_at": "2023-01-18T23:27:28Z",
                "updated_at": "2023-01-18T23:28:36Z",
                "author_association": "CONTRIBUTOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1396227433/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1407789495,
                "user": "cgalvan21",
                "body": "I had a similar problem with an \"alternate\" location for the preferences file. My Arduino Data folder is on OneDrive. I edited line 455 of C:\\Users\\xxx\\OneDrive\\Documents\\ArduinoData\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\tools\\mkbuildoptglobals.py\" so that it reads 'fqfn = os.path.expanduser(\"~\\OneDrive\\Documents\\ArduinoData\\preferences.txt\")'. Note the addition of \"\\OneDrive\". It worked for me.\r\n\r\nCredit to @risidoro81 for steering me in the right direction.",
                "created_at": "2023-01-29T22:39:24Z",
                "updated_at": "2023-01-29T22:39:24Z",
                "author_association": "NONE",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1407789495/reactions",
                    "total_count": 1,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 1,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1418300321,
                "user": "martysm",
                "body": "Same issue.\r\nreturn [fqfn, fqfn2]\r\nto\r\nreturn [fqfn, None]\r\nworked for me too.",
                "created_at": "2023-02-05T23:47:51Z",
                "updated_at": "2023-02-05T23:47:51Z",
                "author_association": "NONE",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1418300321/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1475933877,
                "user": "04alband",
                "body": "For some reason, I've just bumped into this issue as well. I agree with what I think has been said (not sure I've followed everything so apologies if I'm behind the curve). There's a logical issue with the return values of `find_preferences_txt` around lines 464-466, and then also an issue with how unusual locations of preferences.txt are handled.\r\n\r\nFrom what I've seen though it looks like these should both have been addressed already? However, I re-installed 3.1.1 and I still seem to have mkbuildoptglobals.py with both issues. Either way, I'd like to add the following to the discussion...\r\n\r\nSimilar to @cgalvan21, my ArduinoData folder is in OneDrive and resolves to `D:\\David\\OneDrive\\Documents\\ArduinoData\\preferences.txt`. In response to @mhightower83's question about how it would have ended up there, it's because I moved my default Documents folder location (one can easily move such folders around by Right click > Properties > Location > Change Location). The Arduino IDE (app store version 1.8.19 on Win 10) clearly respected this and so has put the ArduinoData folder and thus preferences.txt in that location.\r\n\r\nSo I sought a hopefully more reliable way of finding where the IDE has put the preferences folder. I examined with processmonitor how the IDE was accessing the preferences file, and, shortly before accessing preference.txt, it queries the `HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\\Personal` registry key to find the location of the user's Documents folder:\r\n![image](https://user-images.githubusercontent.com/30078018/226304936-edb30ed6-f4bc-4538-ace6-fae951e349a5.png)\r\n\r\nI've therefore changed my version of mkbuildoptglobals.py to do the same thing in order to resolve the location of preferences.txt using the following:\r\n```\r\nimport winreg\r\nshfKey = winreg.OpenKey(winreg.HKEY_CURRENT_USER, r'SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders')\r\ndocs = winreg.QueryValueEx(shfKey, \"Personal\")[0]\r\nfqfn = os.path.join(docs, 'ArduinoData\\preferences.txt')\r\n```\r\n\r\nThis is working for me, though I'm not sure if it's still relevant with the latest version of mkbuildoptglobals.py, which I don't seem to have. So just adding that idea for anyone else with this issue, or maybe it might be relevant to incorporate properly.",
                "created_at": "2023-03-20T10:01:27Z",
                "updated_at": "2023-03-20T10:01:27Z",
                "author_association": "NONE",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1475933877/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            }
        ]
    },
    {
        "id": 1533937370,
        "number": 8810,
        "title": "Eclipse Sloeber - cannot build using 3.1.0 on system without arduino IDE installed; because pre-build needs preferences.txt",
        "state": "closed",
        "locked": false,
        "assignees": [],
        "labels": [
            "IDE: eclipse"
        ],
        "milestone": "3.1.2",
        "created_at": "2023-01-15T18:06:20Z",
        "updated_at": "2023-01-26T12:55:22Z",
        "closed_at": "2023-01-26T12:55:21Z",
        "author_association": "NONE",
        "body": "While investigating #8803 https://github.com/Sloeber/arduino-eclipse-plugin/issues/1547 , and https://github.com/Sloeber/arduino-eclipse-plugin/issues/1546 I found that the prebuild command needs a preferences.txt file (see logs below).\r\nIf the user is on a system that has Sloeber or any other third party IDE installed but has no Arduino IDE (Like on a build server) this preferences.txt will not be found.\r\nApparently when the py script fails to do a workaround for the Arduino IDE the copy command of the build.opt is not executed resulting in a build failure.\r\n\r\nCan you remove the dependency on the preferences.txt?\r\n\r\nThanks\r\nJantje\r\n\r\nFailure during Sloeber Build https://github.com/Sloeber/arduino-eclipse-plugin/actions/runs/3924285135/jobs/6708444570#step:4:2500\r\n\r\nFailure during regression testing on windows\r\n```\r\n18:41:57 **** Incremental Build of configuration Release for project issue1047_Board_Names_Can_Be_used_as_Strings ****\r\n\"e:\\\\platform\\\\arduinoPlugin\\\\tools\\\\make\\\\make\" all \r\ne:/platform/arduinoPlugin/tools/make/make --no-print-directory pre-build\r\n\"e:\\platform\\arduinoPlugin\\packages\\esp8266\\tools\\python3\\3.7.2-post1/python3\" -I \"e:\\platform\\arduinoPlugin\\packages\\esp8266\\hardware\\esp8266\\3.1.1/tools/mkbuildoptglobals.py\" \"e:\\platform\" 10812 \"L:\\test\\junit-workspace\\issue1047_Board_Names_Can_Be_used_as_Strings\\Release\" \"L:\\test\\junit-workspace\\issue1047_Board_Names_Can_Be_used_as_Strings\\Release/core/build.opt\" \"L:\\test\\junit-workspace\\issue1047_Board_Names_Can_Be_used_as_Strings/issue1047_Board_Names_Can_Be_used_as_Strings.globals.h\" \"e:/platform/arduinoPlugin/packages/esp8266/hardware/esp8266/3.1.1/cores/esp8266/CommonHFile.h\" \r\n\r\n*** File preferences.txt not found on Windows\r\n\r\n*** 'preferences.txt' file missing from well known locations.\r\nmake[1]: [makefile:134: pre-build] Error 1 (ignored)\r\n' '\r\ne:/platform/arduinoPlugin/tools/make/make --no-print-directory main-build\r\n'Building file: ..\\sloeber.ino.cpp'\r\n'Starting C++ compile'\r\n\"e:\\platform\\arduinoPlugin\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec/bin/xtensa-lx106-elf-g++\" -D__ets__ -DICACHE_FLASH -U__STRICT_ANSI__ -D_GNU_SOURCE -DESP8266 \"@L:\\test\\junit-workspace\\issue1047_Board_Names_Can_Be_used_as_Strings\\Release/core/build.opt\" \"-Ie:\\platform\\arduinoPlugin\\packages\\esp8266\\hardware\\esp8266\\3.1.1/tools/sdk/include\" \"-Ie:\\platform\\arduinoPlugin\\packages\\esp8266\\hardware\\esp8266\\3.1.1/tools/sdk/lwip2/include\" \"-Ie:\\platform\\arduinoPlugin\\packages\\esp8266\\hardware\\esp8266\\3.1.1/tools/sdk/libc/xtensa-lx106-elf/include\" \"-IL:\\test\\junit-workspace\\issue1047_Board_Names_Can_Be_used_as_Strings\\Release/core\" -c \"@e:\\platform\\arduinoPlugin\\packages\\esp8266\\hardware\\esp8266\\3.1.1/tools/warnings/none-g++\"  -Os -g -free -fipa-pta -Werror=return-type -mlongcalls -mtext-section-literals -fno-rtti -falign-functions=4 -std=gnu++17 -MMD -ffunction-sections -fdata-sections -fno-exceptions  -DMMU_IRAM_SIZE=0x8000 -DMMU_ICACHE_SIZE=0x8000  -DNONOSDK22x_190703=1 -DF_CPU=80000000L -DLWIP_OPEN_SRC -DTCP_MSS=536 -DLWIP_FEATURES=1 -DLWIP_IPV6=0   -DARDUINO=10812 -DARDUINO_ESP8266_NODEMCU_ESP12 -DARDUINO_ARCH_ESP8266 \"-DARDUINO_BOARD=\\\"ESP8266_NODEMCU_ESP12\\\"\" -DARDUINO_BOARD_ID=\"\"  -DFLASHMODE_QIO   -I\"E:\\platform\\arduinoPlugin\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\" -I\"E:\\platform\\arduinoPlugin\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\variants\\nodemcu\" -MMD -MP -MF\"sloeber.ino.cpp.d\" -MT\"sloeber.ino.cpp.o\" -D__IN_ECLIPSE__=1 \"..\\sloeber.ino.cpp\" -o \"sloeber.ino.cpp.o\"\r\nxtensa-lx106-elf-g++: error: L:\\test\\junit-workspace\\issue1047_Board_Names_Can_Be_used_as_Strings\\Release/core/build.opt: No such file or directory\r\nmake[1]: *** [subdir.mk:20: sloeber.ino.cpp.o] Error 1\r\nmake: *** [makefile:90: all] Error 2\r\n\"e:/platform/arduinoPlugin/tools/make/make all\" terminated with exit code 2. Build might be incomplete.\r\n\r\n18:41:58 Build Failed. 3 errors, 0 warnings. (took 1s.284ms)\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/esp8266/Arduino/issues/8810/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "is_pull_request": false,
        "timeline_events": [
            {
                "event": "commented",
                "actor": "mhightower83",
                "created_at": "2023-01-15T19:09:03Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "jantje",
                "created_at": "2023-01-15T19:24:58Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "mhightower83",
                "created_at": "2023-01-16T03:58:23Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "jantje",
                "created_at": "2023-01-16T14:55:09Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "mhightower83",
                "created_at": "2023-01-17T01:19:48Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "JAndrassy",
                "created_at": "2023-01-17T06:16:53Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "mentioned",
                "actor": "mhightower83",
                "created_at": "2023-01-17T06:16:53Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "subscribed",
                "actor": "mhightower83",
                "created_at": "2023-01-17T06:16:53Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "jantje",
                "created_at": "2023-01-17T16:11:13Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "milestoned",
                "actor": "mcspr",
                "created_at": "2023-01-25T09:41:18Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "labeled",
                "actor": "d-a-v",
                "created_at": "2023-01-26T08:59:17Z",
                "assignee": null,
                "label": "IDE: eclipse"
            },
            {
                "event": "commented",
                "actor": "mcspr",
                "created_at": "2023-01-26T12:55:21Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "closed",
                "actor": "mcspr",
                "created_at": "2023-01-26T12:55:21Z",
                "assignee": null,
                "label": null
            }
        ],
        "comments_data": [
            {
                "id": 1383227578,
                "user": "mhightower83",
                "body": "\r\n`.../tools/mkbuildoptglobals.py` brings global build options to the Arduino IDE. If I followed the features described for \"Eclipse Sloeber\" this has already been addressed and is not needed.\r\n\r\nhttps://arduino-esp8266.readthedocs.io/en/latest/faq/a06-global-build-options.html#custom-build-environments\r\n\r\n",
                "created_at": "2023-01-15T19:09:03Z",
                "updated_at": "2023-01-15T19:09:03Z",
                "author_association": "CONTRIBUTOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1383227578/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1383231041,
                "user": "jantje",
                "body": "This is a change that that was introduced after ESP8266 version 3.0.2\r\nWhen mkbuildoptglobals.py does not find a preferences.txt the opt file is not copied. I think that is a bug in mkbuildoptglobals.py as this makes that proper functioning of ESP8266 is dependent on finding a file that may not be needed.\r\n\r\nSimply changing the script so that the copying of the opt file is done before trying to do the workaround should fix this issue.",
                "created_at": "2023-01-15T19:24:58Z",
                "updated_at": "2023-01-15T19:24:58Z",
                "author_association": "NONE",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1383231041/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1383445669,
                "user": "mhightower83",
                "body": "Yes, the feature was added after 3.0.2\r\n\r\nThe `compiler.cache_core` setting is needed for `mkbuildoptglobals.py` to operate optimally and in some cases build reliability can be affected. \r\n\r\nWith at least two sketches open when the state of `compiler.cache_core` is not accurately known and you are using a `...globals.h` file in one or more sketches, cached results from one build can be inappropriately applied to another sketch's build. \r\n\r\nIt is possible to cause the core files to always be rebuilt every time; however, that slows down development time. It is better to know there is a problem and have the opportunity to address it.\r\n\r\nFor reliable builds, you need to know how you build environment-defined `compiler.cache_core` and pass that info on to mkbuildoptglobals.py through `platform.local.txt` with lines like these:\r\n```\r\nmkbuildoptglobals.extra_flags=--no_cache_core\r\nmkbuildoptglobals.extra_flags=--cache_core\r\n```\r\nDetails on other options can be found [here](https://arduino-esp8266.readthedocs.io/en/latest/faq/a06-global-build-options.html#the-workaround). \r\n\r\nOr the feature can be disabled as described before.\r\n",
                "created_at": "2023-01-16T03:58:23Z",
                "updated_at": "2023-01-16T03:58:23Z",
                "author_association": "CONTRIBUTOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1383445669/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1384177869,
                "user": "jantje",
                "body": "I have read up on the doc you provided me. Basically this feature introduced after ESP8266 V3.0.2 tries to work around a \"difficulty\" introduced in Arduino IDE 1.8.2\r\nSloeber had this \"difficulty\" in version 1.0 and I fixed this \"difficulty\" by having the core archive creation inside the sketch creation. (That was a hard nut to crack for me but I did that and it has been working fine since then.)\r\n\r\nHow I see the corrent situation in ESP8266 talk: Sloeber works with\r\nmkbuildoptglobals.extra_flags=--cache_core\r\nBut every sketch has his own persistent cache (The same cache is used after stopping and restarting Sloeber )\r\n\r\nTherefore the fact that the workaround can not be applied is not an issue at all for Sloeber. The fact the opt file is not copied is a problem.\r\n\r\nMy conclusion\r\nAs the Arduino IDE needs to have a preferences.txt at a very dedicated (set of) location(s). If the preferences.txt file is not where it should be the mkbuildoptglobals.py script can safely assume it is not started by Arduino IDE and as such does not need to apply the workaround and should not throw an Error but simply continue.\r\n",
                "created_at": "2023-01-16T14:55:09Z",
                "updated_at": "2023-01-16T14:55:09Z",
                "author_association": "NONE",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1384177869/reactions",
                    "total_count": 1,
                    "+1": 1,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1384721339,
                "user": "mhightower83",
                "body": "> But every sketch has his own persistent cache (The same cache is used after stopping and restarting Sloeber )\r\n\r\nSince your sketches have a private copy of `core.a`, I think for this case where `core.a` is not shared it is safe to use: `mkbuildoptglobals.extra_flags=--no_cache_core`. The build process will succeed either way; however, a forced rebuild of core files is avoided.\r\n\r\n> If the preferences.txt file is not where it should be the mkbuildoptglobals.py script can safely assume it is not started by Arduino IDE and as such does not need to apply the workaround and should not throw an Error but simply continue.\r\n\r\nAfter 8 months, my recollection of all the nuances and concerns with this enhancement has faded a bit. My exposure to alternative build platforms has been limited. I felt at the time with the uncertainty of how an \"alternative build platform\" might be implemented, it was best to fail rather than silently create a possibly errant build. But, allow for methods that could override the failure by hinting at the correct answer.\r\n\r\nBTW: If you are using `arduino-builder`, passing in an earlier version number, `{runtime.ide.version}`, prior to `10802` would bypass trying to find `preferences.txt`. For example, the CI platform is using `10607`. Also if you remove the `-ide-version=...` parameter, `arduino-builder` will default to an old version number prior to aggressive caching.\r\n\r\nWhile composing this, I see you have a solution path already worked out. I'll post this anyway in case it has content useful for others.\r\n",
                "created_at": "2023-01-17T01:19:48Z",
                "updated_at": "2023-01-17T01:19:48Z",
                "author_association": "CONTRIBUTOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1384721339/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1384886207,
                "user": "JAndrassy",
                "body": "@mhightower83 we would like to use the esp8266 Arduino without preferences.txt ",
                "created_at": "2023-01-17T06:16:53Z",
                "updated_at": "2023-01-17T06:16:53Z",
                "author_association": "CONTRIBUTOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1384886207/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1385665658,
                "user": "jantje",
                "body": ">, I see you have a solution\r\n\r\nI do not have a solution. I have a workaround with some serious drawbacks.\r\n\r\n>I felt at the time with the uncertainty of how an \"alternative build platform\" might be implemented, it was best to fail rather than silently create a possibly errant build. \r\n\r\nSloeber workaround is ignoring any error/failure from the pre build actions. Unfortunately I can not do this only for ESP8266 so now any pre build failure will go unnoticed. \ud83d\ude22 \r\n\r\nAgain: 1) As you implement a platform provider in the arduino framework you should not assume you are started by the Arduino IDE. As such throwing an error because you do not find Arduino stuff is not the way to go.\r\n2) Not being able to apply a workaround to one of the framework implementations should not lead to \"not doing the core business\" (In casu copying the opt file)\r\n",
                "created_at": "2023-01-17T16:11:13Z",
                "updated_at": "2023-01-17T16:11:13Z",
                "author_association": "NONE",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1385665658/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1404966007,
                "user": "mcspr",
                "body": "Was closed in #8803 ",
                "created_at": "2023-01-26T12:55:21Z",
                "updated_at": "2023-01-26T12:55:21Z",
                "author_association": "COLLABORATOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1404966007/reactions",
                    "total_count": 1,
                    "+1": 1,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            }
        ]
    },
    {
        "id": 1533933061,
        "number": 8809,
        "title": "VS Code reports language server error related to generated compilerPath in c_cpp_properties.json by Arduino extension",
        "state": "closed",
        "locked": false,
        "assignees": [],
        "labels": [],
        "milestone": "3.1.2",
        "created_at": "2023-01-15T17:54:57Z",
        "updated_at": "2023-01-26T11:20:19Z",
        "closed_at": "2023-01-26T11:20:19Z",
        "author_association": "NONE",
        "body": "## Problem\r\nAfter upgrading **ESP8266/Arduino core** to **v3.1.1**, the Arduino extension regenerated th `c_cpp_properties.json` file with a `compilerPath` attribute having value causing following **C/C++ configuration error**:\r\n`Unable to resolve configuration with compilerPath: \"@D:\\Portable\\Arduino\\portable\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\tools\\warnings\\default-g++\"`\r\nOn top of this line from `C/C++ Configuration Warning` output, the Code UI shows 5 instances of `cpptools` output windows, all having same content (see also snapshot below):\r\n`[Error - 18:20:27] Connection to server got closed. Server will not be restarted.`\r\n![obrazek](https://user-images.githubusercontent.com/37396169/212557641-11ca598c-93ed-47ea-85b9-a47a931534d2.png)\r\nThen, the intellisense stops working at all, no cross reference can be followed (Ctrl+left mouse click) to see details of function or variable declaration etc.\r\n\r\n## Environment\r\n### Code\r\nVersion: 1.74.3\r\nCommit: 97dec172d3256f8ca4bfb2143f3f76b503ca0534\r\nDate: 2023-01-09T16:59:02.252Z\r\nElectron: 19.1.8\r\nChromium: 102.0.5005.167\r\nNode.js: 16.14.2\r\nV8: 10.2.154.15-electron.0\r\nOS: Windows_NT x64 10.0.19045\r\nSandboxed: No\r\n\r\n### Code Extensions\r\nArduino: 0.4.12\r\nC/C++ Extension Pack: 1.3.0\r\n\r\n## Steps to reproduce\r\nJust run VS Code, open any sketch with Arduino code (*.ino), even empty one. Popup error start to come up in the lower right corner - see snapshot:\r\n![obrazek](https://user-images.githubusercontent.com/37396169/212557696-b7513dde-543a-49b8-a58e-35906db36ce5.png)\r\n\r\n## Code snippet\r\nEvery, does not matter, even this simple blinking LED example:\r\n``` cpp\r\nbyte go = LOW;\r\nvoid setup() {\r\n    pinMode(LED_BUILTIN, OUTPUT);\r\n    digitalWrite(LED_BUILTIN, go);\r\n}\r\nvoid loop() {\r\n    delay(500);\r\n    go = 1 - go;\r\n    digitalWrite(LED_BUILTIN, go);\r\n}\r\n```\r\n\r\n## Code Dev Tools Console Log\r\nsee attached file please\r\n[vscode-app-1673804966418.log](https://github.com/microsoft/vscode-arduino/files/10420833/vscode-app-1673804966418.log)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/esp8266/Arduino/issues/8809/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "is_pull_request": false,
        "timeline_events": [
            {
                "event": "commented",
                "actor": "Bighoneypot",
                "created_at": "2023-01-15T18:01:02Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "mcspr",
                "created_at": "2023-01-17T20:35:26Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "cross-referenced",
                "actor": "milanbx",
                "created_at": "2023-01-18T06:01:55Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "milanbx",
                "created_at": "2023-01-18T06:08:17Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "mentioned",
                "actor": "mscpr",
                "created_at": "2023-01-18T06:08:18Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "subscribed",
                "actor": "mscpr",
                "created_at": "2023-01-18T06:08:18Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "mcspr",
                "created_at": "2023-01-18T23:36:45Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "milanbx",
                "created_at": "2023-01-19T17:08:39Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "milanbx",
                "created_at": "2023-01-19T21:36:59Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "mcspr",
                "created_at": "2023-01-20T09:38:03Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "milanbx",
                "created_at": "2023-01-20T10:07:25Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "mcspr",
                "created_at": "2023-01-20T10:47:12Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "milanbx",
                "created_at": "2023-01-20T12:22:45Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "milanbx",
                "created_at": "2023-01-20T12:50:55Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "mcspr",
                "created_at": "2023-01-20T13:36:24Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "milanbx",
                "created_at": "2023-01-20T15:19:01Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "mcspr",
                "created_at": "2023-01-20T17:38:24Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "milanbx",
                "created_at": "2023-01-21T18:13:49Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "milestoned",
                "actor": "mcspr",
                "created_at": "2023-01-25T09:36:51Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "referenced",
                "actor": "mcspr",
                "created_at": "2023-01-26T09:39:06Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "cross-referenced",
                "actor": "mcspr",
                "created_at": "2023-01-26T09:40:51Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "demilestoned",
                "actor": "mcspr",
                "created_at": "2023-01-26T09:41:35Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "milestoned",
                "actor": "mcspr",
                "created_at": "2023-01-26T09:41:52Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "closed",
                "actor": "mcspr",
                "created_at": "2023-01-26T11:20:19Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "referenced",
                "actor": "mcspr",
                "created_at": "2023-01-26T11:20:39Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "referenced",
                "actor": "hasenradball",
                "created_at": "2024-11-18T16:42:13Z",
                "assignee": null,
                "label": null
            }
        ],
        "comments_data": [
            {
                "id": 1383213536,
                "user": "Bighoneypot",
                "body": "Use direct LOW and not byte go= LOW;\n\nOn Sun, 15 Jan 2023, 18:55 jeseter, ***@***.***> wrote:\n\n> Problem\n>\n> After upgrading *ESP8266/Arduino core* to *v3.1.1*, the extension\n> regenerated th c_cpp_properties.json file with a compilerPath attribute\n> having value causing *C/C++ configuration error*:\n> Unable to resolve configuration with compilerPath:\n> ***@***.***:\\Portable\\Arduino\\portable\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\tools\\warnings\\default-g++\"\n> On top of this line from C/C++ Configuration Warning output, the Code UI\n> shows 5 instances of cpptools output, all having same content (see also\n> snapshot below):\n> [Error - 18:20:27] Connection to server got closed. Server will not be\n> restarted.\n> [image: obrazek]\n> <https://user-images.githubusercontent.com/37396169/212557641-11ca598c-93ed-47ea-85b9-a47a931534d2.png>\n> Then, the intellisense stops warking at all, co cross reference can be\n> followed (Ctrl+left mouse click) to see details of function or variable\n> declaration etc.\n> Environment Code\n>\n> Version: 1.74.3\n> Commit: 97dec172d3256f8ca4bfb2143f3f76b503ca0534\n> Date: 2023-01-09T16:59:02.252Z\n> Electron: 19.1.8\n> Chromium: 102.0.5005.167\n> Node.js: 16.14.2\n> V8: 10.2.154.15-electron.0\n> OS: Windows_NT x64 10.0.19045\n> Sandboxed: No\n> Extensions\n>\n> Arduino: 0.4.12\n> C/C++ Extension Pack: 1.3.0\n> Steps to reproduce\n>\n> Just run VS Code, open any sketch with Arduino code (*.ino), even empty\n> one. Popup error start to come up in the lower right corner - see snapshot:\n> [image: obrazek]\n> <https://user-images.githubusercontent.com/37396169/212557696-b7513dde-543a-49b8-a58e-35906db36ce5.png>\n> Code snippet\n>\n> Every, does not matter, even this simple blinking LED example:\n>\n> byte go = LOW;void setup() {\n>     pinMode(LED_BUILTIN, OUTPUT);\n>     digitalWrite(LED_BUILTIN, go);\n> }void loop() {\n>     delay(500);\n>     go = 1 - go;\n>     digitalWrite(LED_BUILTIN, go);\n> }\n>\n> Dev Tools Console Log\n>\n> see attached file please\n> vscode-app-1673804966418.log\n> <https://github.com/microsoft/vscode-arduino/files/10420833/vscode-app-1673804966418.log>\n>\n> \u2014\n> Reply to this email directly, view it on GitHub\n> <https://github.com/esp8266/Arduino/issues/8809>, or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AIPMDFEYS346ZDOAZDHVKATWSQ2Z7ANCNFSM6AAAAAAT37R2NE>\n> .\n> You are receiving this because you are subscribed to this thread.Message\n> ID: ***@***.***>\n>\n",
                "created_at": "2023-01-15T18:01:02Z",
                "updated_at": "2023-01-15T18:04:26Z",
                "author_association": "CONTRIBUTOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1383213536/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1386017759,
                "user": "mcspr",
                "body": "Also reported at https://github.com/microsoft/vscode-arduino/issues/1567\r\n\r\nI wonder if changing `\"@{compiler.warning_flags}\"` to `@\"{compiler_warning.flags}\"` in compiler properties would help Intellisense out, unless it really does not understand `@file-path` syntax.\r\n\r\ni.e.\r\n```diff\r\ndiff --git a/platform.txt b/platform.txt\r\nindex 120cfb00..9ca484fb 100644\r\n--- a/platform.txt\r\n+++ b/platform.txt\r\n@@ -22,11 +22,11 @@ runtime.tools.mkdir={runtime.platform.path}/tools/mkdir.py\r\n runtime.tools.cp={runtime.platform.path}/tools/cp.py\r\n runtime.tools.eboot={runtime.platform.path}/bootloaders/eboot/eboot.elf\r\n\r\n-compiler.warning_flags=@{runtime.platform.path}/tools/warnings/none\r\n-compiler.warning_flags.none=@{runtime.platform.path}/tools/warnings/none\r\n-compiler.warning_flags.default=@{runtime.platform.path}/tools/warnings/default\r\n-compiler.warning_flags.more=@{runtime.platform.path}/tools/warnings/more\r\n-compiler.warning_flags.all=@{runtime.platform.path}/tools/warnings/extra\r\n+compiler.warning_flags={runtime.platform.path}/tools/warnings/none\r\n+compiler.warning_flags.none={runtime.platform.path}/tools/warnings/none\r\n+compiler.warning_flags.default={runtime.platform.path}/tools/warnings/default\r\n+compiler.warning_flags.more={runtime.platform.path}/tools/warnings/more\r\n+compiler.warning_flags.all={runtime.platform.path}/tools/warnings/extra\r\n\r\n build.lwip_lib=-llwip_gcc\r\n build.lwip_include=lwip/include\r\n@@ -76,18 +76,18 @@ compiler.cpreprocessor.flags=-D__ets__ -DICACHE_FLASH -U__STRICT_ANSI__ -D_GNU_S\r\n compiler.libraries.ldflags=\r\n\r\n compiler.c.cmd=xtensa-lx106-elf-gcc\r\n-compiler.c.flags=-c \"{compiler.warning_flags}-gcc\" -std=gnu17 {build.stacksmash_flags} -Os -g -free -fipa-pta -Werror=return-type -Wpointer-arith -Wno-implicit-function-declaration -Wl,-EL -fno-inline-functions -nostdlib -mlongcalls -mtext-section-literals -falign-functions=4 -MMD -ffunction-sections -fdata-sections {build.exception_flags} {build.sslflags} {build.mmuflags} {build.non32xferflags}\r\n+compiler.c.flags=-c @\"{compiler.warning_flags}-gcc\" -std=gnu17 {build.stacksmash_flags} -Os -g -free -fipa-pta -Werror=return-type -Wpointer-arith -Wno-implicit-function-declaration -Wl,-EL -fno-inline-functions -nostdlib -mlongcalls -mtext-section-literals -falign-functions=4 -MMD -ffunction-sections -fdata-sections {build.exception_flags} {build.sslflags} {build.mmuflags} {build.non32xferflags}\r\n\r\n compiler.S.cmd=xtensa-lx106-elf-gcc\r\n compiler.S.flags=-c -g -x assembler-with-cpp -MMD -mlongcalls \"-I{runtime.tools.xtensa-lx106-elf-gcc.path}/include/\"\r\n\r\n-compiler.c.elf.flags=-g \"{compiler.warning_flags}-gcc\" -Os -nostdlib -Wl,--no-check-sections -u app_entry {build.float} -Wl,-static \"-L{compiler.sdk.path}/lib\" \"-L{compiler.sdk.path}/lib/{build.sdk}\" \"-L{build.path}\" \"-L{compiler.libc.path}/lib\" \"-Tlocal.eagle.flash.ld\" -Wl,--gc-sections -Wl,-wrap,system_restart_local -Wl,-wrap,spi_flash_read\r\n+compiler.c.elf.flags=-g @\"{compiler.warning_flags}-gcc\" -Os -nostdlib -Wl,--no-check-sections -u app_entry {build.float} -Wl,-static \"-L{compiler.sdk.path}/lib\" \"-L{compiler.sdk.path}/lib/{build.sdk}\" \"-L{build.path}\" \"-L{compiler.libc.path}/lib\" \"-Tlocal.eagle.flash.ld\" -Wl,--gc-sections -Wl,-wrap,system_restart_local -Wl,-wrap,spi_flash_read\r\n\r\n compiler.c.elf.cmd=xtensa-lx106-elf-gcc\r\n compiler.c.elf.libs=-lhal -lphy -lpp -lnet80211 {build.lwip_lib} -lwpa -lcrypto -lmain -lwps -lbearssl -lespnow -lsmartconfig -lairkiss -lwpa2 {build.stdcpp_lib} -lm -lc -lgcc\r\n\r\n compiler.cpp.cmd=xtensa-lx106-elf-g++\r\n-compiler.cpp.flags=-c \"{compiler.warning_flags}-g++\" {build.stacksmash_flags} -Os -g -free -fipa-pta -Werror=return-type -mlongcalls -mtext-section-literals -fno-rtti -falign-functions=4 {build.stdcpp_level} -MMD -ffunction-sections -fdata-sections {build.exception_flags} {build.sslflags} {build.mmuflags} {build.non32xferflags}\r\n+compiler.cpp.flags=-c @\"{compiler.warning_flags}-g++\" {build.stacksmash_flags} -Os -g -free -fipa-pta -Werror=return-type -mlongcalls -mtext-section-literals -fno-rtti -falign-functions=4 {build.stdcpp_level} -MMD -ffunction-sections -fdata-sections {build.exception_flags} {build.sslflags} {build.mmuflags} {build.non32xferflags}\r\n\r\n compiler.as.cmd=xtensa-lx106-elf-as\r\n```\r\n\r\nUnable to reproduce, still. VSCode, Arduino extension and C++ pack does not want to enable Arduino language mode. Maybe something missing... are there any extra settings you have applied? In VSCode .json, or the sketch one.\r\n```json\r\n{\r\n    \"arduino.useArduinoCli\": true,\r\n    \"arduino.path\": \"C:\\\\Program Files\\\\Arduino CLI\",\r\n    \"C_Cpp.loggingLevel\": \"Debug\",\r\n    \"arduino.commandPath\": \"arduino-cli.exe\",\r\n    \"arduino.logLevel\": \"verbose\"\r\n}\r\n```",
                "created_at": "2023-01-17T20:35:26Z",
                "updated_at": "2023-01-17T20:35:26Z",
                "author_association": "COLLABORATOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1386017759/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1386538989,
                "user": "milanbx",
                "body": "Hi  @mscpr and thanks for your answer. Regarding the \"@\" prefix in `cimpilerPath`, here is some more info: https://github.com/microsoft/vscode-cpptools/issues/10385#issuecomment-1386343166\r\nAnd here is the content of my `arduino.json`, which is almost the same for month now and used in other my projects too, so thus may not be the cause:\r\n``` json\r\n    \"port\": \"COM3\",\r\n    \"configuration\": \"xtal=80,vt=flash,exception=disabled,stacksmash=disabled,ssl=all,mmu=3232,non32xfer=fast,ResetMethod=ck,CrystalFreq=26,FlashFreq=40,FlashMode=dout,eesz=1M,led=2,sdk=nonosdk_190703,ip=lm2f,dbg=Disabled,lvl=None____,wipe=none,baud=921600\",\r\n    \"board\": \"esp8266:esp8266:generic\",\r\n    \"sketch\": \"zaluzieRF.ino\",\r\n    \"output\": \"d:\\\\VSBuildTemp\"\r\n```",
                "created_at": "2023-01-18T06:08:17Z",
                "updated_at": "2023-01-18T06:08:17Z",
                "author_association": "NONE",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1386538989/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1396233742,
                "user": "mcspr",
                "body": "Thanks for the link! We indeed have a valid syntax here, I was just wondering about how should we place `@` - just before `\"` or keep it within quotes.\r\n\r\nIntellisense generation you are seeing somehow misses the fact that actual compiler path to g++ is not our warning file, but the path just before.\r\ne.g. for me it is at `\"C:\\Users\\maxim\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec\\bin\\xtensa-lx106-elf-g++.exe`\r\n\r\nI was hoping to test some things with Intellisense myself, but consistently get a very nondescript message. As it seems to just stay in Win32 (cl.exe) mode and failing, Arduino extension never even tries to create `c_cpp_properties.json`\r\n> [Warning] Failed to generate IntelliSense configuration.\r\n[Done] Analyzing sketch 'arduino8809.ino'\r\n\r\n",
                "created_at": "2023-01-18T23:36:45Z",
                "updated_at": "2023-01-18T23:36:45Z",
                "author_association": "COLLABORATOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1396233742/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1397319994,
                "user": "milanbx",
                "body": "Are you saying, that the `c_cpp_properties.json` is populated by C/C++ extension?\r\nI am asking particulary because the fact, that when I change the path to compiler manualy to `d:\\Portable\\Arduino\\portable\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec\\bin\\xtensa-lx106-elf-g++.exe `, next run of rebuilding intellisense info chagnes the path back to the one that causes the error.\r\nSo, question is, who rewrites it?",
                "created_at": "2023-01-19T17:08:39Z",
                "updated_at": "2023-01-19T17:08:39Z",
                "author_association": "NONE",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1397319994/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1397640523,
                "user": "milanbx",
                "body": "I have used vanilla Code portable installation v1.74.3 with only Arduino extension, which requires C/C++ extension v1.13.9, without ESP8266 or any other aditional board, and empty sketch configured for Arduino Uno (on Windows 11), and the bug did not appear any more. It means, the bug has to do something with ESP8266 Arduino core.",
                "created_at": "2023-01-19T21:36:59Z",
                "updated_at": "2023-01-19T21:57:28Z",
                "author_association": "NONE",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1397640523/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1398137110,
                "user": "mcspr",
                "body": "> Are you saying, that the `c_cpp_properties.json` is populated by C/C++ extension? I am asking particulary because the fact, that when I change the path to compiler manualy to `d:\\Portable\\Arduino\\portable\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec\\bin\\xtensa-lx106-elf-g++.exe `, next run of rebuilding intellisense info chagnes the path back to the one that causes the error. So, question is, who rewrites it?\r\n\r\nI would assume so - command palette has Arduino: action for Intellisense. Same thing mentioned in settings.\r\n\r\nHave you tried the patch above? `\"@{compiler blah}\"` -> `@\"{compiler blah}\"`, to see whether it is a problem with quoting",
                "created_at": "2023-01-20T09:38:03Z",
                "updated_at": "2023-01-20T09:42:03Z",
                "author_association": "COLLABORATOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1398137110/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1398168329,
                "user": "milanbx",
                "body": "well I did try it but every run of a compiler rewrites the line again",
                "created_at": "2023-01-20T10:07:25Z",
                "updated_at": "2023-01-20T10:07:25Z",
                "author_association": "NONE",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1398168329/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1398210841,
                "user": "mcspr",
                "body": "> well I did try it but every run of a compiler rewrites the line again\r\n\r\n`D:\\Portable\\Arduino\\portable\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\platform.txt` should not be modified by extension, it is our file",
                "created_at": "2023-01-20T10:47:12Z",
                "updated_at": "2023-01-20T10:47:12Z",
                "author_association": "COLLABORATOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1398210841/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1398309304,
                "user": "milanbx",
                "body": "I have applied all changes as you have described in the patch 2 days ago, and it didnot helped. See console output:\r\n```\r\n[Starting] Analyzing sketch 'xxx.ino'\r\n[Warning] Output path is not specified. Unable to reuse previously compiled files. Build will be slower. See README.\r\nLoading configuration...\r\nInitializing packages...\r\nPreparing boards...\r\nVerifying...\r\nError while detecting libraries included by C:\\Users\\milan\\AppData\\Local\\Temp\\arduino_build_145046\\sketch\\xxx.ino.cpp\r\nxtensa-lx106-elf-g++: error: \"D:\\Portable\\Arduino\\portable\\packages\\esp8266\\hardware\\esp8266\\3.1.1/tools/warnings/none-g++\": Invalid argument\r\nexit status 1\r\n[Warning] Failed to generate IntelliSense configuration.\r\n[Error] Analyzing sketch 'xxx.ino': Exit with code=1\r\n```",
                "created_at": "2023-01-20T12:22:45Z",
                "updated_at": "2023-01-20T12:22:45Z",
                "author_association": "NONE",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1398309304/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1398335341,
                "user": "milanbx",
                "body": "I have downgraded ro 3.0.2, where all works fine and made a diff:\r\n``` diff\r\n--- platform302.txt\t2021-07-27 00:35:15.000000000 +0200\r\n+++ platform311.txt\t2023-01-20 13:22:55.335208900 +0100\r\n@@ -5,8 +5,8 @@\r\n # For more info:\r\n # https://github.com/arduino/Arduino/wiki/Arduino-IDE-1.5-3rd-party-Hardware-specification\r\n \r\n-name=ESP8266 Boards (3.0.2)\r\n-version=3.0.2\r\n+name=ESP8266 Boards (3.1.1)\r\n+version=3.1.1\r\n \r\n # These will be removed by the packager script when doing a JSON release\r\n \r\n@@ -17,15 +17,16 @@\r\n runtime.tools.elf2bin={runtime.platform.path}/tools/elf2bin.py\r\n runtime.tools.sizes={runtime.platform.path}/tools/sizes.py\r\n runtime.tools.makecorever={runtime.platform.path}/tools/makecorever.py\r\n+runtime.tools.mkbuildoptglobals={runtime.platform.path}/tools/mkbuildoptglobals.py\r\n runtime.tools.mkdir={runtime.platform.path}/tools/mkdir.py\r\n runtime.tools.cp={runtime.platform.path}/tools/cp.py\r\n runtime.tools.eboot={runtime.platform.path}/bootloaders/eboot/eboot.elf\r\n \r\n-compiler.warning_flags=-w -Werror=return-type\r\n-compiler.warning_flags.none=-w -Werror=return-type\r\n-compiler.warning_flags.default=-Werror=return-type\r\n-compiler.warning_flags.more=-Wall -Werror=return-type\r\n-compiler.warning_flags.all=-Wall -Wextra -Werror=return-type\r\n+compiler.warning_flags=@{runtime.platform.path}/tools/warnings/none\r\n+compiler.warning_flags.none=@{runtime.platform.path}/tools/warnings/none\r\n+compiler.warning_flags.default=@{runtime.platform.path}/tools/warnings/default\r\n+compiler.warning_flags.more=@{runtime.platform.path}/tools/warnings/more\r\n+compiler.warning_flags.all=@{runtime.platform.path}/tools/warnings/extra\r\n \r\n build.lwip_lib=-llwip_gcc\r\n build.lwip_include=lwip/include\r\n@@ -52,25 +53,41 @@\r\n #build.sdk=NONOSDK22x_191024\r\n #build.sdk=NONOSDK22x_191105\r\n \r\n+# These are not overriden when FS is not configured\r\n+build.eeprom_start=\r\n+build.spiffs_start=\r\n+build.spiffs_end=\r\n+build.spiffs_blocksize=\r\n+\r\n+# Fully qualified file names for processing sketch global options\r\n+globals.h.source.fqfn={build.source.path}/{build.project_name}.globals.h\r\n+commonhfile.fqfn={build.core.path}/CommonHFile.h\r\n+build.opt.fqfn={build.path}/core/build.opt\r\n+build.opt.flags=\"@{build.opt.fqfn}\"\r\n+mkbuildoptglobals.extra_flags=\r\n+\r\n compiler.path={runtime.tools.xtensa-lx106-elf-gcc.path}/bin/\r\n compiler.sdk.path={runtime.platform.path}/tools/sdk\r\n \r\n compiler.libc.path={runtime.platform.path}/tools/sdk/libc/xtensa-lx106-elf\r\n-compiler.cpreprocessor.flags=-D__ets__ -DICACHE_FLASH -U__STRICT_ANSI__ -D_GNU_SOURCE \"-I{compiler.sdk.path}/include\" \"-I{compiler.sdk.path}/{build.lwip_include}\" \"-I{compiler.libc.path}/include\" \"-I{build.path}/core\"\r\n+compiler.cpreprocessor.flags=-D__ets__ -DICACHE_FLASH -U__STRICT_ANSI__ -D_GNU_SOURCE -DESP8266 {build.opt.flags} \"-I{compiler.sdk.path}/include\" \"-I{compiler.sdk.path}/{build.lwip_include}\" \"-I{compiler.libc.path}/include\" \"-I{build.path}/core\"\r\n+\r\n+# support precompiled libraries in IDE v1.8.6+\r\n+compiler.libraries.ldflags=\r\n \r\n compiler.c.cmd=xtensa-lx106-elf-gcc\r\n-compiler.c.flags=-c {compiler.warning_flags} -std=gnu17 {build.stacksmash_flags} -Os -g -free -fipa-pta -Wpointer-arith -Wno-implicit-function-declaration -Wl,-EL -fno-inline-functions -nostdlib -mlongcalls -mtext-section-literals -falign-functions=4 -MMD -ffunction-sections -fdata-sections {build.exception_flags} {build.sslflags} {build.mmuflags} {build.non32xferflags}\r\n+compiler.c.flags=-c \"{compiler.warning_flags}-gcc\" -std=gnu17 {build.stacksmash_flags} -Os -g -free -fipa-pta -Werror=return-type -Wpointer-arith -Wno-implicit-function-declaration -Wl,-EL -fno-inline-functions -nostdlib -mlongcalls -mtext-section-literals -falign-functions=4 -MMD -ffunction-sections -fdata-sections {build.exception_flags} {build.sslflags} {build.mmuflags} {build.non32xferflags}\r\n \r\n compiler.S.cmd=xtensa-lx106-elf-gcc\r\n compiler.S.flags=-c -g -x assembler-with-cpp -MMD -mlongcalls \"-I{runtime.tools.xtensa-lx106-elf-gcc.path}/include/\"\r\n \r\n-compiler.c.elf.flags=-g {compiler.warning_flags} -Os -nostdlib -Wl,--no-check-sections -u app_entry {build.float} -Wl,-static \"-L{compiler.sdk.path}/lib\" \"-L{compiler.sdk.path}/lib/{build.sdk}\" \"-L{build.path}\" \"-L{compiler.libc.path}/lib\" \"-Tlocal.eagle.flash.ld\" -Wl,--gc-sections -Wl,-wrap,system_restart_local -Wl,-wrap,spi_flash_read\r\n+compiler.c.elf.flags=-g \"{compiler.warning_flags}-gcc\" -Os -nostdlib -Wl,--no-check-sections -u app_entry {build.float} -Wl,-static \"-L{compiler.sdk.path}/lib\" \"-L{compiler.sdk.path}/lib/{build.sdk}\" \"-L{build.path}\" \"-L{compiler.libc.path}/lib\" \"-Tlocal.eagle.flash.ld\" -Wl,--gc-sections -Wl,-wrap,system_restart_local -Wl,-wrap,spi_flash_read\r\n \r\n compiler.c.elf.cmd=xtensa-lx106-elf-gcc\r\n compiler.c.elf.libs=-lhal -lphy -lpp -lnet80211 {build.lwip_lib} -lwpa -lcrypto -lmain -lwps -lbearssl -lespnow -lsmartconfig -lairkiss -lwpa2 {build.stdcpp_lib} -lm -lc -lgcc\r\n \r\n compiler.cpp.cmd=xtensa-lx106-elf-g++\r\n-compiler.cpp.flags=-c {compiler.warning_flags} {build.stacksmash_flags} -Os -g -free -fipa-pta -mlongcalls -mtext-section-literals -fno-rtti -falign-functions=4 {build.stdcpp_level} -MMD -ffunction-sections -fdata-sections {build.exception_flags} {build.sslflags} {build.mmuflags} {build.non32xferflags}\r\n+compiler.cpp.flags=-c \"{compiler.warning_flags}-g++\" {build.stacksmash_flags} -Os -g -free -fipa-pta -Werror=return-type -mlongcalls -mtext-section-literals -fno-rtti -falign-functions=4 {build.stdcpp_level} -MMD -ffunction-sections -fdata-sections {build.exception_flags} {build.sslflags} {build.mmuflags} {build.non32xferflags}\r\n \r\n compiler.as.cmd=xtensa-lx106-elf-as\r\n \r\n@@ -83,7 +100,7 @@\r\n compiler.size.cmd=xtensa-lx106-elf-size\r\n \r\n # This can be overridden in boards.txt\r\n-build.extra_flags=-DESP8266\r\n+build.extra_flags=\r\n \r\n # These can be overridden in platform.local.txt\r\n compiler.c.extra_flags=\r\n@@ -100,6 +117,10 @@\r\n # This is quite a working hack. This form of prebuild hook, while intuitive, is not explicitly documented.\r\n \r\n \r\n+# Handle processing sketch global options\r\n+recipe.hooks.prebuild.2.pattern=\"{runtime.tools.python3.path}/python3\" -I \"{runtime.tools.mkbuildoptglobals}\" \"{runtime.ide.path}\" {runtime.ide.version} \"{build.path}\" \"{build.opt.fqfn}\" \"{globals.h.source.fqfn}\" \"{commonhfile.fqfn}\" {mkbuildoptglobals.extra_flags}\r\n+\r\n+\r\n ## Build the app.ld linker file\r\n recipe.hooks.linking.prelink.1.pattern=\"{runtime.tools.python3.path}/python3\" -I \"{runtime.tools.mkdir}\" -p \"{build.path}/ld_h/\"\r\n recipe.hooks.linking.prelink.2.pattern=\"{runtime.tools.python3.path}/python3\" -I \"{runtime.tools.cp}\" \"{runtime.platform.path}/tools/sdk/ld/{build.flash_ld}\" \"{build.path}/ld_h/local.eagle.flash.ld.h\"\r\n@@ -107,19 +128,19 @@\r\n recipe.hooks.linking.prelink.4.pattern=\"{compiler.path}{compiler.c.cmd}\" -CC -E -P {build.vtable_flags} {build.mmuflags} \"{runtime.platform.path}/tools/sdk/ld/eagle.app.v6.common.ld.h\" -o \"{build.path}/local.eagle.app.v6.common.ld\"\r\n \r\n ## Compile c files\r\n-recipe.c.o.pattern=\"{compiler.path}{compiler.c.cmd}\" {compiler.cpreprocessor.flags} {compiler.c.flags} -D{build.sdk}=1 -DF_CPU={build.f_cpu} {build.lwip_flags} {build.debug_port} {build.debug_level} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} -DARDUINO_BOARD=\"{build.board}\" {build.led} {build.flash_flags} {compiler.c.extra_flags} {build.extra_flags} {includes} \"{source_file}\" -o \"{object_file}\"\r\n+recipe.c.o.pattern=\"{compiler.path}{compiler.c.cmd}\" {compiler.cpreprocessor.flags} {compiler.c.flags} -D{build.sdk}=1 -DF_CPU={build.f_cpu} {build.lwip_flags} {build.debug_port} {build.debug_level} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} -DARDUINO_BOARD=\"{build.board}\" -DARDUINO_BOARD_ID=\"{_id}\" {build.led} {build.flash_flags} {compiler.c.extra_flags} {build.extra_flags} {includes} \"{source_file}\" -o \"{object_file}\"\r\n \r\n ## Compile c++ files\r\n-recipe.cpp.o.pattern=\"{compiler.path}{compiler.cpp.cmd}\" {compiler.cpreprocessor.flags} {compiler.cpp.flags} -D{build.sdk}=1 -DF_CPU={build.f_cpu} {build.lwip_flags} {build.debug_port} {build.debug_level} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} -DARDUINO_BOARD=\"{build.board}\" {build.led} {build.flash_flags} {compiler.cpp.extra_flags} {build.extra_flags} {includes} \"{source_file}\" -o \"{object_file}\"\r\n+recipe.cpp.o.pattern=\"{compiler.path}{compiler.cpp.cmd}\" {compiler.cpreprocessor.flags} {compiler.cpp.flags} -D{build.sdk}=1 -DF_CPU={build.f_cpu} {build.lwip_flags} {build.debug_port} {build.debug_level} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} -DARDUINO_BOARD=\"{build.board}\" -DARDUINO_BOARD_ID=\"{_id}\" {build.led} {build.flash_flags} {compiler.cpp.extra_flags} {build.extra_flags} {includes} \"{source_file}\" -o \"{object_file}\"\r\n \r\n ## Compile S files\r\n-recipe.S.o.pattern=\"{compiler.path}{compiler.c.cmd}\" {compiler.cpreprocessor.flags} {compiler.S.flags} -D{build.sdk}=1 -DF_CPU={build.f_cpu} {build.lwip_flags} {build.debug_port} {build.debug_level} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} -DARDUINO_BOARD=\"{build.board}\" {build.led} {build.flash_flags} {compiler.S.extra_flags} {build.extra_flags} {includes} \"{source_file}\" -o \"{object_file}\"\r\n+recipe.S.o.pattern=\"{compiler.path}{compiler.c.cmd}\" {compiler.cpreprocessor.flags} {compiler.S.flags} -D{build.sdk}=1 -DF_CPU={build.f_cpu} {build.lwip_flags} {build.debug_port} {build.debug_level} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} -DARDUINO_BOARD=\"{build.board}\" -DARDUINO_BOARD_ID=\"{_id}\" {build.led} {build.flash_flags} {compiler.S.extra_flags} {build.extra_flags} {includes} \"{source_file}\" -o \"{object_file}\"\r\n \r\n ## Create archives\r\n recipe.ar.pattern=\"{compiler.path}{compiler.ar.cmd}\" {compiler.ar.flags} {compiler.ar.extra_flags} \"{archive_file_path}\" \"{object_file}\"\r\n \r\n ## Combine gc-sections, archives, and objects\r\n-recipe.c.combine.pattern=\"{compiler.path}{compiler.c.elf.cmd}\" {build.exception_flags} -Wl,-Map \"-Wl,{build.path}/{build.project_name}.map\" {compiler.c.elf.flags} {compiler.c.elf.extra_flags} -o \"{build.path}/{build.project_name}.elf\" -Wl,--start-group {object_files} \"{archive_file_path}\" {compiler.c.elf.libs} -Wl,--end-group \"-L{build.path}\"\r\n+recipe.c.combine.pattern=\"{compiler.path}{compiler.c.elf.cmd}\" {build.exception_flags} -Wl,-Map \"-Wl,{build.path}/{build.project_name}.map\" {compiler.c.elf.flags} {compiler.c.elf.extra_flags} -o \"{build.path}/{build.project_name}.elf\" -Wl,--start-group {object_files} \"{archive_file_path}\" {compiler.c.elf.libs} {compiler.libraries.ldflags} -Wl,--end-group \"-L{build.path}\"\r\n \r\n ## Create eeprom\r\n recipe.objcopy.eep.pattern=\r\n@@ -127,7 +148,7 @@\r\n ## Create hex\r\n recipe.objcopy.hex.1.pattern=\"{runtime.tools.python3.path}/python3\" -I \"{runtime.tools.elf2bin}\" --eboot \"{runtime.tools.eboot}\" --app \"{build.path}/{build.project_name}.elf\" --flash_mode {build.flash_mode} --flash_freq {build.flash_freq} --flash_size {build.flash_size} --path \"{runtime.tools.xtensa-lx106-elf-gcc.path}/bin\" --out \"{build.path}/{build.project_name}.bin\"\r\n recipe.objcopy.hex.2.pattern=\"{runtime.tools.python3.path}/python3\" -I \"{runtime.tools.signing}\" --mode sign --privatekey \"{build.source.path}/private.key\" --bin \"{build.path}/{build.project_name}.bin\" --out \"{build.path}/{build.project_name}.bin.signed\" --legacy \"{build.path}/{build.project_name}.bin.legacy_sig\"\r\n-recipe.objcopy.hex.3.pattern=\"{runtime.tools.python3.path}/python3\" -I \"{runtime.tools.sizes}\" --elf \"{build.path}/{build.project_name}.elf\" --path \"{runtime.tools.xtensa-lx106-elf-gcc.path}/bin\" --mmu \"{build.mmuflags}\"\r\n+recipe.objcopy.hex.3.pattern=\"{runtime.tools.python3.path}/python3\" -X utf8 -I \"{runtime.tools.sizes}\" --elf \"{build.path}/{build.project_name}.elf\" --path \"{runtime.tools.xtensa-lx106-elf-gcc.path}/bin\" --mmu \"{build.mmuflags}\"\r\n \r\n ## Save hex\r\n recipe.output.tmp_file={build.project_name}.bin\r\n\r\n```\r\nSome of the changed lines above has to cause this problem. But I cannot find out, which ones...",
                "created_at": "2023-01-20T12:50:55Z",
                "updated_at": "2023-01-20T12:50:55Z",
                "author_association": "NONE",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1398335341/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1398404239,
                "user": "mcspr",
                "body": "Well, if `@` is not a problem...\r\n\r\nAnother guess, after reading extension dependencies and seeing this loop\r\nhttps://github.com/elektronikworkshop/cocopa/blob/ce125785574735b777e2a40bad0e85dd41580692/src/ParserGcc.ts#L64\r\n\r\nWhat about removing `-g++` and `-gcc` suffixes from warnings?\r\n*edit* compilation would probably fail though, that filepath needs to exist. hopefully, json would use correct compiler string\r\n```diff\r\ndiff --git a/platform.txt b/platform.txt\r\nindex 120cfb00..04e00110 100644\r\n--- a/platform.txt\r\n+++ b/platform.txt\r\n@@ -76,18 +76,18 @@ compiler.cpreprocessor.flags=-D__ets__ -DICACHE_FLASH -U__STRICT_ANSI__ -D_GNU_S\r\n compiler.libraries.ldflags=\r\n\r\n compiler.c.cmd=xtensa-lx106-elf-gcc\r\n-compiler.c.flags=-c \"{compiler.warning_flags}-gcc\" -std=gnu17 {build.stacksmash_flags} -Os -g -free -fipa-pta -Werror=return-type -Wpointer-arith -Wno-implicit-function-declaration -Wl,-EL -fno-inline-functions -nostdlib -mlongcalls -mtext-section-literals -falign-functions=4 -MMD -ffunction-sections -fdata-sections {build.exception_flags} {build.sslflags} {build.mmuflags} {build.non32xferflags}\r\n+compiler.c.flags=-c \"{compiler.warning_flags}\" -std=gnu17 {build.stacksmash_flags} -Os -g -free -fipa-pta -Werror=return-type -Wpointer-arith -Wno-implicit-function-declaration -Wl,-EL -fno-inline-functions -nostdlib -mlongcalls -mtext-section-literals -falign-functions=4 -MMD -ffunction-sections -fdata-sections {build.exception_flags} {build.sslflags} {build.mmuflags} {build.non32xferflags}\r\n\r\n compiler.S.cmd=xtensa-lx106-elf-gcc\r\n compiler.S.flags=-c -g -x assembler-with-cpp -MMD -mlongcalls \"-I{runtime.tools.xtensa-lx106-elf-gcc.path}/include/\"\r\n\r\n-compiler.c.elf.flags=-g \"{compiler.warning_flags}-gcc\" -Os -nostdlib -Wl,--no-check-sections -u app_entry {build.float} -Wl,-static \"-L{compiler.sdk.path}/lib\" \"-L{compiler.sdk.path}/lib/{build.sdk}\" \"-L{build.path}\" \"-L{compiler.libc.path}/lib\" \"-Tlocal.eagle.flash.ld\" -Wl,--gc-sections -Wl,-wrap,system_restart_local -Wl,-wrap,spi_flash_read\r\n+compiler.c.elf.flags=-g \"{compiler.warning_flags}\" -Os -nostdlib -Wl,--no-check-sections -u app_entry {build.float} -Wl,-static \"-L{compiler.sdk.path}/lib\" \"-L{compiler.sdk.path}/lib/{build.sdk}\" \"-L{build.path}\" \"-L{compiler.libc.path}/lib\" \"-Tlocal.eagle.flash.ld\" -Wl,--gc-sections -Wl,-wrap,system_restart_local -Wl,-wrap,spi_flash_read\r\n\r\n compiler.c.elf.cmd=xtensa-lx106-elf-gcc\r\n compiler.c.elf.libs=-lhal -lphy -lpp -lnet80211 {build.lwip_lib} -lwpa -lcrypto -lmain -lwps -lbearssl -lespnow -lsmartconfig -lairkiss -lwpa2 {build.stdcpp_lib} -lm -lc -lgcc\r\n\r\n compiler.cpp.cmd=xtensa-lx106-elf-g++\r\n-compiler.cpp.flags=-c \"{compiler.warning_flags}-g++\" {build.stacksmash_flags} -Os -g -free -fipa-pta -Werror=return-type -mlongcalls -mtext-section-literals -fno-rtti -falign-functions=4 {build.stdcpp_level} -MMD -ffunction-sections -fdata-sections {build.exception_flags} {build.sslflags} {build.mmuflags} {build.non32xferflags}\r\n+compiler.cpp.flags=-c \"{compiler.warning_flags}\" {build.stacksmash_flags} -Os -g -free -fipa-pta -Werror=return-type -mlongcalls -mtext-section-literals -fno-rtti -falign-functions=4 {build.stdcpp_level} -MMD -ffunction-sections -fdata-sections {build.exception_flags} {build.sslflags} {build.mmuflags} {build.non32xferflags}\r\n\r\n compiler.as.cmd=xtensa-lx106-elf-as\r\n```",
                "created_at": "2023-01-20T13:36:24Z",
                "updated_at": "2023-01-20T13:38:36Z",
                "author_association": "COLLABORATOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1398404239/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1398549580,
                "user": "milanbx",
                "body": "no, no, error again:\r\n`xtensa-lx106-elf-g++: error: D:\\Portable\\Arduino\\portable\\packages\\esp8266\\hardware\\esp8266\\3.1.1/tools/warnings/none: No such file or directory`\r\nBut this comes form my attempt to compile. The original error does not cause the compiler and builder to fail!",
                "created_at": "2023-01-20T15:19:01Z",
                "updated_at": "2023-01-20T15:21:03Z",
                "author_association": "NONE",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1398549580/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1398727633,
                "user": "mcspr",
                "body": "Sorry, I thought that would've been a no-op for gcc. But .json is generated correctly?\r\n\r\nJust removing this warning arg should work then.\r\n```diff\r\ndiff --git a/platform.txt b/platform.txt\r\nindex 120cfb00..79b26fb2 100644\r\n--- a/platform.txt\r\n+++ b/platform.txt\r\n@@ -76,18 +76,18 @@ compiler.cpreprocessor.flags=-D__ets__ -DICACHE_FLASH -U__STRICT_ANSI__ -D_GNU_S\r\n compiler.libraries.ldflags=\r\n\r\n compiler.c.cmd=xtensa-lx106-elf-gcc\r\n-compiler.c.flags=-c \"{compiler.warning_flags}-gcc\" -std=gnu17 {build.stacksmash_flags} -Os -g -free -fipa-pta -Werror=return-type -Wpointer-arith -Wno-implicit-function-declaration -Wl,-EL -fno-inline-functions -nostdlib -mlongcalls -mtext-section-literals -falign-functions=4 -MMD -ffunction-sections -fdata-sections {build.exception_flags} {build.sslflags} {build.mmuflags} {build.non32xferflags}\r\n+compiler.c.flags=-c -std=gnu17 {build.stacksmash_flags} -Os -g -free -fipa-pta -Werror=return-type -Wpointer-arith -Wno-implicit-function-declaration -Wl,-EL -fno-inline-functions -nostdlib -mlongcalls -mtext-section-literals -falign-functions=4 -MMD -ffunction-sections -fdata-sections {build.exception_flags} {build.sslflags} {build.mmuflags} {build.non32xferflags}\r\n\r\n compiler.S.cmd=xtensa-lx106-elf-gcc\r\n compiler.S.flags=-c -g -x assembler-with-cpp -MMD -mlongcalls \"-I{runtime.tools.xtensa-lx106-elf-gcc.path}/include/\"\r\n\r\n-compiler.c.elf.flags=-g \"{compiler.warning_flags}-gcc\" -Os -nostdlib -Wl,--no-check-sections -u app_entry {build.float} -Wl,-static \"-L{compiler.sdk.path}/lib\" \"-L{compiler.sdk.path}/lib/{build.sdk}\" \"-L{build.path}\" \"-L{compiler.libc.path}/lib\" \"-Tlocal.eagle.flash.ld\" -Wl,--gc-sections -Wl,-wrap,system_restart_local -Wl,-wrap,spi_flash_read\r\n+compiler.c.elf.flags=-g -Os -nostdlib -Wl,--no-check-sections -u app_entry {build.float} -Wl,-static \"-L{compiler.sdk.path}/lib\" \"-L{compiler.sdk.path}/lib/{build.sdk}\" \"-L{build.path}\" \"-L{compiler.libc.path}/lib\" \"-Tlocal.eagle.flash.ld\" -Wl,--gc-sections -Wl,-wrap,system_restart_local -Wl,-wrap,spi_flash_read\r\n\r\n compiler.c.elf.cmd=xtensa-lx106-elf-gcc\r\n compiler.c.elf.libs=-lhal -lphy -lpp -lnet80211 {build.lwip_lib} -lwpa -lcrypto -lmain -lwps -lbearssl -lespnow -lsmartconfig -lairkiss -lwpa2 {build.stdcpp_lib} -lm -lc -lgcc\r\n\r\n compiler.cpp.cmd=xtensa-lx106-elf-g++\r\n-compiler.cpp.flags=-c \"{compiler.warning_flags}-g++\" {build.stacksmash_flags} -Os -g -free -fipa-pta -Werror=return-type -mlongcalls -mtext-section-literals -fno-rtti -falign-functions=4 {build.stdcpp_level} -MMD -ffunction-sections -fdata-sections {build.exception_flags} {build.sslflags} {build.mmuflags} {build.non32xferflags}\r\n+compiler.cpp.flags=-c {build.stacksmash_flags} -Os -g -free -fipa-pta -Werror=return-type -mlongcalls -mtext-section-literals -fno-rtti -falign-functions=4 {build.stdcpp_level} -MMD -ffunction-sections -fdata-sections {build.exception_flags} {build.sslflags} {build.mmuflags} {build.non32xferflags}\r\n\r\n compiler.as.cmd=xtensa-lx106-elf-as\r\n\r\n```\r\n\r\nWe'll need figure out a better name for warning files then. ",
                "created_at": "2023-01-20T17:38:24Z",
                "updated_at": "2023-01-20T17:38:24Z",
                "author_association": "COLLABORATOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1398727633/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1399303640,
                "user": "milanbx",
                "body": "YES! This helped! All working fine, back on track, thanks a lot!\r\nAlthough I don't understand properly, what caused the issue and how you've fixed it, I'm glad it works.",
                "created_at": "2023-01-21T18:13:49Z",
                "updated_at": "2023-01-21T18:13:49Z",
                "author_association": "NONE",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1399303640/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            }
        ]
    },
    {
        "id": 1533709229,
        "number": 8808,
        "title": "Update from 3.1.0 to 3.1.1 initially behaved as failed then after some minutes started normaly",
        "state": "closed",
        "locked": false,
        "assignees": [],
        "labels": [],
        "milestone": null,
        "created_at": "2023-01-15T08:02:14Z",
        "updated_at": "2023-01-25T09:40:41Z",
        "closed_at": "2023-01-25T09:40:41Z",
        "author_association": "NONE",
        "body": "### Basic Infos\r\n\r\n- [ ] This issue complies with the [issue POLICY doc](https://github.com/esp8266/Arduino/blob/master/POLICY.md).\r\n- [ X] I have read the documentation at [readthedocs](https://arduino-esp8266.readthedocs.io/en/latest) and the issue is not addressed there.\r\n- [ ] I have tested that the issue is present in current master branch (aka latest git).\r\n- [ ] I have searched the issue tracker for a similar issue.\r\n- [ ] If there is a stack dump, I have decoded it.\r\n- [ ] I have filled out all fields below.\r\n\r\n#### Platform\r\n\r\n- Hardware:\t\t\t\tESP8266\r\n- Core Version:\t\t\tlatest RELEASE 3.1.1\r\n- Development Env:\t\tArduino IDE 1.8.19\r\n- Operating System:\t\tWindows 10\r\n\r\n### Settings in IDE\r\n\r\n- Module:  \t\t\tGeneric ESP8266 Module\r\n- Flash Mode:\t\t\tQIO\r\n- Flash Size: \t\t4MB\r\n- lwip Variant:   v2 Lower Memory\r\n- Reset Method:\t\tnodemcu\r\n- Flash Frequency:\t[40Mhz]\r\n- CPU Frequency:\t\t80Mhz\r\n- Upload Using:\t\tOTA\r\n- Upload Speed:   [115200|other] (serial upload only)\r\n\r\nJust to mention that I have chosen NONOS SDK version 3.0.5 after the update from 3.0.2 => 3.1.0 so the update from 3.1.0 => 3.1.1 had this SDK activated, if this makes sense to you\r\n\r\n### Problem Description\r\nDear Sirs,\r\nFirst of all I wish you all Happy Healthy and Prosperous for the 2023. Also many thanks for keeping ESP8266 updated !\r\nI am observed a very strange problem. In one of my ESP8266 I tried to OTA the exactly same sketch that is running with 3.1.0 just compiled with 3.1.1 .  After the OTA finished ESP8266 stopped to function (I can \"see\" it only via my local Blynk server) and even lost from Port inside Arduino IDE (Tools => Port:). No having other way to interact, I can reach it only wirelessly, I switched his power off, stay at off several minutes and power on again. Nothing seems to worked and I left in power on  state. Suddenly after let's say 6 minutes, started to functional normally both in Blynk Server (and Blynk App) and appeared as it should be in Arduino IDE Port. Do you know why can you guess what was wrong? Please take into consideration that this ESP8266 with exactly same sketch, when updated from 3.0.2 => 3.1.0  I didn't observed any problem nor \"delay\" to get back in functional state.\r\n\r\nThanks and Best Regards,\r\nMike Kranidis\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/esp8266/Arduino/issues/8808/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "is_pull_request": false,
        "timeline_events": [
            {
                "event": "commented",
                "actor": "mcspr",
                "created_at": "2023-01-25T09:40:41Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "closed",
                "actor": "mcspr",
                "created_at": "2023-01-25T09:40:41Z",
                "assignee": null,
                "label": null
            }
        ],
        "comments_data": [
            {
                "id": 1403335697,
                "user": "mcspr",
                "body": "Assuming things worked ok in the end? Closing.\r\n\r\nSDK upgrade should (preferably) go along with either `ESP.eraseConfig()` + `__builtin_trap()` immediately after or a manual flash erase being done with esptool.py\r\nAlso see #8828",
                "created_at": "2023-01-25T09:40:41Z",
                "updated_at": "2023-01-25T09:40:41Z",
                "author_association": "COLLABORATOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1403335697/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            }
        ]
    },
    {
        "id": 1548140107,
        "number": 8817,
        "title": "IPAddress::operator= needs 32-bit aligned pointer",
        "state": "closed",
        "locked": false,
        "assignees": [],
        "labels": [],
        "milestone": null,
        "created_at": "2023-01-18T21:35:05Z",
        "updated_at": "2023-01-20T09:26:14Z",
        "closed_at": "2023-01-20T09:26:14Z",
        "author_association": "CONTRIBUTOR",
        "body": "### Basic Infos\r\n\r\n- [x] This issue complies with the [issue POLICY doc](https://github.com/esp8266/Arduino/blob/master/POLICY.md).\r\n- [x] I have read the documentation at [readthedocs](https://arduino-esp8266.readthedocs.io/en/latest) and the issue is not addressed there.\r\n- [x] I have tested that the issue is present in current master branch (aka latest git).\r\n- [x] I have searched the issue tracker for a similar issue.\r\n- [ ] If there is a stack dump, I have decoded it.\r\n- [ ] I have filled out all fields below.\r\n\r\n#### Platform\r\n\r\n- Hardware:\t\t\t\t\t[ESP-12|ESP-01|ESP-07|ESP8285 device|other]\r\n- Core Version:\t\t\t[Current master / 2.7.4]\r\n- Development Env:\t\t[Platformio]\r\n- Operating System:\t\t[Windows|Ubuntu]\r\n\r\n### Settings in IDE\r\n\r\n- Module:  \t\t\t[Generic ESP8266 Module]\r\n- Flash Mode:\t\t\t[qio|dio|other]\r\n- Flash Size: \t\t[4MB/1MB]\r\n- lwip Variant:   [v1.4|v2 Lower Memory|Higher Bandwidth]\r\n- Reset Method:\t\t[ck|nodemcu]\r\n- Flash Frequency:\t[40Mhz]\r\n- CPU Frequency:\t\t[80Mhz|160MHz]\r\n- Upload Using:\t\t[OTA|SERIAL]\r\n- Upload Speed:   [115200|other] (serial upload only)\r\n\r\n\r\n### Problem Description\r\n\r\n```\r\nLoadStoreAlignmentCause: Load or store to an unaligned address\r\n  epc1=0x402a1358 in IPAddress::operator=(unsigned char const*) at ??:?\r\nen deze stacktrace:\r\n0x4029280d in String::operator=(char const*) at ??:?\r\n0x401012bb in umm_free_core at umm_malloc.cpp:?\r\n0x401015a2 in malloc at ??:?\r\n0x402d1866 in wifi_get_opmode at ??:?\r\n0x402a2568 in spiffs_cache_page_get_by_fd at ??:?\r\n0x402a2568 in spiffs_cache_page_get_by_fd at ??:?\r\n0x402a2568 in spiffs_cache_page_get_by_fd at ??:?\r\n0x402a2568 in spiffs_cache_page_get_by_fd at ??:?\r\n0x4024821f in setConnectionSpeed() at ??:?\r\n0x40248dc2 in prepareWiFi() at ??:?\r\n0x40241468 in WiFiEventData_t::markWiFiBegin() at ??:?\r\n0x40248f29 in AttemptWiFiConnect() at ??:?\r\n0x40205e24 in ESP8266WiFiSTAClass::status() at ??:?\r\n0x40248084 in wifiAPmodeActivelyUsed() at ??:?\r\n0x4024909c in WiFiConnectRelaxed() at ??:?\r\n0x40245ce9 in NetworkConnectRelaxed() at ??:?\r\n0x4024bf23 in ESPEasy_setup() at ??:?\r\n0x40215084 in setup at ??:?\r\n0x40293ddb in loop_wrapper() at core_esp8266_main.cpp:?\r\n0x40100469 in cont_wrapper at ??:?\r\n```\r\n\r\nSee the assignment operator and other functions where the `const uint8_t*` is cast to an `const uint32_t*`\r\n\r\nhttps://github.com/esp8266/Arduino/blob/f06710eb6e1559b8a0035d02c0c0fc0c860b821f/cores/esp8266/IPAddress.cpp#L118-L122\r\n\r\nhttps://github.com/esp8266/Arduino/blob/f06710eb6e1559b8a0035d02c0c0fc0c860b821f/cores/esp8266/IPAddress.cpp#L130-L132\r\n\r\nThe call is simply like this:\r\n\r\n```c++\r\n  const IPAddress ip     = Settings.IP;\r\n  const IPAddress gw     = Settings.Gateway;\r\n  const IPAddress subnet = Settings.Subnet;\r\n  const IPAddress dns    = Settings.DNS;\r\n```\r\n\r\nWhere all these are part of a larger struct, which begins like this:\r\n\r\n```c++\r\n  unsigned long PID = 0;\r\n  int           Version = 0;\r\n  int16_t       Build = 0;\r\n  uint8_t       IP[4] = {0};\r\n  uint8_t       Gateway[4] = {0};\r\n  uint8_t       Subnet[4] = {0};\r\n  uint8_t       DNS[4] = {0};\r\n```\r\n\r\nAs can be seen, these are indeed not 32-bit aligned.\r\n\r\nI think the build toolchain may recently have been updated, as this struct and the code that's now failing has not been changed for at least 4 years.\r\n\r\nThe same code in `IPAddress` has not been changed for a while as the current master branch has the same code for these functions as the 2.7.4 we're using.\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/esp8266/Arduino/issues/8817/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "is_pull_request": false,
        "timeline_events": [
            {
                "event": "commented",
                "actor": "mcspr",
                "created_at": "2023-01-18T21:40:13Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "cross-referenced",
                "actor": "tonhuisman",
                "created_at": "2023-01-18T22:12:10Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "TD-er",
                "created_at": "2023-01-18T22:29:28Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "d-a-v",
                "created_at": "2023-01-18T22:33:58Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "TD-er",
                "created_at": "2023-01-18T22:36:10Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "d-a-v",
                "created_at": "2023-01-18T22:40:47Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "mcspr",
                "created_at": "2023-01-18T22:41:05Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "TD-er",
                "created_at": "2023-01-18T22:49:35Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "cross-referenced",
                "actor": "mcspr",
                "created_at": "2023-01-18T22:55:57Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "closed",
                "actor": "mcspr",
                "created_at": "2023-01-20T09:26:15Z",
                "assignee": null,
                "label": null
            }
        ],
        "comments_data": [
            {
                "id": 1396123533,
                "user": "mcspr",
                "body": "s/Needs aligned/We need memcpy into u32 and then copy instead of reinterpret cast/?\r\nIf you compare with 2.7.4, things definitely have changed b/c of GCC 10.3",
                "created_at": "2023-01-18T21:40:13Z",
                "updated_at": "2023-01-18T21:40:13Z",
                "author_association": "COLLABORATOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1396123533/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1396178168,
                "user": "TD-er",
                "body": "There is already a proper constructor which does copy the bytes one-by-one, so why should there be a reinterpret_cast or memcpy?\r\n\r\nBy the way, I did a few more tests to let the compiler find all occurences of this `operator=` and found a few more.\r\nI did make the assignment operator private.\r\n\r\nBut strangely enough the exact lines as above with `const IPAddress ip = Settings.IP;` etc. were not found.\r\nThis one was: `WiFiEventData.dns0_cache = dns;` which was one line below in my code. (`dns0_cache ` is of type `IPAddress`)\r\n\r\nSo maybe the compiler already may strip this code in the optimizer step?\r\n\r\nThis is the complete function:\r\nhttps://github.com/letscontrolit/ESPEasy/blob/0c0175ebed4938aecc21d60ea595af3f88fe9544/src/src/ESPEasyCore/ESPEasyWifi.cpp#L1448-L1468\r\n\r\n\r\n",
                "created_at": "2023-01-18T22:29:28Z",
                "updated_at": "2023-01-18T22:29:28Z",
                "author_association": "CONTRIBUTOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1396178168/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1396181964,
                "user": "d-a-v",
                "body": "> `v4() = *reinterpret_cast<const uint32_t*>(address); `\r\n\r\nCan you try \r\n\r\n```cpp\r\nmemcpy_P(&v4(), address, 4);\r\n```",
                "created_at": "2023-01-18T22:33:58Z",
                "updated_at": "2023-01-18T22:35:15Z",
                "author_association": "COLLABORATOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1396181964/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1396183683,
                "user": "TD-er",
                "body": "OK.. also tried with `IPAddress& operator=(uint32_t address);` set to private to see what this may show up and then noticed some very strange thing in `int ESP8266WiFiGenericClass::hostByName(const char* aHostname, IPAddress& aResult, uint32_t timeout_ms)`\r\n\r\n`aResult = static_cast<uint32_t>(INADDR_NONE);` where `INADDR_NONE` is already of type `IPAddress`, so casting to uint32_t is not needed.\r\nAnd what makes it even more strange is that `INADDR_NONE` is 255.255.255.255 on ESP8266, but 0.0.0.0 on ESP32.",
                "created_at": "2023-01-18T22:36:10Z",
                "updated_at": "2023-01-18T22:36:10Z",
                "author_association": "CONTRIBUTOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1396183683/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1396191599,
                "user": "d-a-v",
                "body": "> And what makes it even more strange is that INADDR_NONE is 255.255.255.255 on ESP8266, but 0.0.0.0 on ESP32.\r\n\r\n`isSet()` is preferred with ESP8266 (which tests both)",
                "created_at": "2023-01-18T22:40:47Z",
                "updated_at": "2023-01-18T22:40:47Z",
                "author_association": "COLLABORATOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1396191599/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1396191825,
                "user": "mcspr",
                "body": "Let's just figure out assignments & ctors first. I'll prepare a PR.",
                "created_at": "2023-01-18T22:41:05Z",
                "updated_at": "2023-01-18T22:41:05Z",
                "author_association": "COLLABORATOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1396191825/reactions",
                    "total_count": 1,
                    "+1": 1,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1396198073,
                "user": "TD-er",
                "body": "> > `v4() = *reinterpret_cast<const uint32_t*>(address); `\r\n> \r\n> Can you try\r\n> \r\n> ```c++\r\n> memcpy_P(&v4(), address, 4);\r\n> ```\r\n\r\nThis is a fix.\r\nJust tested it and with this code it works just fine. reverted it and crashes very reproducible.\r\n\r\nJust strange that the lines with the single used `const IPAddress ip = Settings.IP;` didn't fail to compile with the assignment operator set to private.",
                "created_at": "2023-01-18T22:49:35Z",
                "updated_at": "2023-01-18T22:49:35Z",
                "author_association": "CONTRIBUTOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1396198073/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            }
        ]
    },
    {
        "id": 1537639124,
        "number": 8815,
        "title": "Flash layout address mapping ",
        "state": "closed",
        "locked": false,
        "assignees": [],
        "labels": [],
        "milestone": null,
        "created_at": "2023-01-18T09:05:26Z",
        "updated_at": "2023-01-18T10:04:06Z",
        "closed_at": "2023-01-18T10:04:06Z",
        "author_association": "CONTRIBUTOR",
        "body": "### Basic Infos\r\n\r\n- [x] This issue complies with the [issue POLICY doc](https://github.com/esp8266/Arduino/blob/master/POLICY.md).\r\n- [x] I have read the documentation at [readthedocs](https://arduino-esp8266.readthedocs.io/en/latest) and the issue is not addressed there.\r\n- [ ] I have tested that the issue is present in current master branch (aka latest git).\r\n- [x] I have searched the issue tracker for a similar issue.\r\n- [ ] If there is a stack dump, I have decoded it.\r\n- [ ] I have filled out all fields below.\r\n\r\n#### Platform\r\n\r\n- Hardware:\t\t\t\t\tESP-12\r\n- Core Version:\t\t\t3.1.1\r\n- Development Env:\t\tArduino IDE\r\n- Operating System:\t\tUbuntu\r\n\r\n### Settings in IDE\r\n\r\n- Module:  \t\t\tGeneric ESP8266 Module\r\n- Flash Mode:\t\t\tdio\r\n- Flash Size: \t\t4MB/1MB\r\n- lwip Variant:   Higher Bandwidth\r\n- Reset Method:\t\tnodemcu\r\n- Flash Frequency:\t40Mhz\r\n- CPU Frequency:\t\t80Mhz\r\n- Upload Using:\t\tSERIAL\r\n- Upload Speed:   115200 (serial upload only)\r\n\r\n\r\n### Problem Description\r\n\r\nReferring to the [documentation ](https://arduino-esp8266.readthedocs.io/en/latest/filesystem.html)of the filesystem, the following layout represents the ESP8266 flash storage, but due to some situations we need to read the content of the user application (Sketch) and EEPROM with help of esptool [read_flash ](https://docs.espressif.com/projects/esptool/en/latest/esp32/esptool/basic-commands.html#read-flash-contents-read-flash)command, and as result, we need to know the address (offset) and size for Sketch and EEPROM sections to read. So is there any documentation available to proceed?\r\n\r\n\r\n    |--------------|-------|---------------|--|--|--|--|--|\r\n    ^              ^       ^               ^     ^\r\n    Sketch    OTA update   File system   EEPROM  WiFi config (SDK)",
        "reactions": {
            "url": "https://api.github.com/repos/esp8266/Arduino/issues/8815/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "is_pull_request": false,
        "timeline_events": [
            {
                "event": "closed",
                "actor": "IMAN4K",
                "created_at": "2023-01-18T10:04:06Z",
                "assignee": null,
                "label": null
            }
        ],
        "comments_data": []
    },
    {
        "id": 1554286726,
        "number": 8826,
        "title": "v3.1.1 LittleFS not flashing or reading",
        "state": "open",
        "locked": false,
        "assignees": [],
        "labels": [
            "component: OTA"
        ],
        "milestone": "4.0.0",
        "created_at": "2023-01-24T04:18:03Z",
        "updated_at": "2023-03-11T15:23:00Z",
        "closed_at": null,
        "author_association": "NONE",
        "body": "### Basic Infos\r\n\r\n- [x] This issue complies with the [issue POLICY doc](https://github.com/esp8266/Arduino/blob/master/POLICY.md).\r\n- [x] I have read the documentation at [readthedocs](https://arduino-esp8266.readthedocs.io/en/latest) and the issue is not addressed there.\r\n- [x] I have tested that the issue is present in current master branch (aka latest git).\r\n- [x] I have searched the issue tracker for a similar issue.\r\n- [x] If there is a stack dump, I have decoded it.\r\n- [x] I have filled out all fields below.\r\n\r\n#### Platform\r\n\r\n- Hardware:\t\t\t\t[ESP-12]\r\n- Core Version:\t\t\t[3.1.0/3.1.1]\r\n- Development Env:\t\t[Arduino IDE]\r\n- Operating System:\t\t[Windows|MacOS]\r\n\r\n### Settings in IDE\r\n\r\n- Module:  \t\t\t[Generic ESP8266 Module|Nodemcu]\r\n- Flash Mode:\t\t\t[dout]\r\n- Flash Size: \t\t\t[4MB/2MB]\r\n- lwip Variant:\t\t\t[v2 Lower Memory]\r\n- Reset Method:\t\t[nodemcu]\r\n- Flash Frequency:\t\t[40Mhz]\r\n- CPU Frequency:\t\t[80Mhz]\r\n- Upload Using:\t\t[OTA|SERIAL]\r\n- Upload Speed:\t\t[115200]\r\n\r\n### Problem Description\r\n\r\nLittleFS not flashing. Tried different methods ESP8266HTTPUpdateServer(Web-browser /update), OTA (WiFi with #include <ArduinoOTA.h>), esptool.py (Serial 115200). Both signed and unsigned binary. The upload worked in v3.0.2! \r\n\r\nBroken in v3.1.0 and v3.1.1.\r\n\r\nSome more troubleshooting, if upload FS using v3.0.2 (works for reading as well) then flash the sketch with v3.1.1 using (Erase Flash: Only Sketch) FS not readable.\r\n\r\nI suspect the flashing might quietly work it is just no readable. Did the starting address change? Or did LittleFS block-size change?\r\n\r\n### Debug Messages\r\n\r\nv3.0.2 (Working)\r\n```\r\nload 0x4010f000, len 3460, room 16 \r\ntail 4\r\nchksum 0xcc\r\nload 0x3fff20b8, len 40, room 4 \r\ntail 4\r\nchksum 0xc9\r\ncsum 0xc9\r\nv0009afa0\r\n~ld\r\n```\r\n\r\nv3.1.0/3.1.1 (Not Working)\r\n```\r\nload 0x4010f000, len 3424, room 16 \r\ntail 0\r\nchksum 0x2e\r\nload 0x3fff20b8, len 40, room 8 \r\ntail 0\r\nchksum 0x2b\r\ncsum 0x2b\r\nv0009aa80\r\n~ld\r\n```\r\n\r\nLittleFS build\r\n```\r\nmklittlefs -c ./data/ -b 8192 -p 256 -d 5 -s 640000 ./build/flash-littlefs.bin\r\n```\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/esp8266/Arduino/issues/8826/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "is_pull_request": false,
        "timeline_events": [
            {
                "event": "commented",
                "actor": "mcspr",
                "created_at": "2023-01-24T11:40:48Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "dimecho",
                "created_at": "2023-01-25T03:48:31Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "mcspr",
                "created_at": "2023-01-25T09:21:13Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "earlephilhower",
                "created_at": "2023-01-25T18:55:59Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "dimecho",
                "created_at": "2023-01-25T19:29:37Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "dimecho",
                "created_at": "2023-01-25T19:38:43Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "closed",
                "actor": "earlephilhower",
                "created_at": "2023-01-25T19:51:29Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "dimecho",
                "created_at": "2023-01-25T20:04:11Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "reopened",
                "actor": "earlephilhower",
                "created_at": "2023-01-25T20:09:22Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "dimecho",
                "created_at": "2023-01-26T01:06:03Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "milestoned",
                "actor": "d-a-v",
                "created_at": "2023-01-26T08:53:22Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "labeled",
                "actor": "d-a-v",
                "created_at": "2023-01-26T08:54:22Z",
                "assignee": null,
                "label": "component: OTA"
            },
            {
                "event": "commented",
                "actor": "d-a-v",
                "created_at": "2023-01-26T15:10:47Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "dimecho",
                "created_at": "2023-01-26T16:14:06Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "demilestoned",
                "actor": "mcspr",
                "created_at": "2023-03-11T15:23:00Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "milestoned",
                "actor": "mcspr",
                "created_at": "2023-03-11T15:23:00Z",
                "assignee": null,
                "label": null
            }
        ],
        "comments_data": [
            {
                "id": 1401800029,
                "user": "mcspr",
                "body": "> I suspect the flashing might quietly work it is just no readable. Did the starting address change? Or did LittleFS block-size change?\r\n\r\nBy 'Debug messages' we mean you have to use 'Debug level' and 'Debug port' menu entries, what we see above is just the usual bootloader stuff. That would likely answer the first question.\r\nPrinting filesystem info from the working example would answer the second one, if you suspect FS setup issues.",
                "created_at": "2023-01-24T11:40:48Z",
                "updated_at": "2023-01-24T11:40:48Z",
                "author_association": "COLLABORATOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1401800029/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1403058571,
                "user": "dimecho",
                "body": "Did more investigation using Hex dump \"fs region\"\r\n```\r\nesptool.py --port $serial --baud 115200 read_flash 0x200000 0x300000 dump.bin\r\n```\r\nI think the issue is with \"write\" after all. Comparing good to bad HEX, littlefs headers are missing? at 0x000000 and 0x002000 the rest of the content after 0x004000 looks identical (good).\r\n\r\n![littlefs-bad-headers](https://user-images.githubusercontent.com/4879613/214475452-a0997fc9-808c-4e48-b6e0-5529f7004587.png)\r\n\r\n\r\n",
                "created_at": "2023-01-25T03:48:31Z",
                "updated_at": "2023-01-25T03:48:31Z",
                "author_association": "NONE",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1403058571/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1403310353,
                "user": "mcspr",
                "body": "Where do we get these offsets from? Is it our .ld or something custom?\r\n\r\nAssuming that you have looked at updater logs and nothing seems suspicious, you can also double-check raw addresses from the resulting .elf *(...and so there is no need to flash & boot the firmware)*\r\n\r\nLittleFS, by default, uses these four for its constructor. IDE config also has those, see boards.txt for lines starting with e.g. menu.eesz.4M1M=...; these are used when you are flashing or erasing\r\n\r\nTrying to build with arduino-cli and 4m1m split\r\n```console\r\n> arduino-cli compile -b esp8266com:esp8266:d1_mini:eesz=4M1M --show-properties | grep -Pe '^build.(flash_ld|path|core)'\r\nbuild.core=esp8266\r\nbuild.core.path=/home/runner/Arduino/hardware/esp8266com/esp8266/cores/esp8266\r\nbuild.flash_ld=eagle.flash.4m1m.ld\r\nbuild.path=/tmp/arduino-sketch-6E47FB208C9EABB9A285B538F5914278\r\n```\r\n```console\r\n> nm /tmp/arduino-sketch-6E47FB208C9EABB9A285B538F5914278/arduino8826.ino.elf | grep _FS_\r\n00002000 A _FS_block\r\n405fa000 A _FS_end\r\n00000100 A _FS_page\r\n40500000 A _FS_start\r\n```\r\n```console\r\n> grep -e '^d1_mini.menu.eesz.4M1M' /home/runner/Arduino/hardware/esp8266com/esp8266/boards.txt\r\nd1_mini.menu.eesz.4M1M=4MB (FS:1MB OTA:~1019KB)\r\nd1_mini.menu.eesz.4M1M.build.flash_size=4M\r\nd1_mini.menu.eesz.4M1M.build.flash_ld=eagle.flash.4m1m.ld\r\nd1_mini.menu.eesz.4M1M.build.spiffs_pagesize=256\r\nd1_mini.menu.eesz.4M1M.build.rfcal_addr=0x3FC000\r\nd1_mini.menu.eesz.4M1M.build.spiffs_start=0x300000\r\nd1_mini.menu.eesz.4M1M.build.spiffs_end=0x3FA000\r\nd1_mini.menu.eesz.4M1M.build.spiffs_blocksize=8192\r\n```\r\n```console\r\n> cat /home/runner/Arduino/hardware/esp8266com/esp8266/cores/esp8266/tools/sdk/ld/eagle.flash.4m1m.ld\r\n/* Flash Split for 4M chips */\r\n/* sketch @0x40200000 (~1019KB) (1044464B) */\r\n/* empty  @0x402FEFF0 (~2052KB) (2101264B) */\r\n/* spiffs @0x40500000 (~1000KB) (1024000B) */\r\n/* eeprom @0x405FB000 (4KB) */\r\n/* rfcal  @0x405FC000 (4KB) */\r\n/* wifi   @0x405FD000 (12KB) */\r\n\r\nMEMORY\r\n{\r\n  dport0_0_seg :                        org = 0x3FF00000, len = 0x10\r\n  dram0_0_seg :                         org = 0x3FFE8000, len = 0x14000\r\n  irom0_0_seg :                         org = 0x40201010, len = 0xfeff0\r\n}\r\n\r\nPROVIDE ( _FS_start = 0x40500000 );\r\nPROVIDE ( _FS_end = 0x405FA000 );\r\nPROVIDE ( _FS_page = 0x100 );\r\nPROVIDE ( _FS_block = 0x2000 );\r\nPROVIDE ( _EEPROM_start = 0x405fb000 );\r\n/* The following symbols are DEPRECATED and will be REMOVED in a future release */\r\nPROVIDE ( _SPIFFS_start = 0x40500000 );\r\nPROVIDE ( _SPIFFS_end = 0x405FA000 );\r\nPROVIDE ( _SPIFFS_page = 0x100 );\r\nPROVIDE ( _SPIFFS_block = 0x2000 );\r\n\r\nINCLUDE \"local.eagle.app.v6.common.ld\"\r\n```",
                "created_at": "2023-01-25T09:21:13Z",
                "updated_at": "2023-01-25T09:44:25Z",
                "author_association": "COLLABORATOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1403310353/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1404087144,
                "user": "earlephilhower",
                "body": "I've just run sanity tests onboard using the test script https://github.com/earlephilhower/arduino-pico/tree/master/libraries/LittleFS/examples/FSUpload (it's for the RPi Pico but runs fine on the ESP8266)  which involves uploading, reading, and updating a LittleFS image onboard.\r\n\r\nOn my D1 Mini it runs fine and has no issue with accessing the uploaded filesystem image.   The image is built using the `mklittlefs` from `x86_64-linux-gnu.mklittlefs-30b7fc1.220621.tar.gz` and the LittleFS library 2.5.1 that is in 3.1.x.",
                "created_at": "2023-01-25T18:55:59Z",
                "updated_at": "2023-01-25T18:55:59Z",
                "author_association": "COLLABORATOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1404087144/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1404125098,
                "user": "dimecho",
                "body": "For some reason v3.1.1 is very strict about block_count = flash_size/block_size math.\r\nNot sure how it worked before, but it look like it did not care about the ratio in v3.0.2\r\n\r\nGoing to\r\n```\r\n~/Library/Arduino15/packages/esp8266/hardware/esp8266/3.1.1/libraries/LittleFS/src/\r\n```\r\n\r\nEdit two files lfs_util.c, lfs.c\r\n```\r\n#define LFS_NAME_MAX 32\r\n//#define LFS_NO_DEBUG\r\n//#define LFS_NO_WARN\r\n//#define LFS_NO_ERROR\r\n```\r\n\r\nThen I can see the debug\r\n```\r\nlfs.c:4188:error: Invalid block count (126 != 253)\r\n```\r\n\r\n...OK so my flash is 4MB with 2MB OTA but I build image for 1MB (640KB actually) because ESP8266HTTPUpdateServer needs half space to store the upload.\r\n\r\nBad idea in v3.1.1\r\n```\r\nmklittlefs -c ./data/ -b 8192 -p 256 -d 5 -s 640000 flash-littlefs.bin\r\n```\r\n\r\nIt would be waste of space to build `mklittlefs` for 2MB as most of it will be FFFFFFF and it will not fit using ESP8266HTTPUpdateServer upload.\r\n\r\n...OK so it wants 253 blocks (8192 * 253) = 2072576\r\n```\r\nmklittlefs -c ./data/ -b 8192 -p 256 -d 5 -s 2072576 flash-littlefs.bin\r\n```\r\n...good but it is not half the flash, will not fit for ESP8266HTTPUpdateServer _upload_max:  0x000FEFF0 (1044464)\r\n\r\nLets try the max upload size\r\n```\r\nmklittlefs -c ./data/ -b 8192 -p 256 -d 5 -s 1044464 flash-littlefs.bin\r\n```\r\n... back to square one, nothing reads on boot. ```lfs.c:4188:error: Invalid block count (127 != 253)```\r\n\r\nSo lets divide block_count by two in LittleFS.h\r\n```\r\nline71:   _lfs_cfg.block_count = _size / _blockSize / 2;\r\n```\r\n\r\nUpload works! I can read half the files then it crashes (yes I just made half my flash usable with proper block-size math for flash-littlefs.bin)\r\n\r\nSo I am thinking to get ESP8266HTTPUpdateServer working with 2MB flash and 1MB upload flash-littlefs.bin I need to build it for 2MB but gzip for upload ```build.extra_flags=-DATOMIC_FS_UPDATE```\r\n\r\n\r\n",
                "created_at": "2023-01-25T19:29:37Z",
                "updated_at": "2023-01-26T01:43:06Z",
                "author_association": "NONE",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1404125098/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1404134781,
                "user": "dimecho",
                "body": "Oh wait!!! This actually works! for full flash size 2072576\r\n\r\n```\r\nmklittlefs -c ./data/ -b 8192 -p 256 -d 5 -s 2072576 flash-littlefs.bin\r\n```\r\n\r\nI remember it used to be that ESP8266HTTPUpdateServer needed half the size, but I guess it is dynamic now.\r\n\r\nIssue resolved :)",
                "created_at": "2023-01-25T19:38:43Z",
                "updated_at": "2023-01-25T19:38:43Z",
                "author_association": "NONE",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1404134781/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1404161361,
                "user": "dimecho",
                "body": "But wait this creates a \"chicken-egg\" situation.\r\n\r\nESP8266HTTPUpdateServer example is broken with signature because it adds 260 bytes (256 byte signature + 4 byte length) to .bin file.\r\n\r\nIf we try 2072576 - 260 = 2072**316**\r\n```\r\nmklittlefs -c ./data/ -b 8192 -p 256 -d 5 -s 2072316 flash-littlefs.bin\r\n```\r\nThis puts us back to ```lfs.c:4188:error: Invalid block count```\r\n\r\nand using working size 2072576 + 260 = 2072**836**\r\n```\r\nsigning.py --mode sign --privatekey ./private.key --bin lash-littlefs.bin --out flash-littlefs.signed\r\n```\r\n\r\n ```Not Enough Space``` flash-littlefs.signed file over OTA size 2072**576**",
                "created_at": "2023-01-25T20:04:11Z",
                "updated_at": "2023-01-25T20:09:12Z",
                "author_association": "NONE",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1404161361/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1404434936,
                "user": "dimecho",
                "body": "Not sure if this is acceptable solution for v3.1.1. In order to fix LittleFS binary signing support, we sacrifice a block.\r\n\r\nPatch LittleFS.h\r\n```\r\n#if ARDUINO_SIGNING\r\n_lfs_cfg.block_count = _size / _blockSize - 1;\r\n#else\r\n_lfs_cfg.block_count = _size / _blockSize;\r\n#endif\r\n```\r\n2072576 - 8192 = 2064384\r\n```\r\nmklittlefs -c ./data/ -b 8192 -p 256 -d 5 -s 2064384 flash-littlefs.bin\r\nsigning.py --mode sign --privatekey private.key --bin flash-littlefs.bin --out flash-littlefs.signed\r\n````",
                "created_at": "2023-01-26T01:06:03Z",
                "updated_at": "2023-01-26T01:54:14Z",
                "author_association": "NONE",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1404434936/reactions",
                    "total_count": 1,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 1,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1405154983,
                "user": "d-a-v",
                "body": "Did you try to `gzip -9 flash-littlefs.bin` before signing and uploading ?",
                "created_at": "2023-01-26T15:10:47Z",
                "updated_at": "2023-01-26T15:10:47Z",
                "author_association": "COLLABORATOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1405154983/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1405249083,
                "user": "dimecho",
                "body": "> Did you try to `gzip -9 flash-littlefs.bin` before signing and uploading ?\r\n\r\nNo, there is not much benefit in gzip as it seems to work with 4MB 1MB OTA (wasting half for extracting?) and I can use 4MB 2MB OTA for full FS. But once it extracts it is same story ```Not Enough Space``` if you go over OTA size with 260 byte signing.\r\n\r\nBut if you subtract \"-1\" in LittleFS.h, works with signing.",
                "created_at": "2023-01-26T16:14:06Z",
                "updated_at": "2023-01-26T16:22:10Z",
                "author_association": "NONE",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1405249083/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            }
        ]
    },
    {
        "id": 1553789864,
        "number": 8824,
        "title": "Code working in 3.0.2 not working in 3.1.0 or 3.1.1",
        "state": "closed",
        "locked": false,
        "assignees": [],
        "labels": [],
        "milestone": null,
        "created_at": "2023-01-23T20:48:40Z",
        "updated_at": "2023-01-23T20:57:35Z",
        "closed_at": "2023-01-23T20:57:35Z",
        "author_association": "NONE",
        "body": "\r\n\r\n\r\n\r\n#### Platform\r\n\r\n- Hardware:\t\t\t\t other\r\n- Core Version:\t\t\t[latest git hash or date]\r\n- Development Env:\t\t[Arduino IDE| \r\n- Operating System:\t\t[Windows| \r\n\r\n### Settings in IDE\r\n\r\n- Module:  \t\t\t[Generic ESP8266 Module|\r\n- Flash Mode:\t\t\t[qio|dio|other]\r\n- Flash Size: \t\t[4MB/ \r\n- lwip Variant:   [v1.4|v2 Lower Memory|Higher Bandwidth]\r\n- Reset Method:\t\t[ck|nodemcu]\r\n- Flash Frequency:\t[40Mhz]\r\n- CPU Frequency:\t\t[80Mhz|160MHz]\r\n- Upload Using:\t\t[OTA|SERIAL]\r\n- Upload Speed:   [115200|other] (serial upload only)\r\n\r\n\r\n### Problem Description\r\nNoob here.\r\n\r\nI have copied some code from this link , which compiles aand runs fine in 3.0.2 - but it throws an error in both 3.1.0 and 3.1.1 \r\nI added the row number that always starts the error, it seem to be when creating the new instance.\r\nThere might be a new  mothod for this , I'll check in the documentation....\r\n\r\nhttps://www.survivingwithandroid.com/invoke-https-rest-json-api-esp8266/\r\n\r\nCode and error is below: \r\n\r\n### [MCVE](https://stackoverflow.com/help/mcve) Sketch\r\n\r\n`\r\n\r\n\r\n````\r\nString rest_query(char* question){\r\n  Serial.println(\"Connecting to the HTTP server....\");\r\n row 112 **### std::unique_ptr<BearSSL::WiFiClientSecure>client(new BearSSL::WiFiClientSecure);**\r\n  client->setInsecure();\r\n  \r\n  char apiURL[1024];\r\n  const char* query = question;\r\n  Serial.println(\"Building URL...\");\r\n  sprintf(apiURL, \"%s/%s\", server, query);\r\n  Serial.printf(\"API URL=%s \\r\\n\",apiURL);\r\n\r\nif (http.begin(*client, apiURL)) {\r\n    Serial.println(\"Connected\");\r\n    http.addHeader(\"Accept\", \"application/json\");\r\n    http.addHeader(\"Ocp-Apim-Subscription-Key\", API_KEY);\r\n    int code = http.GET();\r\n    Serial.printf(\"HTTP Code [%d]\", code);\r\n    if (code > 0) {\r\n      if (code == HTTP_CODE_OK || code == HTTP_CODE_MOVED_PERMANENTLY) {\r\n        Serial.println(\"GET OK\");\r\n        String payload = http.getString();\r\n        Serial.println(payload);\r\n        Serial.println(\"...JSON..\");\r\n        return payload;\r\n      }\r\n    }\r\n    else {\r\n      Serial.printf(\"[HTTP] GET... failed, error: %s\", http.errorToString(code).c_str());\r\n         }\r\n}\r\n}\r\n````\r\n\r\n### Debug Messages\r\n````\r\nC:\\Users\\krister\\Documents\\Arduino\\nodeMCU-hisingsbro\\nodeMCU-hisingsbro.ino:112:81: error: control reaches end of non-void function [-Werror=return-type]\r\n  112 |   std::unique_ptr<BearSSL::WiFiClientSecure>client(new BearSSL::WiFiClientSecure);\r\n      |                                                                                 ^\r\ncc1plus.exe: some warnings being treated as errors\r\n\r\nexit status 1\r\n\r\nCompilation error: control reaches end of non-void function [-Werror=return-type]\r\n\r\n````",
        "reactions": {
            "url": "https://api.github.com/repos/esp8266/Arduino/issues/8824/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "is_pull_request": false,
        "timeline_events": [
            {
                "event": "commented",
                "actor": "earlephilhower",
                "created_at": "2023-01-23T20:57:35Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "closed",
                "actor": "earlephilhower",
                "created_at": "2023-01-23T20:57:35Z",
                "assignee": null,
                "label": null
            }
        ],
        "comments_data": [
            {
                "id": 1400968659,
                "user": "earlephilhower",
                "body": "The code you snipped is in error and should be fixed.  The compiler warning is that \"control reaches end of non-void function\" which is the case on the `else` bit of either `if` condition.\r\n\r\nYou should return an appropriate value in that case, or the compiler generated code's behavior is undefined (as in crash or do other unexpected things).",
                "created_at": "2023-01-23T20:57:35Z",
                "updated_at": "2023-01-23T20:57:35Z",
                "author_association": "COLLABORATOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1400968659/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            }
        ]
    },
    {
        "id": 1553518916,
        "number": 8823,
        "title": "Update to 3.1.0 and 3.1.1 --> compilation Error for NodeMCU 1.0 (ESP-12E Module)",
        "state": "closed",
        "locked": false,
        "assignees": [],
        "labels": [],
        "milestone": null,
        "created_at": "2023-01-23T17:56:29Z",
        "updated_at": "2023-01-25T09:35:02Z",
        "closed_at": "2023-01-25T09:35:01Z",
        "author_association": "NONE",
        "body": "Software: Arduino IDE 1.8.19\r\n\r\nI Updated esp8266 in board manager from version 3.0.2 to 3.1.1. Compilation fails after that. Same issue with verion 3.1.0. Back to  version 3.0.2 compilation works.\r\n\r\n```\r\nArduino: 1.8.19 (Windows Store 1.8.57.0) (Windows 10), Board: \"NodeMCU 1.0 (ESP-12E Module), 80 MHz, Flash, Disabled (new aborts on oom), Disabled, All SSL ciphers (most compatible), 32KB cache + 32KB IRAM (balanced), Use pgm_read macros for IRAM/PROGMEM, 4MB (FS:2MB OTA:~1019KB), 2, v2 Lower Memory, Disabled, None, Only Sketch, 115200\"\r\n\r\nTraceback (most recent call last):\r\n\r\n  File \"C:\\Users\\purpo\\Documents\\ArduinoData\\packages\\esp8266\\hardware\\esp8266\\3.1.0/tools/mkbuildoptglobals.py\", line 846, in <module>\r\n\r\n    sys.exit(main())\r\n\r\n  File \"C:\\Users\\purpo\\Documents\\ArduinoData\\packages\\esp8266\\hardware\\esp8266\\3.1.0/tools/mkbuildoptglobals.py\", line 743, in main\r\n\r\n    use_aggressive_caching_workaround = determine_cache_state(args, runtime_ide_path, source_globals_h_fqfn)\r\n\r\n  File \"C:\\Users\\purpo\\Documents\\ArduinoData\\packages\\esp8266\\hardware\\esp8266\\3.1.0/tools/mkbuildoptglobals.py\", line 595, in determine_cache_state\r\n\r\n    caching_enabled = check_preferences_txt(ide_path, preferences_fqfn)\r\n\r\n  File \"C:\\Users\\purpo\\Documents\\ArduinoData\\packages\\esp8266\\hardware\\esp8266\\3.1.0/tools/mkbuildoptglobals.py\", line 517, in check_preferences_txt\r\n\r\n    val1 = get_preferences_txt(file_fqfn[1], key)\r\n\r\n  File \"C:\\Users\\purpo\\Documents\\ArduinoData\\packages\\esp8266\\hardware\\esp8266\\3.1.0/tools/mkbuildoptglobals.py\", line 485, in get_preferences_txt\r\n\r\n    with open(file_fqfn, encoding=\"utf-8\") as file:\r\n\r\nFileNotFoundError: [Errno 2] No such file or directory: 'C:\\\\Users\\\\purpo\\\\AppData\\\\local\\\\Arduino15\\\\preferences.txt'\r\n\r\nexit status 1\r\n\r\nFehler beim Kompilieren f\u00fcr das Board NodeMCU 1.0 (ESP-12E Module).\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/esp8266/Arduino/issues/8823/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "is_pull_request": false,
        "timeline_events": [
            {
                "event": "commented",
                "actor": "mcspr",
                "created_at": "2023-01-25T09:35:01Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "closed",
                "actor": "mcspr",
                "created_at": "2023-01-25T09:35:02Z",
                "assignee": null,
                "label": null
            }
        ],
        "comments_data": [
            {
                "id": 1403328883,
                "user": "mcspr",
                "body": "Duplicate of #8803\r\n(and #8811)",
                "created_at": "2023-01-25T09:35:01Z",
                "updated_at": "2023-01-25T09:35:01Z",
                "author_association": "COLLABORATOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1403328883/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            }
        ]
    },
    {
        "id": 1553099886,
        "number": 8822,
        "title": "Trying to get SD card information using `SDFS.info64` function leads to a crash.",
        "state": "closed",
        "locked": false,
        "assignees": [],
        "labels": [],
        "milestone": null,
        "created_at": "2023-01-23T13:27:07Z",
        "updated_at": "2023-02-03T02:21:13Z",
        "closed_at": "2023-02-03T02:21:13Z",
        "author_association": "NONE",
        "body": "### Basic Infos\r\n\r\n- [X] This issue complies with the [issue POLICY doc](https://github.com/esp8266/Arduino/blob/master/POLICY.md).\r\n- [X] I have read the documentation at [readthedocs](https://arduino-esp8266.readthedocs.io/en/latest) and the issue is not addressed there.\r\n- [X] I have tested that the issue is present in current master branch (aka latest git).\r\n- [X] I have searched the issue tracker for a similar issue.\r\n- [X] If there is a stack dump, I have decoded it.\r\n- [X] I have filled out all fields below.\r\n\r\n#### Platform\r\n\r\n- Hardware: ESP-12E\r\n- Core Version: 3.1.1 (using `platform = espressif8266@4.1.0` in **platformio.ini** file)\r\n- Development Env: Platformio (with `-DDEBUG_ESP_CORE -DDEBUG_ESP_PORT=Serial` build flags)\r\n- Operating System: Windows\r\n\r\n### Settings in IDE\r\n\r\n- Module: Generic ESP8266 Module\r\n- Flash Mode: qio (I guess)\r\n- Flash Size: 4MB\r\n- lwip Variant: v2 Lower Memory\r\n- Reset Method: nodemcu\r\n- Flash Frequency: 26MHz\r\n- CPU Frequency: 80MHz\r\n- Upload Using: Serial\r\n- Upload Speed: 921600\r\n\r\n\r\n### Problem Description\r\n\r\nTrying to get SD card information using `SDFS.info64` function leads to a crash.\r\n\r\nIt works fine using Core version 3.0.2 (using `platform = espressif8266@4.0.1` in **platformio.ini** file).\r\n\r\n### [MCVE](https://stackoverflow.com/help/mcve) Sketch\r\n\r\n```cpp\r\n\r\n#include <Arduino.h>\r\n#include <LittleFS.h>\r\n#include <SD.h>\r\n\r\n// source: https://github.com/yoursunny/PriUint64/blob/main/src/PriUint64.h\r\n#include \"PriUint64.h\"\r\n\r\nvoid setup() {\r\n  Serial.begin(115200);\r\n  Serial.println(\"\\nSetup...\");\r\n\r\n  if (!SD.begin(D0)) {\r\n    Serial.println(\"Initialization failed!\");\r\n  }\r\n  else\r\n  {\r\n    Serial.println(\"Initialization successful!\");\r\n    FSInfo64 sd_info;\r\n    SDFS.info64(sd_info);\r\n    Serial.print(F(\"File system total space: \"));\r\n    Serial.print(PriUint64<DEC>(sd_info.totalBytes));\r\n    Serial.println();\r\n\r\n    Serial.print(F(\"File system used space: \"));\r\n    Serial.print(PriUint64<DEC>(sd_info.usedBytes));\r\n    Serial.print(F(\" (\"));\r\n    Serial.print(PriUint64<DEC>(round((sd_info.usedBytes * 100) / sd_info.totalBytes)));\r\n    Serial.println(F(\"%)\"));\r\n\r\n    Serial.print(F(\"File system free space: \"));\r\n    Serial.print(PriUint64<DEC>(sd_info.totalBytes - sd_info.usedBytes));\r\n    Serial.print(F(\" (\"));\r\n    Serial.print(PriUint64<DEC>(round(((sd_info.totalBytes - sd_info.usedBytes) * 100) / sd_info.totalBytes)));\r\n    Serial.println(F(\"%)\"));\r\n  }\r\n}\r\n\r\nvoid loop() {\r\n}\r\n\r\n```\r\n\r\n### Debug Messages\r\n\r\n```\r\nSDK:2.2.2-dev(38a443e)/Core:3.1.1=30101000/lwIP:STABLE-2_1_3_RELEASE/glue:1.2-65-g06164fb/BearSSL:b024386\r\n\r\nSetup...\r\n\r\nInitialization successful!\r\n\r\n--------------- CUT HERE FOR EXCEPTION DECODER ---------------\r\n\r\nSoft WDT reset\r\n\r\n>>>stack>>>\r\n\r\nctx: cont\r\nsp: 3ffffcb0 end: 3fffffd0 offset: 01a0\r\n3ffffe50:  00000040 3ffefab8 00000000 402091c4  \r\n3ffffe60:  00000040 00000000 00000010 00000001  \r\n3ffffe70:  000001c0 3ffef938 00000000 402091a2\r\n3ffffe80:  00000040 00000000 00000010 00000001\r\n3ffffe90:  00000000 00000cc1 3ba5e353 3ffefb20\r\n3ffffea0:  00000200 3ffef8f8 00000dec 40207b9c\r\n3ffffeb0:  00000200 3ffef8f8 00000dec 40207390\r\n3ffffec0:  3ffef8f8 00003181 3ffefb20 00000001\r\n3ffffed0:  3ffef8f8 00000000 3ffefb20 40207a3d  \r\n3ffffee0:  00003180 00000002 3ffefb20 00003182\r\n3ffffef0:  00003181 00000002 3ffef8e8 40207c6f\r\n3fffff00:  3ffef8c4 00198aa2 00042979 402070f9\r\n3fffff10:  3ffef8e8 00000100 3ffe885d 40204204\r\n3fffff20:  3ffe8d00 fffffffc feefeffe 00000000\r\n3fffff30:  00000001 001db420 3fffff60 4020195c\r\n3fffff40:  3fffdad0 0000001a 3ffeeac0 3ffeeb2c\r\n3fffff50:  3fffdad0 3ffeea94 3ffeeac0 402011a8\r\n3fffff60:  6d080000 00000000 003d0900 feefeffe\r\n3fffff70:  00004000 00000000 000003e7 000000ff\r\n3fffff80:  feefeffe feefeffe feefeffe feefeffe\r\n3fffff90:  feefeffe feefeffe feefeffe feefeffe\r\n3fffffa0:  feefeffe feefeffe feefeffe 3ffeeb2c\r\n3fffffb0:  3fffdad0 00000000 3ffeeb18 402032fc  \r\n3fffffc0:  feefeffe feefeffe 3fffdab0 40101431\r\n<<<stack<<<\r\n\r\n0x402091c4 in SPIClass::transferBytes(unsigned char const*, unsigned char*, unsigned int) at ??:?\r\n0x402091a2 in SPIClass::transferBytes(unsigned char const*, unsigned char*, unsigned int) at ??:?\r\n0x40207b9c in SdSpiArduinoDriver::receive(unsigned char*, unsigned int) at ??:?\r\n0x40207390 in SharedSpiCard::readData(unsigned char*, unsigned int) at ??:?\r\n0x40207a3d in DedicatedSpiCard::readSectors(unsigned int, unsigned char*, unsigned int) at ??:?\r\n0x40207c6f in FsCache::prepare(unsigned int, unsigned char) at ??:?\r\n0x402070f9 in FatPartition::freeClusterCount() at ??:?\r\n0x40204204 in uart_write at ??:?\r\n0x4020195c in sdfs::SDFSImpl::info64(fs::FSInfo64&) at ??:?\r\n0x402011a8 in setup at ??:?\r\n0x402032fc in loop_wrapper() at core_esp8266_main.cpp:?\r\n0x40101431 in cont_wrapper at ??:?\r\n\r\n\r\n--------------- CUT HERE FOR EXCEPTION DECODER ---------------\r\n\r\n ets Jan  8 2013,rst cause:2, boot mode:(3,6)\r\n```\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/esp8266/Arduino/issues/8822/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "is_pull_request": false,
        "timeline_events": [
            {
                "event": "commented",
                "actor": "mcspr",
                "created_at": "2023-01-23T15:34:26Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "mcspr",
                "created_at": "2023-01-23T15:57:13Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "BrokeStudio",
                "created_at": "2023-01-23T17:04:27Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "mcspr",
                "created_at": "2023-01-25T09:31:50Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "BrokeStudio",
                "created_at": "2023-01-31T13:52:49Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "mcspr",
                "created_at": "2023-01-31T19:20:07Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "mcspr",
                "created_at": "2023-02-01T17:43:15Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "cross-referenced",
                "actor": "mcspr",
                "created_at": "2023-02-02T15:41:20Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "referenced",
                "actor": "mcspr",
                "created_at": "2023-02-02T21:02:30Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "cross-referenced",
                "actor": "mcspr",
                "created_at": "2023-02-02T21:09:06Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "closed",
                "actor": "earlephilhower",
                "created_at": "2023-02-03T02:21:13Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "referenced",
                "actor": "earlephilhower",
                "created_at": "2023-02-03T02:21:17Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "referenced",
                "actor": "hasenradball",
                "created_at": "2024-11-18T16:42:14Z",
                "assignee": null,
                "label": null
            }
        ],
        "comments_data": [
            {
                "id": 1400549840,
                "user": "mcspr",
                "body": "> if (!SD.begin(D0)) {\r\n\r\nLooks like an accident that this worked at all\r\nhttps://github.com/esp8266/Arduino/blob/ead5f94dd3b24229818876877a9591e9ec51ce7e/libraries/SD/src/SD.h#L35-L38\r\n\r\nhttps://github.com/esp8266/Arduino/blob/ead5f94dd3b24229818876877a9591e9ec51ce7e/libraries/SDFS/src/SDFS.h#L137-L143\r\n\r\nUnless I am missing some other issue... <s> we can't exactly store pointer to a temporary storage, and should fix the SD class</s>\r\n*edit:* it is a copy... still, something is definitely wrong in the config part\r\n\r\nI don't see any more WDTs after replacing `SD.begin(D0)` with\r\n```cpp\r\nSDFSConfig config;\r\nconfig.setCSPin(D0);\r\nSDFS.setConfig(config);\r\nSDFS.begin();\r\n```",
                "created_at": "2023-01-23T15:34:26Z",
                "updated_at": "2023-01-23T15:57:28Z",
                "author_association": "COLLABORATOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1400549840/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1400583204,
                "user": "mcspr",
                "body": "...and the only difference seems to be\r\n* SD.begin(D0) is using `SPI_HALF_SPEED`\r\n* default-initialized SDFSConfig is `SD_SCK_MHZ(10)\r\nhttps://github.com/esp8266/Arduino/blob/cf240242926a2eeefde44b6c6218208918db321f/libraries/SDFS/src/SDFS.h#L47",
                "created_at": "2023-01-23T15:57:13Z",
                "updated_at": "2023-01-23T15:57:13Z",
                "author_association": "COLLABORATOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1400583204/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1400681116,
                "user": "BrokeStudio",
                "body": "I got the same issue with this piece of code:\r\n\r\n```cpp\r\n  SDFSConfig config;\r\n  config.setCSPin(D0);\r\n  SDFS.setConfig(config);\r\n\r\n  if (!SDFS.begin()) {\r\n    Serial.println(\"Initialization failed!\");\r\n  }\r\n  else\r\n  {\r\n    Serial.println(\"Initialization successful!\");\r\n    FSInfo64 sd_info;\r\n    SDFS.info64(sd_info);\r\n    Serial.print(F(\"File system total space: \"));\r\n    Serial.print(PriUint64<DEC>(sd_info.totalBytes));\r\n    Serial.println();\r\n  }\r\n```\r\n\r\nOutput:\r\n\r\n```\r\nSDK:2.2.2-dev(38a443e)/Core:3.1.1=30101000/lwIP:STABLE-2_1_3_RELEASE/glue:1.2-65-g06164fb/BearSSL:b024386\r\n\r\nSetup...\r\n\r\nInitialization successful!\r\n\r\n--------------- CUT HERE FOR EXCEPTION DECODER ---------------\r\n\r\nSoft WDT reset\r\n\r\n>>>stack>>>\r\n\r\nctx: cont\r\nsp: 3ffffce0 end: 3fffffd0 offset: 01a0\r\n3ffffe80:  00000000 00000cc1 ab439581 000ebfee\r\n3ffffe90:  3ffef8c0 00000009 3ffefae8 3ffefae8\r\n3ffffea0:  00000200 3ffef8c0 00000ded 40207246  \r\n3ffffeb0:  3ffef8c0 00003794 3ffefae8 00000001  \r\n3ffffec0:  3ffef8c0 00000000 3ffefae8 40207925\r\n3ffffed0:  00003793 00000002 3ffefae8 00003795\r\n3ffffee0:  00003794 00000002 3ffef8b0 40207b57\r\n3ffffef0:  3ffef88c 00168122 000732f9 40206fe1\r\n3fffff00:  3ffef8b0 00000100 3ffe885d 40204104\r\n3fffff10:  3ffe8cdc fffffffc feefeffe 00000000  \r\n3fffff20:  00000001 001db420 3fffff50 40201948\r\n3fffff30:  3fffdad0 0000001a 3ffeea90 3ffeeafc\r\n3fffff40:  3fffdad0 3ffeea64 3ffeea90 40201194\r\n3fffff50:  6d080000 00000000 feefeffe feefeffe\r\n3fffff60:  00004000 00000000 000003e7 000000ff\r\n3fffff70:  feefeffe feefeffe feefeffe feefeffe\r\n3fffff80:  53444653 00001000 00989680 feefeffe\r\n3fffff90:  feefeffe feefeffe feefeffe feefeffe\r\n3fffffa0:  feefeffe feefeffe feefeffe 3ffeeafc\r\n3fffffb0:  3fffdad0 00000000 3ffeeae8 4020324c\r\n3fffffc0:  feefeffe feefeffe 3fffdab0 4010110d\r\n<<<stack<<<\r\n\r\n0x40207246 in SharedSpiCard::readData(unsigned char*, unsigned int) at ??:?\r\n0x40207925 in DedicatedSpiCard::readSectors(unsigned int, unsigned char*, unsigned int) at ??:?\r\n0x40207b57 in FsCache::prepare(unsigned int, unsigned char) at ??:?\r\n0x40206fe1 in FatPartition::freeClusterCount() at ??:?\r\n0x40204104 in uart_write at ??:?\r\n0x40201948 in sdfs::SDFSImpl::info64(fs::FSInfo64&) at ??:?\r\n0x40201194 in setup at ??:?\r\n0x4020324c in loop_wrapper() at core_esp8266_main.cpp:?\r\n0x4010110d in cont_wrapper at ??:?\r\n```",
                "created_at": "2023-01-23T17:04:27Z",
                "updated_at": "2023-01-23T17:04:27Z",
                "author_association": "NONE",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1400681116/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1403325049,
                "user": "mcspr",
                "body": "As I understood our SPI logic, this just happens when we fail the transaction / don't receive a reply.\r\nMeaning, SPI communication just doesn't work or was not initialized properly :/\r\n\r\nHave you tried adjusting speeds to a different MHZ values? Only thing that comes to mind, otherwise I am not really sure of where the problem might be based on the traces.\r\n*(Unless we hit some kind of issue with SDFAT implementation after updating to 2.1.1)*",
                "created_at": "2023-01-25T09:31:50Z",
                "updated_at": "2023-01-25T09:31:50Z",
                "author_association": "COLLABORATOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1403325049/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1410397030,
                "user": "BrokeStudio",
                "body": "I tried different settings in the `platformio.ini file`.\r\nHopefully it'll help a bit.\r\nChanging the speed didn't change anything, 39MHz seems to be the maximum. Above this, `SDFS.begin()` will fail.\r\n\r\n* SDFS.info64() works fine\r\n```\r\nplatform = espressif8266@3.1.0\r\n=> SDK:2.2.2-dev(38a443e)/Core:3.0.1=30001000/lwIP:STABLE-2_1_2_RELEASE/glue:1.2-48-g7421258/BearSSL:c0b69df\r\n\r\nplatform = espressif8266@3.1.0\r\nplatform_packages = framework-arduinoespressif8266 @ 3.30002.0\r\n=> SDK:2.2.2-dev(38a443e)/Core:3.0.2=30002000/lwIP:STABLE-2_1_2_RELEASE/glue:1.2-48-g7421258/BearSSL:6105635\r\n\r\nplatform = espressif8266@3.2.0\r\nplatform_packages = framework-arduinoespressif8266 @ 3.30002.0\r\n=> SDK:2.2.2-dev(38a443e)/Core:3.0.2=30002000/lwIP:STABLE-2_1_2_RELEASE/glue:1.2-48-g7421258/BearSSL:6105635\r\n\r\nplatform = espressif8266@4.0.0\r\nplatform_packages = framework-arduinoespressif8266 @ 3.30002.0\r\n=> SDK:2.2.2-dev(38a443e)/Core:3.0.2=30002000/lwIP:STABLE-2_1_2_RELEASE/glue:1.2-48-g7421258/BearSSL:6105635\r\n\r\nplatform = espressif8266@4.0.1\r\nplatform_packages = framework-arduinoespressif8266 @ 3.30002.0\r\n=> SDK:2.2.2-dev(38a443e)/Core:3.0.2=30002000/lwIP:STABLE-2_1_2_RELEASE/glue:1.2-48-g7421258/BearSSL:6105635\r\n\r\nplatform = espressif8266@4.1.0\r\nplatform_packages = framework-arduinoespressif8266 @ 3.30002.0\r\n=> SDK:2.2.2-dev(38a443e)/Core:3.0.2=30002000/lwIP:STABLE-2_1_2_RELEASE/glue:1.2-48-g7421258/BearSSL:6105635\r\n```\r\n\r\n* SDFS.info64() crashes\r\n\r\n```\r\nplatform = espressif8266@3.1.0\r\nplatform_packages = framework-arduinoespressif8266 @ 3.30101.0\r\n=> SDK:2.2.2-dev(38a443e)/Core:3.1.1=30101000/lwIP:STABLE-2_1_3_RELEASE/glue:1.2-65-g06164fb/BearSSL:b024386\r\n\r\nplatform = espressif8266@3.2.0\r\n#platform_packages = framework-arduinoespressif8266 @ 3.30101.0\r\n=> SDK:2.2.2-dev(38a443e)/Core:3.1.1=30101000/lwIP:STABLE-2_1_3_RELEASE/glue:1.2-65-g06164fb/BearSSL:b024386\r\n\r\nplatform = espressif8266@4.0.0\r\n#platform_packages = framework-arduinoespressif8266 @ 3.30101.0\r\n=> SDK:2.2.2-dev(38a443e)/Core:3.1.1=30101000/lwIP:STABLE-2_1_3_RELEASE/glue:1.2-65-g06164fb/BearSSL:b024386\r\n\r\nplatform = espressif8266@4.0.1\r\nplatform_packages = framework-arduinoespressif8266 @ 3.30101.0\r\n=> SDK:2.2.2-dev(38a443e)/Core:3.1.1=30101000/lwIP:STABLE-2_1_3_RELEASE/glue:1.2-65-g06164fb/BearSSL:b024386\r\n\r\nplatform = espressif8266@4.1.0\r\nplatform_packages = framework-arduinoespressif8266 @ 3.30101.0\r\n=> SDK:2.2.2-dev(38a443e)/Core:3.1.1=30101000/lwIP:STABLE-2_1_3_RELEASE/glue:1.2-65-g06164fb/BearSSL:b024386\r\n\r\nplatform = espressif8266@4.1.0\r\nplatform_packages = platformio/framework-arduinoespressif8266 @ https://github.com/esp8266/Arduino.git\r\n=> SDK:2.2.2-dev(38a443e)/Core:3.1.0-dev=30100000/lwIP:STABLE-2_1_2_RELEASE/glue:1.2-48-g7421258/BearSSL:6105635\r\n```",
                "created_at": "2023-01-31T13:52:49Z",
                "updated_at": "2023-01-31T13:52:49Z",
                "author_association": "NONE",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1410397030/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1410935347,
                "user": "mcspr",
                "body": "Another guess related to speed - how big is your SD card?\r\n\r\nSince we know the trace above shows us stalling around here\r\n> 0x402070f9 in FatPartition::freeClusterCount() at ??:?\r\n\r\nhttps://github.com/greiman/SdFat/blob/628effa1c277e6dc1fef461b4b755ad300735248/src/FatLib/FatPartition.cpp#L354-L380\r\nWhat about adding `yield()` right at the start of the loop?\r\n\r\n*edit:* `pio run` with `--verbose` would show the library path, which is likely somewhere in `~/.platformio/packages/framework-arduinoespressif8266/libraries/Esp8266SdFat/`; depends on the version used",
                "created_at": "2023-01-31T19:20:07Z",
                "updated_at": "2023-01-31T19:24:24Z",
                "author_association": "COLLABORATOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1410935347/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1412463870,
                "user": "mcspr",
                "body": "2.0.2 used `sdfat::SdSpiCard::isTimedOut` which in turn did the `yield()`ing through the `SysCall` helper class, not yet sure why the updated version removed it (or forgot to call there) :/\r\nhttps://github.com/greiman/SdFat/blob/1535ac2b0332c22da26ca876fd2a04641dffadb4/src/SdCard/SdSpiCard.cpp#L450\r\n\r\nComparing with some random 4GB HC SD, at least some explanation for my results\r\n* 10MHZ takes around 1.8s to perform that specific loop, that happens to stay within WDT limit (including initial setup)\r\n* Default value takes around 3s, which tips over",
                "created_at": "2023-02-01T17:43:15Z",
                "updated_at": "2023-02-01T18:42:22Z",
                "author_association": "COLLABORATOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1412463870/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            }
        ]
    },
    {
        "id": 1558218322,
        "number": 8831,
        "title": "Help identifying problem using Lib EBD + CORE 3.1.0",
        "state": "closed",
        "locked": false,
        "assignees": [],
        "labels": [
            "component: core",
            "component: libraries"
        ],
        "milestone": null,
        "created_at": "2023-01-26T14:19:15Z",
        "updated_at": "2023-01-31T19:28:39Z",
        "closed_at": "2023-01-31T19:28:39Z",
        "author_association": "CONTRIBUTOR",
        "body": "LIB EBD :  https://github.com/jwhiddon/EDB\r\n\r\n#### Platform\r\n- Hardware:\t\t              [ESP-12]\r\n- Core Version:\t\t\t[3.1.0]\r\n- Development Env:\t\t[Arduino IDE]\r\n- Operating System:\t\t[Windows]\r\n\r\n### Problem Description\r\n\r\nThe code example below has always worked great on previous cores. I'm having trouble identifying the problem using ESP8266 CORE 3.1.0. The code is working normally when the DB file is created, but when reusing the file an exeption occurs. I think it might be something related to Append or Write x SEEK of the file using SD CARD.\r\n\r\n\r\n### [MCVE](https://stackoverflow.com/help/mcve) Sketch\r\n\r\n```#include <EDB.h>\r\n#include <SPI.h>\r\n#include <SD.h>\r\n#define TABLE_SIZE 8192\r\n#define RECORDS_TO_CREATE 100\r\n\r\nString db_name = \"/TESTE.db\";\r\nFile dbFile;\r\nstruct LogEvent {\r\n    int id;\r\n    int temperature;\r\n}\r\nlogEvent;\r\n\r\ninline void writer (unsigned long address, const byte* data, unsigned int recsize) {\r\n    dbFile.seek(address);\r\n    dbFile.write(data,recsize);\r\n    dbFile.flush();\r\n}\r\n\r\ninline void reader (unsigned long address, byte* data, unsigned int recsize) {\r\n    dbFile.seek(address);\r\n    dbFile.read(data,recsize);\r\n}\r\n\r\n// Create an EDB object with the appropriate write and read handlers\r\nEDB db(&writer, &reader);\r\n\r\n// Run the demo\r\nvoid setup()\r\n{\r\n    Serial.begin(115200);\r\n    Serial.println(\" Extended Database Library + External SD CARD storage demo\");\r\n    Serial.println();\r\n    if (!SD.begin(4)) {\r\n        Serial.println(\"No SD-card.\");\r\n        return;\r\n    }\r\n\r\n    if (SD.exists(db_name.c_str())) {\r\n        dbFile = SD.open(db_name.c_str(), FILE_WRITE);\r\n        if (!dbFile) {\r\n            dbFile = SD.open(db_name.c_str(), FILE_WRITE);\r\n        }\r\n        if (dbFile) {\r\n            Serial.print(\"Openning current table... \");\r\n            EDB_Status result = db.open(0);\r\n            if (result == EDB_OK) {\r\n                Serial.println(\"DONE\");\r\n            } else {\r\n                Serial.println(\"ERROR\");\r\n                Serial.println(\"Did not find database in the file \" + String(db_name));\r\n                Serial.print(\"Creating new table... \");\r\n                db.create(0, TABLE_SIZE, (unsigned int)sizeof(logEvent));\r\n                Serial.println(\"DONE\");\r\n                return;\r\n            }\r\n        } else {\r\n            Serial.println(\"Could not open file \" + String(db_name));\r\n            return;\r\n        }\r\n    } else {\r\n        Serial.print(\"Creating table... \");\r\n        // create table at with starting address 0\r\n        dbFile = SD.open(db_name.c_str(), FILE_WRITE);\r\n        db.create(0, TABLE_SIZE, (unsigned int)sizeof(logEvent));\r\n        Serial.println(\"DONE\");\r\n    }\r\n\r\n    //recordLimit();\r\n    //countRecords();\r\n    createRecords(RECORDS_TO_CREATE);\r\n    //countRecords();\r\n    selectAll();\r\n    deleteOneRecord(RECORDS_TO_CREATE / 2);\r\n    //countRecords();\r\n    selectAll();\r\n    appendOneRecord(RECORDS_TO_CREATE + 1);\r\n    //countRecords();\r\n    selectAll();\r\n    insertOneRecord(RECORDS_TO_CREATE / 2);\r\n    //countRecords();\r\n    selectAll();\r\n    updateOneRecord(RECORDS_TO_CREATE);\r\n    selectAll();\r\n    //countRecords();\r\n    deleteAll();\r\n    Serial.println(\"Use insertRec() and deleteRec() carefully, they can be slow\");\r\n    //countRecords();\r\n    for (int i = 1; i <= 20; i++) insertOneRecord(1);  // inserting from the beginning gets slower and slower\r\n    //countRecords();\r\n    for (int i = 1; i <= 20; i++) deleteOneRecord(1);  // deleting records from the beginning is slower than from the end\r\n    //countRecords();\r\n\r\n    dbFile.close();\r\n}\r\n\r\nvoid loop()\r\n{\r\n}\r\n\r\n// utility functions\r\n\r\nvoid recordLimit()\r\n{\r\n    Serial.print(\"Record Limit: \");\r\n    Serial.println(db.limit());\r\n}\r\n\r\nvoid deleteOneRecord(int recno)\r\n{\r\n    Serial.print(\"Deleting recno: \");\r\n    Serial.println(recno);\r\n    db.deleteRec(recno);\r\n}\r\n\r\nvoid deleteAll()\r\n{\r\n    Serial.print(\"Truncating table... \");\r\n    db.clear();\r\n    Serial.println(\"DONE\");\r\n}\r\n\r\nvoid countRecords()\r\n{\r\n    Serial.print(\"Record Count: \");\r\n    Serial.println(db.count());\r\n}\r\n\r\nvoid createRecords(int num_recs)\r\n{\r\n    Serial.print(\"Creating Records... \");\r\n    for (int recno = 1; recno <= num_recs; recno++)\r\n    {\r\n        logEvent.id = recno;\r\n        logEvent.temperature = random(1, 125);\r\n        EDB_Status result = db.appendRec(EDB_REC logEvent);\r\n        if (result != EDB_OK) printError(result);\r\n    }\r\n    Serial.println(\"DONE\");\r\n}\r\n\r\nvoid selectAll()\r\n{\r\n    for (int recno = 1; recno <= db.count(); recno++)\r\n    {\r\n        EDB_Status result = db.readRec(recno, EDB_REC logEvent);\r\n        if (result == EDB_OK)\r\n        {\r\n            Serial.print(\"Recno: \");\r\n            Serial.print(recno);\r\n            Serial.print(\" ID: \");\r\n            Serial.print(logEvent.id);\r\n            Serial.print(\" Temp: \");\r\n            Serial.println(logEvent.temperature);\r\n        }\r\n        else printError(result);\r\n    }\r\n}\r\n\r\nvoid updateOneRecord(int recno)\r\n{\r\n    Serial.print(\"Updating record at recno: \");\r\n    Serial.print(recno);\r\n    Serial.print(\"... \");\r\n    logEvent.id = 1234;\r\n    logEvent.temperature = 4321;\r\n    EDB_Status result = db.updateRec(recno, EDB_REC logEvent);\r\n    if (result != EDB_OK) printError(result);\r\n    Serial.println(\"DONE\");\r\n}\r\n\r\nvoid insertOneRecord(int recno)\r\n{\r\n    Serial.print(\"Inserting record at recno: \");\r\n    Serial.print(recno);\r\n    Serial.print(\"... \");\r\n    logEvent.id = recno;\r\n    logEvent.temperature = random(1, 125);\r\n    EDB_Status result = db.insertRec(recno, EDB_REC logEvent);\r\n    if (result != EDB_OK) printError(result);\r\n    Serial.println(\"DONE\");\r\n}\r\n\r\nvoid appendOneRecord(int id)\r\n{\r\n    Serial.print(\"Appending record... \");\r\n    logEvent.id = id;\r\n    logEvent.temperature = random(1, 125);\r\n    EDB_Status result = db.appendRec(EDB_REC logEvent);\r\n    if (result != EDB_OK) printError(result);\r\n    Serial.println(\"DONE\");\r\n}\r\n\r\nvoid printError(EDB_Status err)\r\n{\r\n    Serial.print(\"ERROR: \");\r\n    switch (err)\r\n    {\r\n        case EDB_OUT_OF_RANGE:\r\n            Serial.println(\"Recno out of range\");\r\n            break;\r\n        case EDB_TABLE_FULL:\r\n            Serial.println(\"Table full\");\r\n            break;\r\n        case EDB_OK:\r\n        default:\r\n            Serial.println(\"OK\");\r\n            break;\r\n    }\r\n}\r\n```\r\n\r\n### Debug Messages\r\n13:36:36.196 ->  Extended Database Library + External SD CARD storage demo\r\n13:36:36.196 -> \r\n13:36:36.196 -> Openning current table... DONE\r\n13:36:36.196 -> Creating Records... \r\n13:36:36.196 -> --------------- CUT HERE FOR EXCEPTION DECODER ---------------\r\n13:36:36.196 -> \r\n13:36:36.196 -> Exception (0):\r\n13:36:36.196 -> epc1=0x4000e25d epc2=0x00000000 epc3=0x00000000 excvaddr=0x00000000 depc=0x00000000\r\n13:36:36.196 -> \r\n13:36:36.196 -> >>>stack>>>\r\n13:36:36.243 -> \r\n13:36:36.243 -> ctx: cont\r\n13:36:36.243 -> sp: 3ffffd60 end: 3fffffd0 offset: 0190\r\n13:36:36.243 -> 3ffffef0:  00000000 00002710 fffffffc 3ffe890b  \r\n13:36:36.243 -> 3fffff00:  4020652c 3ffe88f7 00000001 40206a9a  \r\n13:36:36.243 -> 3fffff10:  3ffeeb90 3ffeeb08 00000001 4020139b  \r\n13:36:36.243 -> 3fffff20:  3ffeeb10 00000004 3ffeeb90 3ffeeae0  \r\n13:36:36.243 -> 3fffff30:  3ffeeb10 3ffeeb90 3ffeeb3c 402016ab  \r\n13:36:36.243 -> 3fffff40:  feefeffe feefeffe feefeffe feefeffe  \r\n13:36:36.243 -> 3fffff50:  feefeffe feefeffe 4020a548 00000000  \r\n13:36:36.243 -> 3fffff60:  000003e8 3ffefbd0 00000000 00000000  \r\n13:36:36.243 -> 3fffff70:  00000000 402026ec 00000000 00000000  \r\n13:36:36.291 -> 3fffff80:  3ffeeb58 feefeffe feefeffe feefeffe  \r\n13:36:36.291 -> 3fffff90:  feefeffe feefeffe feefeffe cff2d90d  \r\n13:36:36.291 -> 3fffffa0:  feefeffe feefeffe feefeffe 3ffeebfc  \r\n13:36:36.291 -> 3fffffb0:  3fffdad0 00000000 3ffeebe8 402071b0  \r\n13:36:36.291 -> 3fffffc0:  feefeffe feefeffe 3fffdab0 4010103d  \r\n13:36:36.291 -> <<<stack<<<\r\n13:36:36.291 -> \r\n```\r\nDebug messages go here\r\n```\r\n![image](https://user-images.githubusercontent.com/325662/214879123-8bd4e14a-90ae-4a86-91e0-73e2ecfbac65.png)\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/esp8266/Arduino/issues/8831/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "is_pull_request": false,
        "timeline_events": [
            {
                "event": "commented",
                "actor": "d-a-v",
                "created_at": "2023-01-26T14:50:09Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "laercionit",
                "created_at": "2023-01-26T18:21:18Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "mentioned",
                "actor": "d-a-v",
                "created_at": "2023-01-26T18:21:18Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "subscribed",
                "actor": "d-a-v",
                "created_at": "2023-01-26T18:21:18Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "laercionit",
                "created_at": "2023-01-26T19:15:11Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "laercionit",
                "created_at": "2023-01-26T19:15:57Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "mcspr",
                "created_at": "2023-01-27T09:30:21Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "labeled",
                "actor": "mcspr",
                "created_at": "2023-01-27T11:11:04Z",
                "assignee": null,
                "label": "component: core"
            },
            {
                "event": "labeled",
                "actor": "mcspr",
                "created_at": "2023-01-27T11:11:04Z",
                "assignee": null,
                "label": "component: libraries"
            },
            {
                "event": "referenced",
                "actor": "mcspr",
                "created_at": "2023-01-27T12:04:54Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "cross-referenced",
                "actor": "mcspr",
                "created_at": "2023-01-27T12:05:32Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "closed",
                "actor": "mcspr",
                "created_at": "2023-01-31T19:28:39Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "referenced",
                "actor": "mcspr",
                "created_at": "2023-01-31T19:28:58Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "cross-referenced",
                "actor": "earlephilhower",
                "created_at": "2023-06-28T15:58:37Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "referenced",
                "actor": "hasenradball",
                "created_at": "2024-11-18T16:42:13Z",
                "assignee": null,
                "label": null
            }
        ],
        "comments_data": [
            {
                "id": 1405125036,
                "user": "d-a-v",
                "body": "> Debug messages go here\r\n\r\nThis would help alot to understand your issue:\r\n\r\nhttps://arduino-esp8266.readthedocs.io/en/latest/Troubleshooting/debugging.html\r\n\r\nhttps://arduino-esp8266.readthedocs.io/en/latest/Troubleshooting/stack_dump.html",
                "created_at": "2023-01-26T14:50:09Z",
                "updated_at": "2023-01-26T14:50:09Z",
                "author_association": "COLLABORATOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1405125036/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1405415731,
                "user": "laercionit",
                "body": "> > Debug messages go here\r\n> \r\n> This would help alot to understand your issue:\r\n> \r\n> https://arduino-esp8266.readthedocs.io/en/latest/Troubleshooting/debugging.html\r\n> \r\n> https://arduino-esp8266.readthedocs.io/en/latest/Troubleshooting/stack_dump.html\r\n\r\n@d-a-v , \r\nThanks for the guidance. Sorry for the insufficient detail. Include the information you requested.",
                "created_at": "2023-01-26T18:21:18Z",
                "updated_at": "2023-01-26T18:21:18Z",
                "author_association": "CONTRIBUTOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1405415731/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1405482592,
                "user": "laercionit",
                "body": "I made the change from FILE_WRITE to \"a+\" and it solved the problem.",
                "created_at": "2023-01-26T19:15:11Z",
                "updated_at": "2023-01-26T19:15:11Z",
                "author_association": "CONTRIBUTOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1405482592/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1405483661,
                "user": "laercionit",
                "body": "Apparently there was a change in CORE for the FILE_WRITE cursor position when opening the file.",
                "created_at": "2023-01-26T19:15:57Z",
                "updated_at": "2023-01-26T19:15:57Z",
                "author_association": "CONTRIBUTOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1405483661/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1406244284,
                "user": "mcspr",
                "body": "> I made the change from FILE_WRITE to \"a+\" and it solved the problem.\r\n\r\nSdFat <-> FS HAL mode translation is not correctly setting 'read' mode, as it turns out.\r\nhttps://github.com/earlephilhower/ESP8266SdFat/blob/43a65b42d5a827092188cfe11fb27237da252692/src/common/FsApiConstants.h#L47\r\nOur logic uses `O_READ` (aka `O_RDONLY`, aka `0`) as a mask, which **is always false** :/\r\nhttps://github.com/esp8266/Arduino/blob/e25f9e95783d6de59d6b3b7b4ebc029428c9b539/libraries/SD/src/SD.h#L162-L164\r\nhttps://github.com/esp8266/Arduino/blob/e25f9e95783d6de59d6b3b7b4ebc029428c9b539/libraries/SD/src/SD.h#L167\r\nhttps://github.com/esp8266/Arduino/blob/e25f9e95783d6de59d6b3b7b4ebc029428c9b539/libraries/SD/src/SD.h#L169\r\n\r\n> Apparently there was a change in CORE for the FILE_WRITE cursor position when opening the file.\r\n\r\nDo you have an example of mode and position before and after?",
                "created_at": "2023-01-27T09:30:21Z",
                "updated_at": "2023-01-27T09:30:21Z",
                "author_association": "COLLABORATOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1406244284/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            }
        ]
    },
    {
        "id": 1558019979,
        "number": 8830,
        "title": "Frequent Exception 0 Crashes with v3.1.0 and v3.1.1, but none with Core <v3.0.2",
        "state": "closed",
        "locked": false,
        "assignees": [],
        "labels": [],
        "milestone": null,
        "created_at": "2023-01-26T11:48:32Z",
        "updated_at": "2023-02-01T15:22:40Z",
        "closed_at": "2023-01-30T15:23:59Z",
        "author_association": "NONE",
        "body": "### Basic Infos\r\n\r\n- [X] This issue complies with the [issue POLICY doc](https://github.com/esp8266/Arduino/blob/master/POLICY.md).\r\n- [X] I have read the documentation at [readthedocs](https://arduino-esp8266.readthedocs.io/en/latest) and the issue is not addressed there.\r\n- [X] I have tested that the issue is present in current master branch (aka latest git).\r\n- [X] I have searched the issue tracker for a similar issue.\r\n- [X] If there is a stack dump, I have decoded it.\r\n- [X] I have filled out all fields below.\r\n\r\n#### Platform\r\n\r\n- Hardware:\t\t\t\tESP8266EX\r\n- Core Version:\t\t\t3.1.1., 3.1.0\r\n- Development Env:\t\tArduino IDE, Platformio\r\n- Operating System:\t\tWindows\r\n\r\n### Settings in IDE\r\n\r\n- Module:  \t\t\tWemos D1 mini r2\r\n- Flash Mode:\t\t\t[qio|dio|other]?\r\n- Flash Size: \t\t\t4MB/1MB\r\n- lwip Variant:   \t\tv2 Lower Memory\r\n- Reset Method:\t\t[ck|nodemcu]?\r\n- Flash Frequency:\t\t[40Mhz]?\r\n- CPU Frequency:\t\t80Mhz\r\n- Upload Using:\t\tSERIAL\r\n- Upload Speed:   \t\t921600\r\n\r\n\r\n### Problem Description\r\n\r\nI (and several others) have an [AirGradient Pro kit](https://www.airgradient.com/open-airgradient/kits/), which runs on a Wemos D1 Mini. I am seeing repeated Exception 0 crashes every few minutes when compiled with Core v3.1.0 and v3.1.1, but no Exceptions at all (tested over 24 hours) with v3.0.2 and below (I tested down to v3.0.0). This behavior is consistent with the latest Arduino IDE 2.0.3, Arduino IDE 1.8.19, and VSCode+PlatformIO with platform-espressif8266 v4.1.0 (which is updated to Arduino Core v3.1).\r\n\r\nBecause it crashes every few minutes, I captured a lot of exceptions, but I had no way of decoding in Arduino IDE 2.x and IDE 1.8.x didn't work with the Arduino Core v3.1.x because of Issue #8811, but I finally worked-around the issue to and got v3.1.x core to work with the older Arduino IDE v1.8.x  so that I could finally run the ESP Exception Decoder. I think this is what is needed?\r\n\r\nIt crashes so often, I have decoded dozens of exceptions and each one is always the same:\r\n\r\n`circular_queue ::available() const at c:\\users\\ken\\appdata\\local\\arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec\\xtensa-lx106-elf\\include\\c++\\10.3.0\\bits/atomic_base.h line 420`\r\n\r\nI'm not a very experienced, but I have spent hours isolating it to the Core v3.1.x update and getting the decoder working. Apologies if I'm not reporting this correctly or if there is some debug procedure I should do that is not obvious to me. Thanks.\r\n\r\n### Debug Messages\r\n\r\n```\r\nException 0: Illegal instruction\r\nPC: 0x40219d04: circular_queue ::available() const at c:\\users\\ken\\appdata\\local\\arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec\\xtensa-lx106-elf\\include\\c++\\10.3.0\\bits/atomic_base.h line 420\r\nEXCVADDR: 0x00000000\r\n\r\nDecoding stack results\r\n0x40100648: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40100c04: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 167\r\n0x40100b40: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 138\r\n0x40100c04: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 167\r\n0x40100b40: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 138\r\n0x4010062b: ets_intr_unlock() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 226\r\n0x40228c85: sys_timeout_abs at core/timeouts.c line 189\r\n0x401000ab: app_entry_redefinable() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 386\r\n0x40100648: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40100648: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40223559: glue2esp_linkoutput at glue-esp/lwip-esp.c line 301\r\n0x40223787: new_linkoutput at glue-lwip/lwip-git.c line 272\r\n0x40100648: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x4022cb94: ip4_output_if_opt_src at core/ipv4/ip4.c line 1764\r\n0x40223559: glue2esp_linkoutput at glue-esp/lwip-esp.c line 301\r\n0x40223787: new_linkoutput at glue-lwip/lwip-git.c line 272\r\n0x40223be2: ethernet_output at netif/ethernet.c line 312\r\n0x4010107e: umm_free_core(umm_heap_context_t*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\umm_malloc\\umm_malloc.cpp line 642\r\n0x40100c04: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 167\r\n0x40100648: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40100b40: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 138\r\n0x402176d3: Twi::WAIT_CLOCK_STRETCH() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/PolledTimeout.h line 130\r\n0x40217974: Twi::read_bit() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 336\r\n0x40217b48: Twi::writeTo(unsigned char, unsigned char*, unsigned int, unsigned char) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 368\r\n0x4021347c: HardwareSerial::write(unsigned char const*, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/HardwareSerial.h line 193\r\n0x40217b48: Twi::writeTo(unsigned char, unsigned char*, unsigned int, unsigned char) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 368\r\n0x4021347c: HardwareSerial::write(unsigned char const*, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/HardwareSerial.h line 193\r\n0x40212c64: u8x8_byte_arduino_hw_i2c(u8x8_t*, uint8_t, uint8_t, void*) at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\U8g2\\src\\U8x8lib.cpp line 1316\r\n0x40202606: u8x8_cad_ssd13xx_fast_i2c at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\U8g2\\src\\clib\\u8x8_cad.c line 582\r\n0x40212c48: u8x8_byte_arduino_hw_i2c(u8x8_t*, uint8_t, uint8_t, void*) at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\U8g2\\src\\U8x8lib.cpp line 1316\r\n0x402035dc: u8x8_byte_EndTransfer at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\U8g2\\src\\clib\\u8x8_byte.c line 61\r\n0x4021347c: HardwareSerial::write(unsigned char const*, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/HardwareSerial.h line 193\r\n0x40100c04: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 167\r\n0x40100c04: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 167\r\n0x40100b40: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 138\r\n0x40100a4c: micros() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring.cpp line 181\r\n0x40100110: SoftwareSerial::preciseDelay() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\libraries\\SoftwareSerial\\src/SoftwareSerial.h line 246\r\n0x4021790d: Twi::write_bit(bool) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 325\r\n0x4021787d: Twi::write_stop() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 304\r\n0x40217b01: Twi::readFrom(unsigned char, unsigned char*, unsigned int, unsigned char) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 433\r\n0x4021278c: TwoWire::requestFrom(unsigned char, unsigned int, bool) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\libraries\\Wire\\Wire.cpp line 129\r\n0x402127c0: TwoWire::requestFrom(unsigned char, unsigned char, unsigned char) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\libraries\\Wire\\Wire.cpp line 137\r\n0x40212966: SensirionI2CCommunication::receiveFrame(unsigned char, unsigned int, SensirionI2CRxFrame&, TwoWire&, CrcPolynomial) at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\Sensirion_Core\\src\\SensirionI2CCommunication.cpp line 101\r\n0x40216c68: __esp_suspend() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/core_esp8266_features.h line 64\r\n0x40216db9: __esp_delay(unsigned long) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 161\r\n0x40216e2e: esp_try_delay(unsigned int, unsigned int, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 182\r\n0x40217d90: __delay(unsigned long) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/coredecls.h line 69\r\n0x402037a7: updateTVOC() at C:\\Users\\Ken\\Documents\\Arduino\\sketch_jan24a/sketch_jan24a.ino line 184\r\n0x40204a84: loop() at C:\\Users\\Ken\\Documents\\Arduino\\sketch_jan24a/sketch_jan24a.ino line 149\r\n```\r\n\r\n```\r\nException 0: Illegal instruction\r\nPC: 0x40219d04: circular_queue ::available() const at c:\\users\\ken\\appdata\\local\\arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec\\xtensa-lx106-elf\\include\\c++\\10.3.0\\bits/atomic_base.h line 420\r\nEXCVADDR: 0x00000000\r\n\r\nDecoding stack results\r\n0x40100c04: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 167\r\n0x40100b40: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 138\r\n0x40100c04: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 167\r\n0x40100648: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40100b40: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 138\r\n0x40228c85: sys_timeout_abs at core/timeouts.c line 189\r\n0x401000ab: app_entry_redefinable() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 386\r\n0x40100648: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40216e54: esp_yield() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 144\r\n0x40218864: uart_write(uart_t*, char const*, size_t) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\uart.cpp line 547\r\n0x40218864: uart_write(uart_t*, char const*, size_t) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\uart.cpp line 547\r\n0x40214744: Print::print(__FlashStringHelper const*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\Print.cpp line 106\r\n0x4021347c: HardwareSerial::write(unsigned char const*, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/HardwareSerial.h line 193\r\n0x40214854: Print::printNumber (unsigned long, unsigned char) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\Print.cpp line 262\r\n0x4021e804: utoa at /workdir/repo/newlib/newlib/libc/stdlib/utoa.c line 74\r\n0x4021347c: HardwareSerial::write(unsigned char const*, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/HardwareSerial.h line 193\r\n0x40101400: malloc(size_t) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\umm_malloc\\umm_malloc.cpp line 912\r\n0x40213661: IPAddress::printTo(Print&) const at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/IPAddress.h line 165\r\n0x4010107e: umm_free_core(umm_heap_context_t*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\umm_malloc\\umm_malloc.cpp line 642\r\n0x4021347c: HardwareSerial::write(unsigned char const*, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/HardwareSerial.h line 193\r\n0x40208a35: WiFiManager::DEBUG_WM__FlashStringHelper const*, IPAddress>(WiFiManager::wm_debuglevel_t, __FlashStringHelper const*, IPAddress) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/IPAddress.h line 88\r\n0x4021347c: HardwareSerial::write(unsigned char const*, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/HardwareSerial.h line 193\r\n0x402157a1: String::copy(char const*, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\WString.cpp line 258\r\n0x40215971: String::operator=(char const*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\WString.cpp line 303\r\n0x40218864: uart_write(uart_t*, char const*, size_t) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\uart.cpp line 547\r\n0x402159f2: String::String(unsigned long, unsigned char) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\WString.cpp line 82\r\n0x4021347c: HardwareSerial::write(unsigned char const*, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/HardwareSerial.h line 193\r\n0x40208a86: WiFiManager::DEBUG_WM__FlashStringHelper const*, IPAddress>(__FlashStringHelper const*, IPAddress) at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\WiFiManager\\WiFiManager.cpp line 3281\r\n0x402064d4: String::operator!=(char const*) const at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/WString.h line 234\r\n0x4010107e: umm_free_core(umm_heap_context_t*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\umm_malloc\\umm_malloc.cpp line 642\r\n0x4010107e: umm_free_core(umm_heap_context_t*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\umm_malloc\\umm_malloc.cpp line 642\r\n0x40100c04: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 167\r\n0x40100648: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40100c04: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 167\r\n0x40100c04: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 167\r\n0x40100b40: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 138\r\n0x402178c8: Twi::write_bit(bool) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 313\r\n0x402179cb: Twi::write_byte(unsigned char) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 347\r\n0x40217b48: Twi::writeTo(unsigned char, unsigned char*, unsigned int, unsigned char) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 368\r\n0x4021347c: HardwareSerial::write(unsigned char const*, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/HardwareSerial.h line 193\r\n0x40100648: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x402127ec: TwoWire::beginTransmission(unsigned char) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\libraries\\Wire\\Wire.cpp line 158\r\n0x4021347c: HardwareSerial::write(unsigned char const*, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/HardwareSerial.h line 193\r\n0x40100c04: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 167\r\n0x40100c04: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 167\r\n0x40100b40: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 138\r\n0x40100110: SoftwareSerial::preciseDelay() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\libraries\\SoftwareSerial\\src/SoftwareSerial.h line 246\r\n0x4021790d: Twi::write_bit(bool) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 325\r\n0x4021787d: Twi::write_stop() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 304\r\n0x40217b01: Twi::readFrom(unsigned char, unsigned char*, unsigned int, unsigned char) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 433\r\n0x4021278c: TwoWire::requestFrom(unsigned char, unsigned int, bool) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\libraries\\Wire\\Wire.cpp line 129\r\n0x402127c0: TwoWire::requestFrom(unsigned char, unsigned char, unsigned char) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\libraries\\Wire\\Wire.cpp line 137\r\n0x40212966: SensirionI2CCommunication::receiveFrame(unsigned char, unsigned int, SensirionI2CRxFrame&, TwoWire&, CrcPolynomial) at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\Sensirion_Core\\src\\SensirionI2CCommunication.cpp line 101\r\n0x40216c68: __esp_suspend() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/core_esp8266_features.h line 64\r\n0x40216db9: __esp_delay(unsigned long) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 161\r\n0x40216e2e: esp_try_delay(unsigned int, unsigned int, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 182\r\n0x40217d90: __delay(unsigned long) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/coredecls.h line 69\r\n0x402037a7: updateTVOC() at C:\\Users\\Ken\\Documents\\Arduino\\sketch_jan24a/sketch_jan24a.ino line 184\r\n0x40204a84: loop() at C:\\Users\\Ken\\Documents\\Arduino\\sketch_jan24a/sketch_jan24a.ino line 149\r\n```\r\n\r\n```\r\nException 0: Illegal instruction\r\nPC: 0x40219d04: circular_queue ::available() const at c:\\users\\ken\\appdata\\local\\arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec\\xtensa-lx106-elf\\include\\c++\\10.3.0\\bits/atomic_base.h line 420\r\nEXCVADDR: 0x00000000\r\n\r\nDecoding stack results\r\n0x40100c04: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 167\r\n0x40100648: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40100b40: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 138\r\n0x40100b40: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 138\r\n0x40100648: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40100b40: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 138\r\n0x40228c85: sys_timeout_abs at core/timeouts.c line 189\r\n0x40216bfa: loop_task(ETSEvent*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 273\r\n0x401000ab: app_entry_redefinable() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 386\r\n0x40100648: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40100648: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x4020f304: ESP8266WiFiSTAClass::status() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\libraries\\ESP8266WiFi\\src\\ESP8266WiFiSTA.cpp line 558\r\n0x40218864: uart_write(uart_t*, char const*, size_t) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\uart.cpp line 547\r\n0x40218864: uart_write(uart_t*, char const*, size_t) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\uart.cpp line 547\r\n0x40214744: Print::print(__FlashStringHelper const*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\Print.cpp line 106\r\n0x4021347c: HardwareSerial::write(unsigned char const*, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/HardwareSerial.h line 193\r\n0x40214854: Print::printNumber (unsigned long, unsigned char) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\Print.cpp line 262\r\n0x40101400: malloc(size_t) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\umm_malloc\\umm_malloc.cpp line 912\r\n0x40213661: IPAddress::printTo(Print&) const at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/IPAddress.h line 165\r\n0x4010107e: umm_free_core(umm_heap_context_t*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\umm_malloc\\umm_malloc.cpp line 642\r\n0x4021347c: HardwareSerial::write(unsigned char const*, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/HardwareSerial.h line 193\r\n0x40208a35: WiFiManager::DEBUG_WM__FlashStringHelper const*, IPAddress>(WiFiManager::wm_debuglevel_t, __FlashStringHelper const*, IPAddress) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/IPAddress.h line 88\r\n0x4021347c: HardwareSerial::write(unsigned char const*, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/HardwareSerial.h line 193\r\n0x402157a1: String::copy(char const*, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\WString.cpp line 258\r\n0x40215971: String::operator=(char const*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\WString.cpp line 303\r\n0x40218864: uart_write(uart_t*, char const*, size_t) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\uart.cpp line 547\r\n0x402159f2: String::String(unsigned long, unsigned char) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\WString.cpp line 82\r\n0x4021347c: HardwareSerial::write(unsigned char const*, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/HardwareSerial.h line 193\r\n0x40208a86: WiFiManager::DEBUG_WM__FlashStringHelper const*, IPAddress>(__FlashStringHelper const*, IPAddress) at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\WiFiManager\\WiFiManager.cpp line 3281\r\n0x402064d4: String::operator!=(char const*) const at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/WString.h line 234\r\n0x4010107e: umm_free_core(umm_heap_context_t*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\umm_malloc\\umm_malloc.cpp line 642\r\n0x4010107e: umm_free_core(umm_heap_context_t*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\umm_malloc\\umm_malloc.cpp line 642\r\n0x40100648: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40100648: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40217736: Twi::WAIT_CLOCK_STRETCH() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 167\r\n0x4021790d: Twi::write_bit(bool) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 325\r\n0x40217b48: Twi::writeTo(unsigned char, unsigned char*, unsigned int, unsigned char) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 368\r\n0x4021347c: HardwareSerial::write(unsigned char const*, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/HardwareSerial.h line 193\r\n0x40100648: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40100c04: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 167\r\n0x40100b40: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 138\r\n0x402176e2: Twi::WAIT_CLOCK_STRETCH() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/core_esp8266_features.h line 65\r\n0x40100648: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40101403: malloc(size_t) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\umm_malloc\\umm_malloc.cpp line 912\r\n0x40101400: malloc(size_t) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\umm_malloc\\umm_malloc.cpp line 912\r\n0x4021787d: Twi::write_stop() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 304\r\n0x40217bb1: Twi::writeTo(unsigned char, unsigned char*, unsigned int, unsigned char) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 393\r\n0x40212662: TwoWire::write(unsigned char const*, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\libraries\\Wire\\Wire.cpp line 209\r\n0x40212834: TwoWire::endTransmission(unsigned char) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\libraries\\Wire\\Wire.cpp line 172\r\n0x40212d09: u8x8_byte_arduino_hw_i2c(u8x8_t*, uint8_t, uint8_t, void*) at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\U8g2\\src\\U8x8lib.cpp line 1354\r\n0x40202619: u8x8_cad_ssd13xx_fast_i2c at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\U8g2\\src\\clib\\u8x8_cad.c line 586\r\n0x40202780: u8x8_d_ssd1306_sh1106_generic at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\U8g2\\src\\clib\\u8x8_d_ssd1306_128x64_noname.c line 327\r\n0x402027b4: u8x8_d_sh1106_128x64_noname at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\U8g2\\src\\clib\\u8x8_d_ssd1306_128x64_noname.c line 481\r\n0x4020364c: u8x8_DrawTile at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\U8g2\\src\\clib\\u8x8_display.c line 89\r\n0x40218864: uart_write(uart_t*, char const*, size_t) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\uart.cpp line 547\r\n0x402019b5: u8g2_send_buffer at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\U8g2\\src\\clib\\u8g2_buffer.c line 89\r\n0x40216c68: __esp_suspend() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/core_esp8266_features.h line 64\r\n0x40216db9: __esp_delay(unsigned long) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 161\r\n0x40216e2e: esp_try_delay(unsigned int, unsigned int, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 182\r\n0x40217d90: __delay(unsigned long) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/coredecls.h line 69\r\n0x40204f20: AirGradient::getCO2_Raw() at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\AirGradient_Air_Quality_Sensor\\AirGradient.cpp line 691\r\n0x402038f8: updateCo2() at C:\\Users\\Ken\\Documents\\Arduino\\sketch_jan24a/sketch_jan24a.ino line 206\r\n0x40204a8a: loop() at C:\\Users\\Ken\\Documents\\Arduino\\sketch_jan24a/sketch_jan24a.ino line 151\r\n```\r\n\r\n```\r\nException 0: Illegal instruction\r\nPC: 0x40219d04: circular_queue ::available() const at c:\\users\\ken\\appdata\\local\\arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec\\xtensa-lx106-elf\\include\\c++\\10.3.0\\bits/atomic_base.h line 420\r\nEXCVADDR: 0x00000000\r\n\r\nDecoding stack results\r\n0x40100648: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40100c04: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 167\r\n0x40100648: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40100b40: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 138\r\n0x40100648: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40100b40: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 138\r\n0x40100b40: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 138\r\n0x40228c85: sys_timeout_abs at core/timeouts.c line 189\r\n0x40216bfa: loop_task(ETSEvent*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 273\r\n0x401000ab: app_entry_redefinable() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 386\r\n0x40100648: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40100648: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40100a22: millis() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring.cpp line 176\r\n0x40215818: String::String(char const*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\WString.cpp line 125\r\n0x40215818: String::String(char const*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\WString.cpp line 125\r\n0x40218864: uart_write(uart_t*, char const*, size_t) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\uart.cpp line 547\r\n0x40218864: uart_write(uart_t*, char const*, size_t) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\uart.cpp line 547\r\n0x40214744: Print::print(__FlashStringHelper const*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\Print.cpp line 106\r\n0x4021347c: HardwareSerial::write(unsigned char const*, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/HardwareSerial.h line 193\r\n0x40214854: Print::printNumber (unsigned long, unsigned char) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\Print.cpp line 262\r\n0x40101400: malloc(size_t) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\umm_malloc\\umm_malloc.cpp line 912\r\n0x40213661: IPAddress::printTo(Print&) const at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/IPAddress.h line 165\r\n0x4010107e: umm_free_core(umm_heap_context_t*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\umm_malloc\\umm_malloc.cpp line 642\r\n0x4021347c: HardwareSerial::write(unsigned char const*, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/HardwareSerial.h line 193\r\n0x40208a35: WiFiManager::DEBUG_WM__FlashStringHelper const*, IPAddress>(WiFiManager::wm_debuglevel_t, __FlashStringHelper const*, IPAddress) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/IPAddress.h line 88\r\n0x4021347c: HardwareSerial::write(unsigned char const*, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/HardwareSerial.h line 193\r\n0x402157a1: String::copy(char const*, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\WString.cpp line 258\r\n0x40215971: String::operator=(char const*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\WString.cpp line 303\r\n0x40218864: uart_write(uart_t*, char const*, size_t) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\uart.cpp line 547\r\n0x402159f2: String::String(unsigned long, unsigned char) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\WString.cpp line 82\r\n0x4021347c: HardwareSerial::write(unsigned char const*, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/HardwareSerial.h line 193\r\n0x40208a86: WiFiManager::DEBUG_WM__FlashStringHelper const*, IPAddress>(__FlashStringHelper const*, IPAddress) at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\WiFiManager\\WiFiManager.cpp line 3281\r\n0x402064d4: String::operator!=(char const*) const at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/WString.h line 234\r\n0x4010107e: umm_free_core(umm_heap_context_t*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\umm_malloc\\umm_malloc.cpp line 642\r\n0x4010107e: umm_free_core(umm_heap_context_t*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\umm_malloc\\umm_malloc.cpp line 642\r\n0x40100648: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40203e0c: connectToWifi() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/WString.h line 115\r\n0x40100648: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x4020349c: u8g2_ll_hvline_vertical_top_lsb at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\U8g2\\src\\clib\\u8g2_ll_hvline.c line 97\r\n0x40201d7e: u8g2_font_decode_len at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\U8g2\\src\\clib\\u8g2_font.c line 459\r\n0x40100648: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40100c04: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 167\r\n0x40217734: Twi::WAIT_CLOCK_STRETCH() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 167\r\n0x4021790d: Twi::write_bit(bool) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 325\r\n0x40217b48: Twi::writeTo(unsigned char, unsigned char*, unsigned int, unsigned char) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 368\r\n0x4021787d: Twi::write_stop() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 304\r\n0x40217bb1: Twi::writeTo(unsigned char, unsigned char*, unsigned int, unsigned char) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 393\r\n0x40212662: TwoWire::write(unsigned char const*, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\libraries\\Wire\\Wire.cpp line 209\r\n0x40212834: TwoWire::endTransmission(unsigned char) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\libraries\\Wire\\Wire.cpp line 172\r\n0x40212d09: u8x8_byte_arduino_hw_i2c(u8x8_t*, uint8_t, uint8_t, void*) at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\U8g2\\src\\U8x8lib.cpp line 1354\r\n0x40202619: u8x8_cad_ssd13xx_fast_i2c at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\U8g2\\src\\clib\\u8x8_cad.c line 586\r\n0x4021790d: Twi::write_bit(bool) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 325\r\n0x4021787d: Twi::write_stop() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 304\r\n0x40217b01: Twi::readFrom(unsigned char, unsigned char*, unsigned int, unsigned char) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 433\r\n0x4021278c: TwoWire::requestFrom(unsigned char, unsigned int, bool) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\libraries\\Wire\\Wire.cpp line 129\r\n0x402127c0: TwoWire::requestFrom(unsigned char, unsigned char, unsigned char) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\libraries\\Wire\\Wire.cpp line 137\r\n0x40216c68: __esp_suspend() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/core_esp8266_features.h line 64\r\n0x40216db9: __esp_delay(unsigned long) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 161\r\n0x40216e2e: esp_try_delay(unsigned int, unsigned int, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 182\r\n0x40217d90: __delay(unsigned long) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/coredecls.h line 69\r\n0x402037a7: updateTVOC() at C:\\Users\\Ken\\Documents\\Arduino\\sketch_jan24a/sketch_jan24a.ino line 184\r\n0x40204a84: loop() at C:\\Users\\Ken\\Documents\\Arduino\\sketch_jan24a/sketch_jan24a.ino line 149\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/esp8266/Arduino/issues/8830/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "is_pull_request": false,
        "timeline_events": [
            {
                "event": "commented",
                "actor": "mcspr",
                "created_at": "2023-01-26T12:04:18Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "ken830",
                "created_at": "2023-01-26T12:13:18Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "mcspr",
                "created_at": "2023-01-26T12:52:25Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "ken830",
                "created_at": "2023-01-26T13:03:51Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "mcspr",
                "created_at": "2023-01-26T19:20:25Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "ken830",
                "created_at": "2023-01-26T20:27:16Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "mentioned",
                "actor": "mcspr",
                "created_at": "2023-01-26T20:27:16Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "subscribed",
                "actor": "mcspr",
                "created_at": "2023-01-26T20:27:16Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "mhightower83",
                "created_at": "2023-01-26T23:43:50Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "ken830",
                "created_at": "2023-01-27T01:15:09Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "mhightower83",
                "created_at": "2023-01-27T03:33:29Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "ken830",
                "created_at": "2023-01-27T03:45:49Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "mhightower83",
                "created_at": "2023-01-27T04:46:41Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "mcspr",
                "created_at": "2023-01-27T11:07:10Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "mcspr",
                "created_at": "2023-01-27T12:18:42Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "ken830",
                "created_at": "2023-01-27T12:28:32Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "mentioned",
                "actor": "mcspr",
                "created_at": "2023-01-27T12:28:33Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "subscribed",
                "actor": "mcspr",
                "created_at": "2023-01-27T12:28:33Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "mentioned",
                "actor": "mhightower83",
                "created_at": "2023-01-27T12:28:33Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "subscribed",
                "actor": "mhightower83",
                "created_at": "2023-01-27T12:28:33Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "mcspr",
                "created_at": "2023-01-27T13:45:23Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "mhightower83",
                "created_at": "2023-01-27T15:43:31Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "referenced",
                "actor": "mcspr",
                "created_at": "2023-01-27T18:38:16Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "cross-referenced",
                "actor": "mcspr",
                "created_at": "2023-01-27T18:45:37Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "ken830",
                "created_at": "2023-01-28T06:35:26Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "mhightower83",
                "created_at": "2023-01-28T15:17:07Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "rochi7",
                "created_at": "2023-01-28T20:58:15Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "ken830",
                "created_at": "2023-01-28T21:20:25Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "ken830",
                "created_at": "2023-01-28T21:31:39Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "mhightower83",
                "created_at": "2023-01-28T21:52:27Z",
                "assignee": null,
                "label": null
            }
        ],
        "comments_data": [
            {
                "id": 1404907713,
                "user": "mcspr",
                "body": "> Exception 0: Illegal instruction\r\nPC: 0x40219d04: circular_queue ::available() const at c:\\users\\ken\\appdata\\local\\arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec\\xtensa-lx106-elf\\include\\c++\\10.3.0\\bits/atomic_base.h line 420\r\nEXCVADDR: 0x00000000\r\n> ...\r\n> 0x40100110: SoftwareSerial::preciseDelay() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\libraries\\SoftwareSerial\\src/SoftwareSerial.h line 246\r\n\r\n*Likely* something to do with SoftwareSerial; 3.0.2 ships with 6.12.7, 3.1.x is 7.0.0\r\nhttps://github.com/plerup/espsoftwareserial/search?q=circular_queue\r\n\r\nAnd, unless I am misreading the EXCVADDR, looks like `this` of that queue is pointing at nil instead of an object (for whatever reason)",
                "created_at": "2023-01-26T12:04:18Z",
                "updated_at": "2023-01-26T12:04:18Z",
                "author_association": "COLLABORATOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1404907713/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1404917097,
                "user": "ken830",
                "body": "Hmm... That's a good clue.\r\n\r\nBefore getting the ESP Exception Decoder working in the Arduino IDE, I tried the esp8266_exception_decoder monitor filter with what I thought wasn't so helpful output, but I did notice it mentioned SoftwareSerial. I just didn't know what to make of it, but maybe it was more meaningful than I thought?\r\n\r\n```\r\nException (0):\r\nepc1=0x402150d0 epc2=0x00000000 epc3=0x00000000 excvaddr=0x00000000 depc=0x00000000\r\n\r\nIllegal instruction\r\n  epc1=0x402150d0 in circular_queue<unsigned int, SoftwareSerial*>::available() const at ??:?\r\n\r\n>>>stack>>>\r\n\r\nctx: sys\r\nsp: 3ffffbc0 end: 3fffffb0 offset: 0190\r\n3ffffd50:  401030b3 3ffecfe0 3ffecfb8 056e5a89\r\n3ffffd60:  00007fff 0585c417 3ffed8c4 40103290\r\n3ffffd70:  3ffe9e5c 00000000 00004000 40103290\r\n3ffffd80:  00007fff 0585c417 4010374a c0037035\r\n3ffffd90:  00000000 00000001 0000000e 40100768\r\n3ffffda0:  00000020 00004208 00000000 00000001\r\n3ffffdb0:  3ffe9e5c 00004208 00000000 00000022\r\n3ffffdc0:  3fffc200 401006a4 3fffc258 4000050c\r\n3ffffdd0:  40004748 00000030 00000020 ffffffff\r\n3ffffde0:  40105833 04000002 00000000 00000001\r\n3ffffdf0:  fbf8ffff 04000002 3feffe00 00000100\r\n3ffffe00:  60000200 00eaa101 fffffffe 00000008\r\n3ffffe10:  00000000 00000000 60000600 00000030\r\n3ffffe20:  0000000c 00000000 00000020 00000022\r\n3ffffe30:  4000050c 401006a4 3fffc258 4000050c  \r\n3ffffe40:  40240b26 00000030 00000011 ffffffff\r\n3ffffe50:  00000002 00000002 3ffef446 ffffffff\r\n3ffffe60:  3ffee748 40241018 00000000 bfffffff\r\n3ffffe70:  ffffffff 3fffc6fc 3ffe93b4 00000008\r\n3ffffe80:  3ffee770 058a5a57 60000600 00000030\r\n3ffffe90:  40101ed7 2c9f0300 3fffc228 40106059\r\n3ffffea0:  4000050c 401006a4 3fffc258 4000050c\r\n3ffffeb0:  40000f68 00000030 00000011 ffffffff\r\n3ffffec0:  40000f58 00000000 00000020 00000000\r\n3ffffed0:  40101d76 40241018 3ffe93b4 bfffffff\r\n3ffffee0:  4023dcf1 3ffef430 3ffe93b4 3fffdab0\r\n3ffffef0:  00000000 3fffdcb0 3ffee790 00000030\r\n3fffff00:  000000b0 00000016 3ffe85ec 40239084\r\n3fffff10:  00000008 00000000 f7ffffff 60000600\r\n3fffff20:  00000008 00000000 f7ffffff 40223721\r\n3fffff30:  40240b54 00000008 3ffee770 058a5a57\r\n3fffff40:  40240f66 058a2de7 60000600 4021efd9\r\n3fffff50:  40243294 3ffe93b4 4024102b 3ffe92fc\r\n3fffff60:  3ffee770 01bb1298 3ffee770 60000600\r\n3fffff70:  40248211 3ffe92fc 3ffee770 058a2de7\r\n3fffff80:  40248256 3fffdab0 00000000 3fffdcb0\r\n3fffff90:  3ffee798 40000f65 3fffdab0 00000000\r\n3fffffa0:  40000f49 40000f49 3fffdab0 40000f49\r\n<<<stack<<<\r\n\r\n0x401030b3 in rcReachRetryLimit at ??:?\r\n0x40103290 in rcReachRetryLimit at ??:?\r\n0x40103290 in rcReachRetryLimit at ??:?\r\n0x4010374a in wDev_ProcessFiq at ??:?\r\n0x40100768 in interrupt_handler at ??:?\r\n0x401006a4 in interrupt_handler at ??:?\r\n0x40105833 in Cache_Read_Enable_New at ??:?\r\n0x401006a4 in interrupt_handler at ??:?\r\n0x40240b26 in pm_set_sleep_time at ??:?\r\n0x40241018 in pm_get_sleep_type at ??:?\r\n0x40101ed7 in ppProcessTxQ at ??:?\r\n0x40106059 in ets_timer_disarm at ??:?\r\n0x401006a4 in interrupt_handler at ??:?\r\n0x40101d76 in fix_cache_bug at ??:?\r\n0x40241018 in pm_get_sleep_type at ??:?\r\n0x4023dcf1 in register_chipv6_phy at ??:?\r\n0x40239084 in pm_wakeup_init at ??:?\r\n0x40223721 in sys_timeout_abs at /local/users/gauchard/arduino/arduino_esp8266/origin/tools/sdk/lwip2/builder/lwip2-src/src/core/timeouts.c:189\r\n0x40240b54 in pm_set_sleep_time at ??:?\r\n0x40240f66 in pm_get_sleep_type at ??:?\r\n0x4021efd9 in memp_free at /local/users/gauchard/arduino/arduino_esp8266/origin/tools/sdk/lwip2/builder/lwip2-src/src/core/memp.c:447\r\n0x40243294 in pp_noise_test at ??:?\r\n0x4024102b in pm_get_sleep_type at ??:?\r\n0x40248211 in ets_timer_handler_isr at ??:?\r\n0x40248256 in ets_timer_handler_isr at ??:?\r\n```",
                "created_at": "2023-01-26T12:13:18Z",
                "updated_at": "2023-01-26T12:13:18Z",
                "author_association": "NONE",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1404917097/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1404963150,
                "user": "mcspr",
                "body": "For the above, see https://docs.platformio.org/en/latest/projectconf/build_configurations.html\r\nWe need `-g` in `build_flags` or `build_type = debug` (which does that for us) for decoder to work",
                "created_at": "2023-01-26T12:52:25Z",
                "updated_at": "2023-01-26T12:52:25Z",
                "author_association": "COLLABORATOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1404963150/reactions",
                    "total_count": 1,
                    "+1": 1,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1404975818,
                "user": "ken830",
                "body": "> And, unless I am misreading the EXCVADDR, looks like `this` of that queue is pointing at nil instead of an object (for whatever reason)\r\n\r\nThis observation of yours really struck me and I remember seeing warnings when compiling the sketch from AirGradient. And I _just_  noticed that I don't see those warnings when compiling the sketch recently with Core v3.0.2. \r\n\r\n#### Core v3.1.1\r\n```\r\nC:\\Users\\Ken\\Documents\\Arduino\\libraries\\AirGradient_Air_Quality_Sensor\\AirGradient.cpp: In member function 'TMP_RH AirGradient::returnError(TMP_RH_ErrorCode)':\r\nC:\\Users\\Ken\\Documents\\Arduino\\libraries\\AirGradient_Air_Quality_Sensor\\AirGradient.cpp:548:14: warning: converting to non-pointer type 'float' from NULL [-Wconversion-null]\r\n  548 |   result.t = NULL;\r\n      |              ^~~~\r\nC:\\Users\\Ken\\Documents\\Arduino\\libraries\\AirGradient_Air_Quality_Sensor\\AirGradient.cpp:549:15: warning: converting to non-pointer type 'int' from NULL [-Wconversion-null]\r\n  549 |   result.rh = NULL;\r\n      |               ^~~~\r\n. Variables and constants in RAM (global, static), used 33372 / 80192 bytes (41%)\r\n\u2551   SEGMENT  BYTES    DESCRIPTION\r\n\u2560\u2550\u2550 DATA     1516     initialized variables\r\n\u2560\u2550\u2550 RODATA   3832     constants       \r\n\u255a\u2550\u2550 BSS      28024    zeroed variables\r\n. Instruction RAM (IRAM_ATTR, ICACHE_RAM_ATTR), used 62695 / 65536 bytes (95%)\r\n\u2551   SEGMENT  BYTES    DESCRIPTION\r\n\u2560\u2550\u2550 ICACHE   32768    reserved space for flash instruction cache\r\n\u255a\u2550\u2550 IRAM     29927    code in IRAM    \r\n. Code in flash (default, ICACHE_FLASH_ATTR), used 355008 / 1048576 bytes (33%)\r\n\u2551   SEGMENT  BYTES    DESCRIPTION\r\n\u255a\u2550\u2550 IROM     355008   code in flash   \r\nesptool.py v3.0\r\nSerial port COM4\r\nConnecting....\r\nChip is ESP8266EX\r\nFeatures: WiFi\r\nCrystal is 26MHz\r\nMAC: 84:f3:eb:24:4b:d0\r\nUploading stub...\r\nRunning stub...\r\nStub running...\r\nChanging baud rate to 460800\r\nChanged.\r\nConfiguring flash size...\r\nAuto-detected Flash size: 4MB\r\nCompressed 394432 bytes to 280039...\r\nWriting at 0x00000000... (5 %)\r\nWriting at 0x00004000... (11 %)\r\nWriting at 0x00008000... (16 %)\r\nWriting at 0x0000c000... (22 %)\r\nWriting at 0x00010000... (27 %)\r\nWriting at 0x00014000... (33 %)\r\nWriting at 0x00018000... (38 %)\r\nWriting at 0x0001c000... (44 %)\r\nWriting at 0x00020000... (50 %)\r\nWriting at 0x00024000... (55 %)\r\nWriting at 0x00028000... (61 %)\r\nWriting at 0x0002c000... (66 %)\r\nWriting at 0x00030000... (72 %)\r\nWriting at 0x00034000... (77 %)\r\nWriting at 0x00038000... (83 %)\r\nWriting at 0x0003c000... (88 %)\r\nWriting at 0x00040000... (94 %)\r\nWriting at 0x00044000... (100 %)\r\nWrote 394432 bytes (280039 compressed) at 0x00000000 in 6.4 seconds (effective 495.1 kbit/s)...\r\nHash of data verified.\r\n\r\nLeaving...\r\nHard resetting via RTS pin...\r\n```\r\n\r\n#### Core v3.0.2\r\n```\r\nExecutable segment sizes:\r\nICACHE : 32768           - flash instruction cache \r\nIROM   : 353468          - code in flash         (default or ICACHE_FLASH_ATTR) \r\nIRAM   : 29585   / 32768 - code in IRAM          (IRAM_ATTR, ISRs...) \r\nDATA   : 1516  )         - initialized variables (global, static) in RAM/HEAP \r\nRODATA : 3840  ) / 81920 - constants             (global, static) in RAM/HEAP \r\nBSS    : 27904 )         - zeroed variables      (global, static) in RAM/HEAP \r\nSketch uses 388409 bytes (37%) of program storage space. Maximum is 1044464 bytes.\r\nGlobal variables use 33260 bytes (40%) of dynamic memory, leaving 48660 bytes for local variables. Maximum is 81920 bytes.\r\nesptool.py v3.0\r\nSerial port COM4\r\nConnecting....\r\nChip is ESP8266EX\r\nFeatures: WiFi\r\nCrystal is 26MHz\r\nMAC: 84:f3:eb:24:4b:d0\r\nUploading stub...\r\nRunning stub...\r\nStub running...\r\nChanging baud rate to 460800\r\nChanged.\r\nConfiguring flash size...\r\nAuto-detected Flash size: 4MB\r\nCompressed 392560 bytes to 277859...\r\nWriting at 0x00000000... (5 %)\r\nWriting at 0x00004000... (11 %)\r\nWriting at 0x00008000... (17 %)\r\nWriting at 0x0000c000... (23 %)\r\nWriting at 0x00010000... (29 %)\r\nWriting at 0x00014000... (35 %)\r\nWriting at 0x00018000... (41 %)\r\nWriting at 0x0001c000... (47 %)\r\nWriting at 0x00020000... (52 %)\r\nWriting at 0x00024000... (58 %)\r\nWriting at 0x00028000... (64 %)\r\nWriting at 0x0002c000... (70 %)\r\nWriting at 0x00030000... (76 %)\r\nWriting at 0x00034000... (82 %)\r\nWriting at 0x00038000... (88 %)\r\nWriting at 0x0003c000... (94 %)\r\nWriting at 0x00040000... (100 %)\r\nWrote 392560 bytes (277859 compressed) at 0x00000000 in 6.3 seconds (effective 497.5 kbit/s)...\r\nHash of data verified.\r\n\r\nLeaving...\r\nHard resetting via RTS pin...\r\n```\r\n\r\n####Here is the code snippet from AirGradient.cpp. This is part of the overall set of code that reads the temperature (TMP) and relative humidity (RH) from the sensor. I'm guessing this piece defines the values that are returned if the sensor reading results in an error.\r\n```\r\n546   TMP_RH AirGradient::returnError(TMP_RH_ErrorCode error) {\r\n547     TMP_RH result;\r\n548     result.t = NULL;\r\n549     result.rh = NULL;\r\n550   \r\n551     result.t_char[0] = 'N';\r\n552     result.t_char[1] = 'U';\r\n553     result.t_char[2] = 'L';\r\n554     result.t_char[3] = 'L';\r\n555   \r\n556     result.rh_char[0] = 'N';\r\n557     result.rh_char[1] = 'U';\r\n558     result.rh_char[2] = 'L';\r\n559     result.rh_char[3] = 'L';\r\n560   \r\n561     result.error = error;\r\n562     return result;\r\n}\r\n```\r\n\r\nI'm a HW engineer, so forgive me if I'm a bit dense here. I don't know why the two core versions would treat this code differently. And I can't really understand the problem. Is a float or int not able to take on the `NULL` value? Why is it converting it?\r\n\r\nAnd I'm not so sure this is related to the SoftwareSerial piece at all because the temperature/humidity sensor is on the i2c interface. This might be nothing.\r\n\r\nI'm working through the parts of code that use SoftwareSerial now and it's related to the PM2.5 and CO2 sensors.",
                "created_at": "2023-01-26T13:03:51Z",
                "updated_at": "2023-01-26T13:03:51Z",
                "author_association": "NONE",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1404975818/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1405488432,
                "user": "mcspr",
                "body": "Warning is unrelated to the error, you just need to use literal `0` instead of `NULL`\r\n(which is a pointer type, not a number! sometimes this is allowed - https://en.cppreference.com/w/cpp/language/implicit_conversion - sometimes this does bad things and should be avoided)\r\n\r\nArduino IDE 1.x and 2.x disable compiler warnings by default. Since #8495, we work around that, but looks like at least one of warnings was missed.\r\n\r\nIt is totally possible that the issue is not in SoftwareSerial, but we just happen to break its operation with something directly or indirectly related to how it is used in the code :shrug:",
                "created_at": "2023-01-26T19:20:25Z",
                "updated_at": "2023-01-26T19:20:25Z",
                "author_association": "COLLABORATOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1405488432/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1405609983,
                "user": "ken830",
                "body": "Thank you, @mcspr! I probably understood NULL was a pointer at some point during my un-grad studies over 20 years ago.\r\n\r\nBecause you mentioned:\r\n\r\n> For the above, see https://docs.platformio.org/en/latest/projectconf/build_configurations.html We need `-g` in `build_flags` or `build_type = debug` (which does that for us) for decoder to work\r\n\r\nI decided to see if the PlatformIO decoder would give me any additional clues and so I set `build_type = debug` and waited for an exception. When I didn't see an exception in over 15 minutes, I removed the `build_type` option (reverting back to `build_type = release` as a default, I assume), re-compiled, and it crashed several times within 15 minutes. That was my sanity-check that the exact same source code crashes frequently normally. I then immediately re-instated `build_type = debug` , re-compiled, and let it run over-night while I slept and now I find it **hasn't crashed at all in over 7 hours**, which gives me confidence to say that this debug build option \"fixes\" the issue the same way that moving down to Core v3.0.2 to work around the [#8811 ](https://github.com/esp8266/Arduino/issues/8811) issue also inadvertently \"fixed\" the issue the last time.\r\n\r\nAny clue as to what direction I need to head down to figure out how building with `build_type = debug` affects the behavior of the code? I would imagine it should minimally affect the code behavior, otherwise, it wouldn't be very useful in debugging purposes. And so with that premise, I'm hopeful this clue can really narrow-in on possible root causes.",
                "created_at": "2023-01-26T20:27:16Z",
                "updated_at": "2023-01-26T20:27:16Z",
                "author_association": "NONE",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1405609983/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1405820442,
                "user": "mhightower83",
                "body": "Exception 0 is often ICACHE code that is not cached at the time of access and the SPI bus is busy. The processor reads zero which is also defined as an illegal instruction.\r\n\r\nCan be caused by a missing IRAM_ATTR on the ISR or functions that it calls.\r\nAlso, inline code that fails to inline and lands as a function in ICACHE/flash can cause this problem.\r\n\r\n`0x40219d04` `atomic_base.h` line 420 is in ICACHE address space. I assume it is in an ICACHE function that is called by an ISR. If I am looking at the correct copy of `atomic_base.h` line 420, to me the macro `_GLIBCXX_ALWAYS_INLINE` implies that it should have been inlined. \r\n",
                "created_at": "2023-01-26T23:43:50Z",
                "updated_at": "2023-01-26T23:43:50Z",
                "author_association": "CONTRIBUTOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1405820442/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1405889403,
                "user": "ken830",
                "body": "I know that the issue first appeared when moving to Core v3.1.x. It is also mysteriously-resolved when compiling with `build_type = debug`. My board (with espressif8266 platform v 4.1.0 which includes the Core v3.1) is running crash-free for almost 12 hours now whereas it would crash within 5 minutes before.\r\n\r\nI can understand that it could crash if an ISR is missing the IRAM_ATTR attribute and an interrupt comes in causing the processor to access it from Flash when the SPI bus happens to be busy, but I don't see how that behavior could be different between the Core versions or the build_type flag?\r\n\r\nThe inline bit is interesting too but again, it looks like it is inline. Your comment about \"fails to inline\" -- Is that a thing? Is that just a suggestion to the compiler and it's not guaranteed? Could that be something the new Core version or build flag could affect?\r\n\r\nAt the time I captured those exceptions, I also captured the relevant section of atomic_base.h:\r\n\r\n```\r\n419      _GLIBCXX_ALWAYS_INLINE __int_type\r\n420      load(memory_order __m = memory_order_seq_cst) const noexcept\r\n421      {\r\n422\tmemory_order __b = __m & __memory_order_mask;\r\n423\t__glibcxx_assert(__b != memory_order_release);\r\n424\t__glibcxx_assert(__b != memory_order_acq_rel);\r\n```\r\nBecause I just looked at Arduino and ESP (or any microcontroller) for the first time just a few days ago, have almost no software background, and none of the AirGradient code is mine, I've asked AirGradient for help and was told they are contacting their technical person to see if he can help.",
                "created_at": "2023-01-27T01:15:09Z",
                "updated_at": "2023-01-27T01:15:09Z",
                "author_association": "NONE",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1405889403/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1405974903,
                "user": "mhightower83",
                "body": ">  Your comment about \"fails to inline\" \r\n\r\nAs I understand it `inline` is a suggestion to the compiler. It is not obligated to inline the code; however, with added attributes like `__attribute__((__always_inline__))` the inline should be forced. Regarding the `_GLIBCXX_ALWAYS_INLINE` macro, it appears to use this attribute, unless it is redefined by a build option. And yet the crashing code is not in IRAM. \r\n\r\n> It is also mysteriously-resolved when compiling with build_type = debug.\r\n\r\nMy only thought on this and the older version of the core working is code size changes and which code lands and stays in the cache changes. Some problems can be made worse by changing the cache size from 32K to 16K.\r\n",
                "created_at": "2023-01-27T03:33:29Z",
                "updated_at": "2023-01-27T03:33:29Z",
                "author_association": "CONTRIBUTOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1405974903/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1405980314,
                "user": "ken830",
                "body": "Looking at [https://github.com/esp8266/esp8266-wiki/wiki/Memory-Map](url), I see 0x4020_0000 is the beginning of SPI Flash mapped area. The D1 Mini has 4MB SPI Flash, so if my mental math serves me, that would be up to 0x403F_FFFF (22 bits). So, I see the exception occurs within that area. Is that indicative of anything? If the instructions of a function is indeed in IRAM, would the PC be pointing to there (0x4010_0000) instead? Or is this why you're saying that the crashing code is not in IRAM (the PC is pointing to Flash)?\r\n\r\nWhat about the case of a cached instruction? Would the PC in the exception dump still be pointing to the non-cached location?\r\n\r\n> My only thought on this and the older version of the core working is code size changes and which code lands and stays in the cache changes. Some problems can be made worse by changing the cache size from 32K to 16K.\r\n\r\nBut if that's the case, I would expect it to appear to be very temperamental. Like I could get code that works great with one version and not another, then grow the code a bit and then have it work horribly with the previously-good version and great with the previously-bad version, simply because of where things happen to land. But I'm not seeing that. With the several versions of code I've tested, it's always bad with the newer core versions (without the debug flag) -- to a varying degrees (some code crashes much more frequently).\r\n\r\nAnd when we are talking about where functions land, are we talking about at compile/build-time or at runtime? I only have a crude understanding of processor architecture (and certainly nothing modern), so sorry if dumb question, but instruction caching sounds like it should be a runtime thing, right? And the inlining and IRAM would be determined at build-time?",
                "created_at": "2023-01-27T03:45:49Z",
                "updated_at": "2023-01-27T03:45:49Z",
                "author_association": "NONE",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1405980314/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1406016378,
                "user": "mhightower83",
                "body": "I believe the cacheable address space is limited to 1MB for the ESP8266\r\nYes, the fact the crashing location is in flash/ICACHE. The executable flash address range starts at 0x4020000. An illegal instruction opcode is three bytes of zeros. When the SPI bus is busy and a cache miss cannot be loaded from flash, zeros are read for instructions. I think these hint toward being called from an Interrupts context when the SPI bus was busy.\r\n\r\n> where functions land,\r\n\r\nI was poorly referring to how the contents of the cache are always changing. The way the compiler and linker organize the code could change with small code changes. The timing of operations could alter the current cache contents between interrupts.\r\nThat said, it is hard to see how the debug build would be so solid. Then again if more calls were made to a piece of cacheable code that is also needed for an ISR that would help it work; however, it is hard to see why debug code would be making more calls to `circular_queue::available()`. I am probably not helping here.\r\n\r\nI cannot make out from the dump who is calling `circular_queue::available()`. I think this is what they call a leaf function it doesn't call any other functions so the caller's return address may be held in a register and never written to the stack.\r\n\r\nI have used this macro in leaf functions to force the compiler to save the return address on the stack. It contains no assembly, it lies to the compiler. Instructing it that we are going to clobber register \"a0\" so that it will save it.\r\n```cpp\r\n#define DEBUG_ESP_BACKTRACELOG_LEAF_FUNCTION(...) __asm__ __volatile__(\"\" ::: \"a0\", \"memory\")\r\n```\r\nYou would place the macro call at the beginning of the function to be sure register \"a0\" is saved as soon as possible.\r\n\r\nAnd the build define  `-fno-optimize-sibling-calls` can help push more call details to the stack.",
                "created_at": "2023-01-27T04:46:41Z",
                "updated_at": "2023-01-27T04:46:41Z",
                "author_association": "CONTRIBUTOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1406016378/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1406348231,
                "user": "mcspr",
                "body": "Just as a reminder, we also could compare built .elf files\r\n\r\n`SoftwareSerial::rxBitISR()` and `::rxBitSyncISR()` are interrupt handlers that explicitly call `available()`\r\nhttps://github.com/plerup/espsoftwareserial/blob/56d19bf5fe9b38cdd438e06e1396b4a341d86274/src/SoftwareSerial.cpp#L622-L658\r\nhttps://github.com/plerup/espsoftwareserial/blob/56d19bf5fe9b38cdd438e06e1396b4a341d86274/src/SoftwareSerial.cpp#L251-L255\r\n\r\nAnd... nothing else, apparently. queue's `::pop_n()` and `::capacity()` indirectly use it, but not from ISR context.\r\n\r\n*edit:* Speaking of debug mode and build flags - IDE uses `-g` by default",
                "created_at": "2023-01-27T11:07:10Z",
                "updated_at": "2023-01-27T11:12:43Z",
                "author_association": "COLLABORATOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1406348231/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1406422541,
                "user": "mcspr",
                "body": "Aaand we also may run into a different code when using PlatformIO debug; it also replaces optimization mode with `-Og`, my mistake thinking these are the same as `-g`\r\nhttps://github.com/platformio/platformio-core/blob/5e8eb7709044862e93b3937c2e86b3111ffb3f71/platformio/builder/tools/piomisc.py#L87-L123\r\n\r\n```python\r\n# build_type = debug\r\n  'CCFLAGS': [ '-mlongcalls',\r\n               '-mtext-section-literals',\r\n               '-falign-functions=4',\r\n               '-U__STRICT_ANSI__',\r\n               '-ffunction-sections',\r\n               '-fdata-sections',\r\n               '-Wall',\r\n               '-Werror=return-type',\r\n               '-free',\r\n               '-fipa-pta',\r\n               '-Og',\r\n               '-g2',\r\n               '-ggdb2'],\r\n```\r\n\r\n```python\r\n# `build_flags = -g`\r\n  'CCFLAGS': [ '-g',\r\n               '-Os',\r\n               '-mlongcalls',\r\n               '-mtext-section-literals',\r\n               '-falign-functions=4',\r\n               '-U__STRICT_ANSI__',\r\n               '-ffunction-sections',\r\n               '-fdata-sections',\r\n               '-Wall',\r\n               '-Werror=return-type',\r\n               '-free',\r\n               '-fipa-pta'],\r\n```",
                "created_at": "2023-01-27T12:18:42Z",
                "updated_at": "2023-01-27T12:19:39Z",
                "author_association": "COLLABORATOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1406422541/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1406432202,
                "user": "ken830",
                "body": "Thanks @mhightower83 & @mcspr ! I might need a bit of time to fully digest what you two are telling me.\r\n\r\n\r\n> An illegal instruction opcode is three bytes of zeros. When the SPI bus is busy and a cache miss cannot be loaded from flash, zeros are read for instructions. I think these hint toward being called from an Interrupts context when the SPI bus was busy.\r\n\r\nOne question out of curiosity: Are three bytes of zeros the ONLY way to hit an Exception 0? Wouldn't any/all invalid opcode do the same?\r\n\r\n\r\n\r\n> I have used this macro in leaf functions to force the compiler to save the return address on the stack. It contains no assembly, it lies to the compiler. Instructing it that we are going to clobber register \"a0\" so that it will save it.\r\n> \r\n> ```c++\r\n> #define DEBUG_ESP_BACKTRACELOG_LEAF_FUNCTION(...) __asm__ __volatile__(\"\" ::: \"a0\", \"memory\")\r\n> ```\r\n> \r\n> You would place the macro call at the beginning of the function to be sure register \"a0\" is saved as soon as possible.\r\n> \r\n> And the build define `-fno-optimize-sibling-calls` can help push more call details to the stack.\r\n\r\nI understand the idea behind this to make the stack more informative when it dumps. I may have to try this, but I will probably need some hand-holding when the time comes. But I don't know the full mechanics of how this works. This looks like a parameterized macro substitution, but what source file does this go in? Somewhere in the SoftwareSerial code? I don't see `DEBUG_ESP_BACKTRACELOG_LEAF_FUNCTION` in any of the source?? I don't really need to understand though. At least maybe not now.\r\n\r\n\r\n\r\n> Just as a reminder, we also could compare built .elf files\r\n\r\nDoes this mean that comparing the ELF files would be able to tell us what is calling `circular_queue::available()` at the time of the exception?\r\n \r\n> `SoftwareSerial::rxBitISR()` and `::rxBitSyncISR()` are interrupt handlers that explicitly call `available()` https://github.com/plerup/espsoftwareserial/blob/56d19bf5fe9b38cdd438e06e1396b4a341d86274/src/SoftwareSerial.cpp#L622-L658 https://github.com/plerup/espsoftwareserial/blob/56d19bf5fe9b38cdd438e06e1396b4a341d86274/src/SoftwareSerial.cpp#L251-L255\r\n> \r\n> And... nothing else, apparently. queue's `::pop_n()` and `::capacity()` indirectly use it, but not from ISR context.\r\n\r\nSo, I think this means that if the working theory that an ISR is calling `circular_queue::available()` occasionally causing the exception, then it would have to be one of these two (`SoftwareSerial::rxBitISR()` and `::rxBitSyncISR()`) ISRs.\r\n\r\n\r\n> _edit:_ Speaking of debug mode and build flags - IDE uses `-g` by default\r\n\r\nWhat do you mean by \"IDE\"? The Arduino IDE? And on PlatformIO, I've only tried `build_type = debug`. Is `-g` flag identical?\r\nEDIT: Nevermind that last bit. I just saw your updated post with the the -g and build_type differences.\r\n\r\n\r\nUpdate on my end: Shortly after my last post here, I decided to try to used Core v3.1.1 and simply replace the SoftwareSerial v7.0.0 with 6.12.7. I did this in my Arduino IDE's library, recompiled, and the board is now running for nearly 5 hours with no exceptions. If this proves to be stable, then I will revert to 7.0.0 to confirm that it crashes. Hopefully, it does. Then, I can narrow down the exact release that triggers the exceptions. Now I'm wondering if I can get the two sets of code as close as possible to each other, would that make your ELF comparison idea much easier to pinpoint?",
                "created_at": "2023-01-27T12:28:32Z",
                "updated_at": "2023-01-27T12:28:32Z",
                "author_association": "NONE",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1406432202/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1406529682,
                "user": "mcspr",
                "body": "> Does this mean that comparing the ELF files would be able to tell us what is calling circular_queue::available() at the time of the exception?\r\n\r\nIf the problem is with related to inlining / not inlining, then yes. `-g` would simplify things by a lot by including debug info, too\r\n\r\n> Can be caused by a missing IRAM_ATTR on the ISR or functions that it calls.\r\n\r\nNo IRAM attribute\r\nhttps://github.com/plerup/espsoftwareserial/blob/bd2f6ce6a78d0c31b6978bcffb3c8379a5e4e2e4/src/circular_queue/circular_queue.h#L111\r\nPretty sure, even if it is attributed with IRAM, GCC still has a bug where template and attributes don't mix.\r\n\r\nSo, suppose circular\\_queue::available() is not inlined, should we just match it here and force IRAM section?\r\nhttps://github.com/esp8266/Arduino/blob/e25f9e95783d6de59d6b3b7b4ebc029428c9b539/tools/sdk/ld/eagle.app.v6.common.ld.h#L143-L145\r\n```diff\r\ndiff --git a/tools/sdk/ld/eagle.app.v6.common.ld.h b/tools/sdk/ld/eagle.app.v6.common.ld.h\r\nindex 051ce170..dd0a4cdd 100644\r\n--- a/tools/sdk/ld/eagle.app.v6.common.ld.h\r\n+++ b/tools/sdk/ld/eagle.app.v6.common.ld.h\r\n@@ -142,6 +142,8 @@ SECTIONS\r\n\r\n     /* all functional callers are placed in IRAM (including SPI/IRQ callbacks/etc) here */\r\n     *(.text._ZNKSt8functionIF*EE*)  /* std::function<any(...)>::operator()() const */\r\n+    *(.text._ZN14circular_queue*) /* SoftwareSerial ISR */\r\n+    *(.text._ZNK14circular_queue*) /* SoftwareSerial ISR */\r\n   } >iram1_0_seg :iram1_0_phdr\r\n\r\n   .irom0.text : ALIGN(4)\r\n```",
                "created_at": "2023-01-27T13:45:23Z",
                "updated_at": "2023-01-27T14:11:00Z",
                "author_association": "COLLABORATOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1406529682/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1406676274,
                "user": "mhightower83",
                "body": "> One question out of curiosity: Are three bytes of zeros the ONLY way to hit an Exception 0? Wouldn't any/all invalid opcode do the same?\r\n\r\nI would like to think so. \r\n\r\nI'll say yes based on page 84 of \"Xtensa\u00ae Instruction Set Architecture (ISA) Reference Manual\"\r\n> \"ILL or illegal instruction - Illegal instruction executed - The opcode ILL is guaranteed to always be an illegal\"\r\n\"Attempt to execute an illegal instruction or a legal instruction under illegal conditions\"\r\n\r\nAlso, there appears to be a narrow (two-byte) version of the `ILL.N` instruction as well.\r\n\r\n> DEBUG_ESP_BACKTRACELOG_LEAF_FUNCTION\r\n\r\nSorry for the confusion, that is the form I use it. It makes it easy to turn off and on for debug builds. \r\nAlternatively, you could do something like this in `circular_queue::available()`\r\n```cpp\r\nsize_t available() const\r\n{\r\n    __asm__ __volatile__(\"\" ::: \"a0\", \"memory\");\r\n    int avail = static_cast<int>(m_inPos.load() - m_outPos.load());\r\n    if (avail < 0) avail += m_bufSize;\r\n    return avail;\r\n}\r\n```\r\nOn entry to the function, register `a0` holds the caller's return address. \r\n`__asm__ __volatile__(...)`  is used to inject inline assembly instructions into `C/C++` code; however, in this case, the instructions list is empty, `\"\"`. And, `\"a0\"` is in the register clobber list field. This tells the compiler that the listed assembly instructions will destroy the contexts of register `a0`. The compiler pays no attention to the instructions we provide (or not providing) and takes action to protect the contents of the register we claim to be using/clobbering. (For now \"protect\" gets the register saved on the stack. A future compiler revision could take a different route.) `\"memory\"` tells the pesky optimizer, it should not move code before or after the line. At least that is my understanding, sometimes I miss or forget some of the nuances.",
                "created_at": "2023-01-27T15:43:31Z",
                "updated_at": "2023-01-27T17:54:20Z",
                "author_association": "CONTRIBUTOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1406676274/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1407309503,
                "user": "ken830",
                "body": "I see you're adding `circular_queue::available()` to IRAM in that commit. That's trying to force the linker to put it in IRAM? Well, in my testing below I saved the ELF files so how would we go about to compare/check if in-lining is at play here?\r\n\r\nMy testing using Core v3.1.1 with SoftwareSerial v6.12.7 completed 14h of uptime. I then reverted back to SoftwareSerial v7.0.0 and confirmed multiple Exception 0 crashes within 5 minutes. Finally, re-compiled with SoftwareSerial v6.17.1 (version immediately prior to current release) and confirmed running fine for over 4 hours. And finally, for my own sanity, I downloaded v7.0.0 source directly from the SoftwareSerial repository, compared to what I had pulled out to ensure they are the same (they were) and then re-built once again with v7.0.0 to re-verify that it indeed crashes every few minutes with the same Exception.\r\n\r\nCore v3.1.1 + SoftwareSerial v7.0.0 => Exception 0\r\nCore v3.1.1 + SoftwareSerial v6.17.1 => Working\r\nCore v3.1.1 + SoftwareSerial V6.12.7 => Working\r\n\r\nCore v3.0.2 + SoftwareSerial v7.0.0 => Exception 0\r\nCore v3.0.2 + SoftwareSerial v6.17.1 => Working\r\nCore v3.0.2 + SoftwareSerial V6.12.7 => Working\r\n\r\nCore v3.1.1 => Exception 0\r\nCore v3.1.1 + `build_type = debug` => Working\r\n\r\nCore v3.1.1 => Exception 0\r\nCore v3.0.2 => Working\r\nCore v3.0.0 => Working\r\n\r\nI zipped up the entire build folder from Arduino IDE's Temp folder. The ELF and other stuff are all in there.\r\n\r\n[arduino_build_822815_Core3.1.1_SoftwareSerial7.0.0_EXCEPTION0.zip](https://github.com/esp8266/Arduino/files/10524298/arduino_build_822815_Core3.1.1_SoftwareSerial7.0.0_EXCEPTION0.zip)\r\n[arduino_build_750952_Core3.1.1_SoftwareSerial6.17.1_WORKING.zip](https://github.com/esp8266/Arduino/files/10524299/arduino_build_750952_Core3.1.1_SoftwareSerial6.17.1_WORKING.zip)\r\n[arduino_build_401175_Core3.0.2_SoftwareSerial7.0.0_EXCEPTION0.zip](https://github.com/esp8266/Arduino/files/10524301/arduino_build_401175_Core3.0.2_SoftwareSerial7.0.0_EXCEPTION0.zip)\r\n[arduino_build_270738_Core3.0.2_SoftwareSerial6.17.1_WORKING.zip](https://github.com/esp8266/Arduino/files/10524300/arduino_build_270738_Core3.0.2_SoftwareSerial6.17.1_WORKING.zip)\r\n\r\n\r\n\r\n> > One question out of curiosity: Are three bytes of zeros the ONLY way to hit an Exception 0? Wouldn't any/all invalid opcode do the same?\r\n> \r\n> I would like to think so.\r\n> \r\n> I'll say yes based on page 84 of \"Xtensa\u00ae Instruction Set Architecture (ISA) Reference Manual\"\r\n> \r\n> > \"ILL or illegal instruction - Illegal instruction executed - The opcode ILL is guaranteed to always be an illegal\"\r\n> > \"Attempt to execute an illegal instruction or a legal instruction under illegal conditions\"\r\n\r\nYes, but I read this and wasn't sure:\r\n\r\n**Table 4\u201359. Instruction Exceptions under the Exception Option**\r\n| Condition | Description | Required Option & Vector|\r\n| ------------- | ------------- | ------------- | \r\n|Illegal instruction | Attempt to execute an illegal instruction or a legal instruction under illegal conditions |  Exception Option General vector|\r\n\r\nWhat could \"a legal instruction under illegal conditions\" be? Does this suggest that Exception 0 _could_ be encountered somehow besides ILL or ILL.N?\r\n\r\n> Sorry for the confusion, that is the form I use it. It makes it easy to turn off and on for debug builds. Alternatively, you could do something like this in `circular_queue::available()`\r\n> \r\n> ```c++\r\n> size_t available() const\r\n> {\r\n>     __asm__ __volatile__(\"\" ::: \"a0\", \"memory\");\r\n>     int avail = static_cast<int>(m_inPos.load() - m_outPos.load());\r\n>     if (avail < 0) avail += m_bufSize;\r\n>     return avail;\r\n> }\r\n> ```\r\n> \r\n> On entry to the function, register `a0` holds the caller's return address. `__asm__ __volatile__(...)` is used to inject inline assembly instructions into `C/C++` code; however, in this case, the instructions list is empty, `\"\"`. And, `\"a0\"` is in the register clobber list field. This tells the compiler that the listed assembly instructions will destroy the contexts of register `a0`. The compiler pays no attention to the instructions we provide (or not providing) and takes action to protect the contents of the register we claim to be using/clobbering. (For now \"protect\" gets the register saved on the stack. A future compiler revision could take a different route.) `\"memory\"` tells the pesky optimizer, it should not move code before or after the line. At least that is my understanding, sometimes I miss or forget some of the nuances.\r\n\r\nAhh... This is great. I re-installed core v3.1.1, replaced the code with yours, re-compiled, and ran. As usual, it crashes with exception 0 every few minutes the same way as before. Here're some stack dumps. One thing that I don't understand, but I guess it makes sense: The PC is now decoded to circular_queue.h line 119 (before, it was atomic_base.h line 420.\r\n\r\nHere's the snippet from circular_queue.h:\r\n```\r\n108    /*!\r\n109        @brief\tGet a snapshot number of elements that can be retrieved by pop.\r\n110    */\r\n111\t/*\r\n112    size_t available() const\r\n113    {\r\n114        int avail = static_cast<int>(m_inPos.load() - m_outPos.load());\r\n115        if (avail < 0) avail += m_bufSize;\r\n116        return avail;\r\n117    }\r\n118\t*/\r\n119\tsize_t available() const\r\n120\t{\r\n121    __asm__ __volatile__(\"\" ::: \"a0\", \"memory\");\r\n122    int avail = static_cast<int>(m_inPos.load() - m_outPos.load());\r\n123    if (avail < 0) avail += m_bufSize;\r\n124    return avail;\r\n125\t}\r\n```\r\n\r\n```\r\nException 0: Illegal instruction\r\nPC: 0x40219d50: circular_queue ::available() const at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\libraries\\SoftwareSerial\\src\\circular_queue/circular_queue.h line 119\r\nEXCVADDR: 0x00000000\r\n\r\nDecoding stack results\r\n0x40100648: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40100c04: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 167\r\n0x40100b40: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 138\r\n0x40100648: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40216e80: delay_end(void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 149\r\n0x40228cdd: sys_timeout_abs at core/timeouts.c line 189\r\n0x40216c3a: loop_task(ETSEvent*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 273\r\n0x401000ab: app_entry_redefinable() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 386\r\n0x40100648: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40100648: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40100648: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40100a17: millis() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring.cpp line 176\r\n0x40100a0c: millis() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring.cpp line 176\r\n0x402188a4: uart_write(uart_t*, char const*, size_t) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\uart.cpp line 547\r\n0x402188a4: uart_write(uart_t*, char const*, size_t) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\uart.cpp line 547\r\n0x40214784: Print::print(__FlashStringHelper const*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\Print.cpp line 106\r\n0x402134bc: HardwareSerial::write(unsigned char const*, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/HardwareSerial.h line 193\r\n0x40214894: Print::printNumber (unsigned long, unsigned char) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\Print.cpp line 262\r\n0x40101400: malloc(size_t) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\umm_malloc\\umm_malloc.cpp line 912\r\n0x402136a1: IPAddress::printTo(Print&) const at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/IPAddress.h line 165\r\n0x4010107e: umm_free_core(umm_heap_context_t*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\umm_malloc\\umm_malloc.cpp line 642\r\n0x402134bc: HardwareSerial::write(unsigned char const*, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/HardwareSerial.h line 193\r\n0x40208a75: WiFiManager::DEBUG_WM__FlashStringHelper const*, IPAddress>(WiFiManager::wm_debuglevel_t, __FlashStringHelper const*, IPAddress) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/IPAddress.h line 88\r\n0x402134bc: HardwareSerial::write(unsigned char const*, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/HardwareSerial.h line 193\r\n0x402157e1: String::copy(char const*, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\WString.cpp line 258\r\n0x402159b1: String::operator=(char const*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\WString.cpp line 303\r\n0x402188a4: uart_write(uart_t*, char const*, size_t) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\uart.cpp line 547\r\n0x40215a32: String::String(unsigned long, unsigned char) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\WString.cpp line 82\r\n0x402134bc: HardwareSerial::write(unsigned char const*, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/HardwareSerial.h line 193\r\n0x40208ac6: WiFiManager::DEBUG_WM__FlashStringHelper const*, IPAddress>(__FlashStringHelper const*, IPAddress) at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\WiFiManager\\WiFiManager.cpp line 3281\r\n0x40206514: String::operator!=(char const*) const at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/WString.h line 234\r\n0x40100515: SoftwareSerial::rxBitISR(SoftwareSerial*) at c:\\users\\ken\\appdata\\local\\arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec\\xtensa-lx106-elf\\include\\c++\\10.3.0\\bits/unique_ptr.h line 421\r\n0x40100c04: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 167\r\n0x40100515: SoftwareSerial::rxBitISR(SoftwareSerial*) at c:\\users\\ken\\appdata\\local\\arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec\\xtensa-lx106-elf\\include\\c++\\10.3.0\\bits/unique_ptr.h line 421\r\n0x40100b40: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 138\r\n0x4021771c: Twi::WAIT_CLOCK_STRETCH() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/core_esp8266_features.h line 65\r\n0x4021794d: Twi::write_bit(bool) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 325\r\n0x40217b88: Twi::writeTo(unsigned char, unsigned char*, unsigned int, unsigned char) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 368\r\n0x402134bc: HardwareSerial::write(unsigned char const*, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/HardwareSerial.h line 193\r\n0x40217b88: Twi::writeTo(unsigned char, unsigned char*, unsigned int, unsigned char) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 368\r\n0x402134bc: HardwareSerial::write(unsigned char const*, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/HardwareSerial.h line 193\r\n0x40202492: u8x8_byte_SendByte at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\U8g2\\src\\clib\\u8x8_byte.c line 51\r\n0x4021282c: TwoWire::beginTransmission(unsigned char) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\libraries\\Wire\\Wire.cpp line 158\r\n0x402134bc: HardwareSerial::write(unsigned char const*, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/HardwareSerial.h line 193\r\n0x40100648: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40100b40: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 138\r\n0x40100b40: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 138\r\n0x402035a5: u8x8_pgm_read_esp at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\U8g2\\src\\clib\\u8x8_8x8.c line 44\r\n0x40201f81: u8g2_font_get_glyph_data at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\U8g2\\src\\clib\\u8g2_font.c line 803\r\n0x402178bd: Twi::write_stop() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 304\r\n0x40217bf1: Twi::writeTo(unsigned char, unsigned char*, unsigned int, unsigned char) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 393\r\n0x402126a2: TwoWire::write(unsigned char const*, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\libraries\\Wire\\Wire.cpp line 209\r\n0x40212874: TwoWire::endTransmission(unsigned char) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\libraries\\Wire\\Wire.cpp line 172\r\n0x40212d49: u8x8_byte_arduino_hw_i2c(u8x8_t*, uint8_t, uint8_t, void*) at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\U8g2\\src\\U8x8lib.cpp line 1354\r\n0x40202619: u8x8_cad_ssd13xx_fast_i2c at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\U8g2\\src\\clib\\u8x8_cad.c line 586\r\n0x40202780: u8x8_d_ssd1306_sh1106_generic at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\U8g2\\src\\clib\\u8x8_d_ssd1306_128x64_noname.c line 327\r\n0x402027b4: u8x8_d_sh1106_128x64_noname at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\U8g2\\src\\clib\\u8x8_d_ssd1306_128x64_noname.c line 481\r\n0x4020364c: u8x8_DrawTile at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\U8g2\\src\\clib\\u8x8_display.c line 89\r\n0x402188a4: uart_write(uart_t*, char const*, size_t) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\uart.cpp line 547\r\n0x402019b5: u8g2_send_buffer at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\U8g2\\src\\clib\\u8g2_buffer.c line 89\r\n0x402027b4: u8x8_d_sh1106_128x64_noname at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\U8g2\\src\\clib\\u8x8_d_ssd1306_128x64_noname.c line 481\r\n0x4010107e: umm_free_core(umm_heap_context_t*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\umm_malloc\\umm_malloc.cpp line 642\r\n0x401013cc: free(void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\umm_malloc\\umm_malloc.cpp line 688\r\n0x40216d56: __yield() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/core_esp8266_features.h line 64\r\n0x40205b10: SoftwareSerial::available() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\libraries\\SoftwareSerial\\src\\SoftwareSerial.cpp line 323\r\n0x40204f0c: AirGradient::getCO2_Raw() at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\AirGradient_Air_Quality_Sensor\\AirGradient.cpp line 664\r\n0x402038f8: updateCo2() at C:\\Users\\Ken\\Documents\\Arduino\\sketch_jan24a/sketch_jan24a.ino line 206\r\n0x40204aca: loop() at C:\\Users\\Ken\\Documents\\Arduino\\sketch_jan24a/sketch_jan24a.ino line 151\r\n```\r\n```\r\n\r\nException 0: Illegal instruction\r\nPC: 0x40219d50: circular_queue ::available() const at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\libraries\\SoftwareSerial\\src\\circular_queue/circular_queue.h line 119\r\nEXCVADDR: 0x00000000\r\n\r\nDecoding stack results\r\n0x40100c04: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 167\r\n0x40100648: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40100b40: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 138\r\n0x40100515: SoftwareSerial::rxBitISR(SoftwareSerial*) at c:\\users\\ken\\appdata\\local\\arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec\\xtensa-lx106-elf\\include\\c++\\10.3.0\\bits/unique_ptr.h line 421\r\n0x40100c04: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 167\r\n0x40100648: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40100b40: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 138\r\n0x40228cdd: sys_timeout_abs at core/timeouts.c line 189\r\n0x401000ab: app_entry_redefinable() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 386\r\n0x40100648: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40100648: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40100648: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40100648: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x402235b1: glue2esp_linkoutput at glue-esp/lwip-esp.c line 301\r\n0x402237df: new_linkoutput at glue-lwip/lwip-git.c line 272\r\n0x40223c3a: ethernet_output at netif/ethernet.c line 312\r\n0x4010107e: umm_free_core(umm_heap_context_t*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\umm_malloc\\umm_malloc.cpp line 642\r\n0x4022b1ac: etharp_output_to_arp_index at core/ipv4/etharp.c line 769\r\n0x40100648: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x4022b280: etharp_output_LWIP2 at core/ipv4/etharp.c line 885\r\n0x40100648: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x4021794d: Twi::write_bit(bool) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 325\r\n0x40107166: Twi::busywait(unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 271\r\n0x4021799f: Twi::read_bit() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 334\r\n0x40217b88: Twi::writeTo(unsigned char, unsigned char*, unsigned int, unsigned char) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 368\r\n0x402134bc: HardwareSerial::write(unsigned char const*, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/HardwareSerial.h line 193\r\n0x40100648: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40100b40: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 138\r\n0x40107170: Twi::busywait(unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 271\r\n0x40100648: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x4010716b: Twi::busywait(unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 271\r\n0x40217937: Twi::write_bit(bool) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 323\r\n0x40217b88: Twi::writeTo(unsigned char, unsigned char*, unsigned int, unsigned char) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 368\r\n0x40217bf1: Twi::writeTo(unsigned char, unsigned char*, unsigned int, unsigned char) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 393\r\n0x402126a2: TwoWire::write(unsigned char const*, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\libraries\\Wire\\Wire.cpp line 209\r\n0x40212874: TwoWire::endTransmission(unsigned char) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\libraries\\Wire\\Wire.cpp line 172\r\n0x40212d49: u8x8_byte_arduino_hw_i2c(u8x8_t*, uint8_t, uint8_t, void*) at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\U8g2\\src\\U8x8lib.cpp line 1354\r\n0x4021794d: Twi::write_bit(bool) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 325\r\n0x402178bd: Twi::write_stop() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 304\r\n0x40217b41: Twi::readFrom(unsigned char, unsigned char*, unsigned int, unsigned char) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 433\r\n0x402127cc: TwoWire::requestFrom(unsigned char, unsigned int, bool) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\libraries\\Wire\\Wire.cpp line 129\r\n0x40212800: TwoWire::requestFrom(unsigned char, unsigned char, unsigned char) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\libraries\\Wire\\Wire.cpp line 137\r\n0x402129a6: SensirionI2CCommunication::receiveFrame(unsigned char, unsigned int, SensirionI2CRxFrame&, TwoWire&, CrcPolynomial) at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\Sensirion_Core\\src\\SensirionI2CCommunication.cpp line 101\r\n0x40216ca8: __esp_suspend() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/core_esp8266_features.h line 64\r\n0x40216df9: __esp_delay(unsigned long) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 161\r\n0x40216e6e: esp_try_delay(unsigned int, unsigned int, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 182\r\n0x40217dd0: __delay(unsigned long) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/coredecls.h line 69\r\n0x402037a7: updateTVOC() at C:\\Users\\Ken\\Documents\\Arduino\\sketch_jan24a/sketch_jan24a.ino line 184\r\n0x40204ac4: loop() at C:\\Users\\Ken\\Documents\\Arduino\\sketch_jan24a/sketch_jan24a.ino line 149\r\n```\r\n```\r\nException 0: Illegal instruction\r\nPC: 0x40219d50: circular_queue ::available() const at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\libraries\\SoftwareSerial\\src\\circular_queue/circular_queue.h line 119\r\nEXCVADDR: 0x00000000\r\n\r\nDecoding stack results\r\n0x40100c04: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 167\r\n0x40100648: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40100b40: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 138\r\n0x40100b40: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 138\r\n0x40100b40: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 138\r\n0x40228cdd: sys_timeout_abs at core/timeouts.c line 189\r\n0x401000ab: app_entry_redefinable() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 386\r\n0x40100648: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40100648: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40100648: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x402235b1: glue2esp_linkoutput at glue-esp/lwip-esp.c line 301\r\n0x40100648: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40100648: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x402235b1: glue2esp_linkoutput at glue-esp/lwip-esp.c line 301\r\n0x40100648: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x402237df: new_linkoutput at glue-lwip/lwip-git.c line 272\r\n0x40223c3a: ethernet_output at netif/ethernet.c line 312\r\n0x4010107e: umm_free_core(umm_heap_context_t*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\umm_malloc\\umm_malloc.cpp line 642\r\n0x4022b1ac: etharp_output_to_arp_index at core/ipv4/etharp.c line 769\r\n0x40100648: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x4022b280: etharp_output_LWIP2 at core/ipv4/etharp.c line 885\r\n0x40100648: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x4021794d: Twi::write_bit(bool) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 325\r\n0x40107169: Twi::busywait(unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 273\r\n0x40217937: Twi::write_bit(bool) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 323\r\n0x40100648: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40217b88: Twi::writeTo(unsigned char, unsigned char*, unsigned int, unsigned char) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 368\r\n0x402134bc: HardwareSerial::write(unsigned char const*, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/HardwareSerial.h line 193\r\n0x4020237d: u8g2_draw_l90_r0 at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\U8g2\\src\\clib\\u8g2_setup.c line 312\r\n0x40201d7e: u8g2_font_decode_len at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\U8g2\\src\\clib\\u8g2_font.c line 459\r\n0x40202374: u8g2_draw_l90_r0 at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\U8g2\\src\\clib\\u8g2_setup.c line 312\r\n0x40217ac4: Twi::readFrom(unsigned char, unsigned char*, unsigned int, unsigned char) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 414\r\n0x40100648: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x402178bd: Twi::write_stop() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 304\r\n0x40217bf1: Twi::writeTo(unsigned char, unsigned char*, unsigned int, unsigned char) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 393\r\n0x402126a2: TwoWire::write(unsigned char const*, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\libraries\\Wire\\Wire.cpp line 209\r\n0x40212874: TwoWire::endTransmission(unsigned char) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\libraries\\Wire\\Wire.cpp line 172\r\n0x40212d49: u8x8_byte_arduino_hw_i2c(u8x8_t*, uint8_t, uint8_t, void*) at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\U8g2\\src\\U8x8lib.cpp line 1354\r\n0x4021794d: Twi::write_bit(bool) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 325\r\n0x402178bd: Twi::write_stop() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 304\r\n0x40217b41: Twi::readFrom(unsigned char, unsigned char*, unsigned int, unsigned char) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 433\r\n0x402127cc: TwoWire::requestFrom(unsigned char, unsigned int, bool) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\libraries\\Wire\\Wire.cpp line 129\r\n0x40212800: TwoWire::requestFrom(unsigned char, unsigned char, unsigned char) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\libraries\\Wire\\Wire.cpp line 137\r\n0x402129a6: SensirionI2CCommunication::receiveFrame(unsigned char, unsigned int, SensirionI2CRxFrame&, TwoWire&, CrcPolynomial) at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\Sensirion_Core\\src\\SensirionI2CCommunication.cpp line 101\r\n0x40216ca8: __esp_suspend() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/core_esp8266_features.h line 64\r\n0x40216df9: __esp_delay(unsigned long) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 161\r\n0x40216e6e: esp_try_delay(unsigned int, unsigned int, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 182\r\n0x40217dd0: __delay(unsigned long) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/coredecls.h line 69\r\n0x402037a7: updateTVOC() at C:\\Users\\Ken\\Documents\\Arduino\\sketch_jan24a/sketch_jan24a.ino line 184\r\n0x40204ac4: loop() at C:\\Users\\Ken\\Documents\\Arduino\\sketch_jan24a/sketch_jan24a.ino line 149\r\n```\r\n\r\nI also zipped the build folder of this one as well. ELF file inside, if that would be helpful.\r\n[arduino_build_270738_Core3.1.1_MACRO_BACKTRACE.zip](https://github.com/esp8266/Arduino/files/10526076/arduino_build_270738_Core3.1.1_MACRO_BACKTRACE.zip)\r\n",
                "created_at": "2023-01-28T06:35:26Z",
                "updated_at": "2023-01-28T06:35:26Z",
                "author_association": "NONE",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1407309503/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1407420389,
                "user": "mhightower83",
                "body": "Great verification. \r\nSadly, I don't see our expected caller to `circular_queue::available()`\r\n> And the build define -fno-optimize-sibling-calls can help push more call details to the stack.\r\n\r\nThis is also needed. Was it included in this build? This optimization hinders seeing the call chain in the stack dump. When a function is going to return after a call, the compiler replaces the call with a jump instruction. After a crash, there are no tracks in the stack leading into the crash.",
                "created_at": "2023-01-28T15:17:07Z",
                "updated_at": "2023-01-28T15:17:07Z",
                "author_association": "CONTRIBUTOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1407420389/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1407486639,
                "user": "rochi7",
                "body": "I made a similar observation on my weather station.\r\nSince updating to core 3.1.1 I've been getting exceptions at irregular intervals\r\n- ResetReason=Exception\r\n- ResetInfo=Fatal exception:0 flag:2 (Exception) epc1:0x4021559c epc2:0x00000000 epc3:0x00000000 excvaddr:0x00000000 depc:0x00000000\r\n- SDK=2.2.2-dev(38a443e)\r\n- Core=3.1.1\r\n\r\nin the MAP File i found the address **4021559c** related to circular_queue object\r\n\r\n![image](https://user-images.githubusercontent.com/123838288/215290728-f42c927f-03f4-4963-9ee3-3eb7a9bcef7c.png)\r\n",
                "created_at": "2023-01-28T20:58:15Z",
                "updated_at": "2023-01-28T20:58:15Z",
                "author_association": "NONE",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1407486639/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1407490654,
                "user": "ken830",
                "body": "> > And the build define -fno-optimize-sibling-calls can help push more call details to the stack.\r\n> \r\n> This is also needed. Was it included in this build? This optimization hinders seeing the call chain in the stack dump. When a function is going to return after a call, the compiler replaces the call with a jump instruction. After a crash, there are no tracks in the stack leading into the crash.\r\n\r\nOh, no, I totally overlooked that part! I couldn't find any place to add build options in ArduinoIDE, so I'm looking at doing this in PlatformIO now. Is it under Build  Options ==> `build_flags` that I should define this option?",
                "created_at": "2023-01-28T21:20:25Z",
                "updated_at": "2023-01-28T21:20:25Z",
                "author_association": "NONE",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1407490654/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1407492508,
                "user": "ken830",
                "body": "> Oh, no, I totally overlooked that part! I couldn't find any place to add build options in ArduinoIDE, so I'm looking at doing this in PlatformIO now. Is it under Build Options ==> `build_flags` that I should define this option?\r\n\r\nHmm.. Now that I think about it, I can't do this in PlatformIO because I can get the Exception Decoder to work there unless I use the `build_type = debug` flag. But if I do a debug build, then it won't crash. I'll need to figure out a way to do this in Arduino IDE 1.8.",
                "created_at": "2023-01-28T21:31:39Z",
                "updated_at": "2023-01-28T21:31:39Z",
                "author_association": "NONE",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1407492508/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1407495788,
                "user": "mhightower83",
                "body": "> .. I use the build_type = debug flag. \r\n\r\nRight, I forgot about that.\r\nFor the Arduino IDE, I would have suggested creating a file \\<SketchName\\>`.ino.globals.h`  with the build options:\r\n```cpp\r\n/*@create-file:build.opt@\r\n-fno-optimize-sibling-calls\r\n*/\r\n```\r\nHowever, for this to work today on Windows, you will need to the updated [./tools/mkbuildoptglobals.py](https://github.com/esp8266/Arduino/blob/master/tools/mkbuildoptglobals.py). This should appear later in the 3.1.2 update.\r\n\r\n[More on global build options](https://arduino-esp8266.readthedocs.io/en/latest/faq/a06-global-build-options.html#how-to-specify-global-build-defines-and-options)\r\n",
                "created_at": "2023-01-28T21:52:27Z",
                "updated_at": "2023-01-28T21:58:01Z",
                "author_association": "CONTRIBUTOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1407495788/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1407509567,
                "user": "ken830",
                "body": "> Right, I forgot about that. For the Arduino IDE, I would have suggested creating a file <SketchName>`.ino.globals.h` with the build options:\r\n> \r\n> ```c++\r\n> /*@create-file:build.opt@\r\n> -fno-optimize-sibling-calls\r\n> */\r\n> ```\r\n> \r\n> However, for this to work today on Windows, you will need to the updated [./tools/mkbuildoptglobals.py](https://github.com/esp8266/Arduino/blob/master/tools/mkbuildoptglobals.py). This should appear later in the 3.1.2 update.\r\n> \r\n> [More on global build options](https://arduino-esp8266.readthedocs.io/en/latest/faq/a06-global-build-options.html#how-to-specify-global-build-defines-and-options)\r\n\r\nI'm so glad for this since I was halfway down a rabbit hole reading about having to be cautious with build flags because there is no dedicated spot for the users to put in flags and using existing options risks overwriting flags defined by platform developers. This was no problem at all since I already replaced `mkbuildoptglobals.py` a few days ago to get v3.1.1 to compile in Arduino IDE v1.8 so that I can get to the Exception Decoder with crashing code.\r\n\r\nI created the <SketchName>`.ino.globals.h` file in the same location as the sketch source as you've instructed.\r\n\r\nI turned on compiler verbosity to make sure the flag got incorporated. I think it did:\r\n\r\n```\r\nC:\\Program Files (x86)\\Arduino\\arduino-builder -dump-prefs -logger=machine -hardware C:\\Program Files (x86)\\Arduino\\hardware -hardware C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages -tools C:\\Program Files (x86)\\Arduino\\tools-builder -tools C:\\Program Files (x86)\\Arduino\\hardware\\tools\\avr -tools C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages -built-in-libraries C:\\Program Files (x86)\\Arduino\\libraries -libraries C:\\Users\\Ken\\Documents\\Arduino\\libraries -fqbn=esp8266:esp8266:d1_mini:xtal=80,vt=flash,exception=disabled,stacksmash=disabled,ssl=all,mmu=3232,non32xfer=fast,eesz=4M2M,ip=lm2f,dbg=Disabled,lvl=None____,wipe=none,baud=921600 -vid-pid=1A86_7523 -ide-version=10819 -build-path C:\\Users\\Ken\\AppData\\Local\\Temp\\arduino_build_127341 -warnings=all -build-cache C:\\Users\\Ken\\AppData\\Local\\Temp\\arduino_cache_961296 -prefs=build.warn_data_percentage=75 -prefs=runtime.tools.xtensa-lx106-elf-gcc.path=C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec -prefs=runtime.tools.xtensa-lx106-elf-gcc-3.1.0-gcc10.3-e5f9fec.path=C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec -prefs=runtime.tools.mklittlefs.path=C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mklittlefs\\3.1.0-gcc10.3-e5f9fec -prefs=runtime.tools.mklittlefs-3.1.0-gcc10.3-e5f9fec.path=C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mklittlefs\\3.1.0-gcc10.3-e5f9fec -prefs=runtime.tools.python3.path=C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1 -prefs=runtime.tools.python3-3.7.2-post1.path=C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1 -prefs=runtime.tools.mkspiffs.path=C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mkspiffs\\3.1.0-gcc10.3-e5f9fec -prefs=runtime.tools.mkspiffs-3.1.0-gcc10.3-e5f9fec.path=C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mkspiffs\\3.1.0-gcc10.3-e5f9fec -verbose C:\\Users\\Ken\\Documents\\Arduino\\sketch_jan24a\\sketch_jan24a.ino\r\nC:\\Program Files (x86)\\Arduino\\arduino-builder -compile -logger=machine -hardware C:\\Program Files (x86)\\Arduino\\hardware -hardware C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages -tools C:\\Program Files (x86)\\Arduino\\tools-builder -tools C:\\Program Files (x86)\\Arduino\\hardware\\tools\\avr -tools C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages -built-in-libraries C:\\Program Files (x86)\\Arduino\\libraries -libraries C:\\Users\\Ken\\Documents\\Arduino\\libraries -fqbn=esp8266:esp8266:d1_mini:xtal=80,vt=flash,exception=disabled,stacksmash=disabled,ssl=all,mmu=3232,non32xfer=fast,eesz=4M2M,ip=lm2f,dbg=Disabled,lvl=None____,wipe=none,baud=921600 -vid-pid=1A86_7523 -ide-version=10819 -build-path C:\\Users\\Ken\\AppData\\Local\\Temp\\arduino_build_127341 -warnings=all -build-cache C:\\Users\\Ken\\AppData\\Local\\Temp\\arduino_cache_961296 -prefs=build.warn_data_percentage=75 -prefs=runtime.tools.xtensa-lx106-elf-gcc.path=C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec -prefs=runtime.tools.xtensa-lx106-elf-gcc-3.1.0-gcc10.3-e5f9fec.path=C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec -prefs=runtime.tools.mklittlefs.path=C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mklittlefs\\3.1.0-gcc10.3-e5f9fec -prefs=runtime.tools.mklittlefs-3.1.0-gcc10.3-e5f9fec.path=C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mklittlefs\\3.1.0-gcc10.3-e5f9fec -prefs=runtime.tools.python3.path=C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1 -prefs=runtime.tools.python3-3.7.2-post1.path=C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1 -prefs=runtime.tools.mkspiffs.path=C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mkspiffs\\3.1.0-gcc10.3-e5f9fec -prefs=runtime.tools.mkspiffs-3.1.0-gcc10.3-e5f9fec.path=C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mkspiffs\\3.1.0-gcc10.3-e5f9fec -verbose C:\\Users\\Ken\\Documents\\Arduino\\sketch_jan24a\\sketch_jan24a.ino\r\nUsing board 'd1_mini' from platform in folder: C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\r\nUsing core 'esp8266' from platform in folder: C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\r\n\"C:\\\\Users\\\\Ken\\\\AppData\\\\Local\\\\Arduino15\\\\packages\\\\esp8266\\\\tools\\\\python3\\\\3.7.2-post1/python3\" -I \"C:\\\\Users\\\\Ken\\\\AppData\\\\Local\\\\Arduino15\\\\packages\\\\esp8266\\\\hardware\\\\esp8266\\\\3.1.1/tools/mkbuildoptglobals.py\" \"C:\\\\Program Files (x86)\\\\Arduino\" 10819 \"C:\\\\Users\\\\Ken\\\\AppData\\\\Local\\\\Temp\\\\arduino_build_127341\" \"C:\\\\Users\\\\Ken\\\\AppData\\\\Local\\\\Temp\\\\arduino_build_127341/core/build.opt\" \"C:\\\\Users\\\\Ken\\\\Documents\\\\Arduino\\\\sketch_jan24a/sketch_jan24a.ino.globals.h\" \"C:\\\\Users\\\\Ken\\\\AppData\\\\Local\\\\Arduino15\\\\packages\\\\esp8266\\\\hardware\\\\esp8266\\\\3.1.1\\\\cores\\\\esp8266/CommonHFile.h\"\r\nAssume aggressive 'core.a' caching enabled.\r\nClean build, created dir C:\\Users\\Ken\\AppData\\Local\\Temp\\arduino_build_127341\\core\r\nUsing global include from C:\\Users\\Ken\\Documents\\Arduino\\sketch_jan24a\\sketch_jan24a.ino.globals.h\r\nExtracting embedded compiler command-line options from sketch_jan24a.ino.globals.h:1\r\n   2, Add command-line option: -fno-optimize-sibling-calls\r\n  Created compiler command-line options file C:\\Users\\Ken\\AppData\\Local\\Temp\\arduino_build_127341\\core\\build.opt\r\nUsing 'aggressive caching' workaround, rebuild shared 'core.a' for current globals.\r\nDetecting libraries used...\r\n```\r\n\r\nHere's are the first first exception decodes:\r\n\r\n```\r\n\r\nException 0: Illegal instruction\r\nPC: 0x40219d38: circular_queue ::available() const at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\libraries\\SoftwareSerial\\src\\circular_queue/circular_queue.h line 119\r\nEXCVADDR: 0x00000000\r\n\r\nDecoding stack results\r\n0x40100624: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x401004f1: SoftwareSerial::rxBitISR(SoftwareSerial*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\libraries\\SoftwareSerial\\src\\SoftwareSerial.cpp line 624\r\n0x40100624: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40100bd0: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 167\r\n0x40100b0c: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 138\r\n0x401004fd: SoftwareSerial::rxBitISR(SoftwareSerial*) at c:\\users\\ken\\appdata\\local\\arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec\\xtensa-lx106-elf\\include\\c++\\10.3.0\\bits/unique_ptr.h line 421\r\n0x40100bec: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 175\r\n0x40100bd0: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 167\r\n0x40100624: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40100b0c: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 138\r\n0x40228d91: sys_timeout_abs at core/timeouts.c line 189\r\n0x4010134c: umm_init() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\umm_malloc\\umm_malloc.cpp line 564\r\n0x401000ab: app_entry_redefinable() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 386\r\n0x401004fd: SoftwareSerial::rxBitISR(SoftwareSerial*) at c:\\users\\ken\\appdata\\local\\arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec\\xtensa-lx106-elf\\include\\c++\\10.3.0\\bits/unique_ptr.h line 421\r\n0x40100bec: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 175\r\n0x40100bd0: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 167\r\n0x40100624: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40100bec: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 175\r\n0x40100bd0: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 167\r\n0x40100624: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40100b0c: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 138\r\n0x40223cd3: ethernet_output at netif/ethernet.c line 303\r\n0x40223cbc: ethernet_output at netif/ethernet.c line 294\r\n0x40100624: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40223665: glue2esp_linkoutput at glue-esp/lwip-esp.c line 301\r\n0x40100624: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40223665: glue2esp_linkoutput at glue-esp/lwip-esp.c line 301\r\n0x40100624: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x401013ac: malloc(size_t) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\umm_malloc\\umm_malloc.cpp line 912\r\n0x40100624: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x4022b334: etharp_output_LWIP2 at core/ipv4/etharp.c line 885\r\n0x40100624: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40100624: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x402178d9: Twi::write_bit(bool) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 313\r\n0x402179df: Twi::write_byte(unsigned char) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 347\r\n0x40100624: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40201c27: u8g2_font_decode_get_unsigned_bits at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\U8g2\\src\\clib\\u8g2_font.c line 246\r\n0x40201c27: u8g2_font_decode_get_unsigned_bits at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\U8g2\\src\\clib\\u8g2_font.c line 246\r\n0x40217891: Twi::write_stop() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 304\r\n0x40217bbd: Twi::writeTo(unsigned char, unsigned char*, unsigned int, unsigned char) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 393\r\n0x40217bbd: Twi::writeTo(unsigned char, unsigned char*, unsigned int, unsigned char) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 393\r\n0x40217cc0: twi_writeTo(unsigned char, unsigned char*, unsigned int, unsigned char) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 1033\r\n0x402127d8: TwoWire::endTransmission(unsigned char) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\libraries\\Wire\\Wire.cpp line 172\r\n0x402127fc: TwoWire::endTransmission() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\libraries\\Wire\\Wire.cpp line 180\r\n0x40212cd5: u8x8_byte_arduino_hw_i2c(u8x8_t*, uint8_t, uint8_t, void*) at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\U8g2\\src\\U8x8lib.cpp line 1354\r\n0x40203630: u8x8_byte_EndTransfer at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\U8g2\\src\\clib\\u8x8_byte.c line 61\r\n0x402024e4: u8x8_i2c_data_transfer at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\U8g2\\src\\clib\\u8x8_cad.c line 479\r\n0x40202635: u8x8_cad_ssd13xx_fast_i2c at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\U8g2\\src\\clib\\u8x8_cad.c line 586\r\n0x401013ac: malloc(size_t) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\umm_malloc\\umm_malloc.cpp line 912\r\n0x401013dd: realloc(void*, size_t) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\umm_malloc\\umm_malloc.cpp line 944\r\n0x40217bab: Twi::writeTo(unsigned char, unsigned char*, unsigned int, unsigned char) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 386\r\n0x402156fb: String::changeBuffer(unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/WString.h line 328\r\n0x40218890: uart_write(uart_t*, char const*, size_t) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\uart.cpp line 547\r\n0x40218890: uart_write(uart_t*, char const*, size_t) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\uart.cpp line 547\r\n0x40101039: umm_free_core(umm_heap_context_t*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\umm_malloc\\umm_malloc.cpp line 642\r\n0x40216c87: __esp_suspend() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/core_esp8266_features.h line 64\r\n0x40216dca: __esp_delay(unsigned long) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 161\r\n0x40216f6a: esp_try_delay(unsigned int, unsigned int, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 182\r\n0x40217dc0: __delay(unsigned long) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/coredecls.h line 69\r\n0x40203877: updateTVOC() at C:\\Users\\Ken\\Documents\\Arduino\\sketch_jan24a/sketch_jan24a.ino line 183\r\n0x40204b7b: loop() at C:\\Users\\Ken\\Documents\\Arduino\\sketch_jan24a/sketch_jan24a.ino line 148\r\n0x40216e50: loop_wrapper() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 258\r\n```\r\n\r\n```\r\n\r\nException 0: Illegal instruction\r\nPC: 0x40219d38: circular_queue ::available() const at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\libraries\\SoftwareSerial\\src\\circular_queue/circular_queue.h line 119\r\nEXCVADDR: 0x00000000\r\n\r\nDecoding stack results\r\n0x401004f1: SoftwareSerial::rxBitISR(SoftwareSerial*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\libraries\\SoftwareSerial\\src\\SoftwareSerial.cpp line 624\r\n0x40100624: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40100bd0: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 167\r\n0x40100b0c: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 138\r\n0x401004fd: SoftwareSerial::rxBitISR(SoftwareSerial*) at c:\\users\\ken\\appdata\\local\\arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec\\xtensa-lx106-elf\\include\\c++\\10.3.0\\bits/unique_ptr.h line 421\r\n0x40100bec: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 175\r\n0x40100bd0: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 167\r\n0x40100624: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40100b0c: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 138\r\n0x40228d91: sys_timeout_abs at core/timeouts.c line 189\r\n0x40216c15: loop_task(ETSEvent*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 273\r\n0x4010134c: umm_init() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\umm_malloc\\umm_malloc.cpp line 564\r\n0x401000ab: app_entry_redefinable() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 386\r\n0x40100624: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40100624: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40100624: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40100624: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x4010064a: esp_schedule() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 135\r\n0x40216dff: esp_yield() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 144\r\n0x4021347c: HardwareSerial::write(unsigned char const*, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/HardwareSerial.h line 193\r\n0x40218890: uart_write(uart_t*, char const*, size_t) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\uart.cpp line 547\r\n0x4021347c: HardwareSerial::write(unsigned char const*, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/HardwareSerial.h line 193\r\n0x40213488: HardwareSerial::write(unsigned char const*, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/HardwareSerial.h line 193\r\n0x4021347c: HardwareSerial::write(unsigned char const*, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/HardwareSerial.h line 193\r\n0x4021454d: Print::write(char const*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/Print.h line 59\r\n0x40214570: Print::write(char const*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/Print.h line 57\r\n0x40214888: Print::printNumber (unsigned long, unsigned char) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\Print.cpp line 262\r\n0x40214760: Print::print(__FlashStringHelper const*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\Print.cpp line 106\r\n0x40207fd2: WiFiManager::waitForConnectResult(unsigned int) at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\WiFiManager\\WiFiManager.cpp line 1233\r\n0x40218890: uart_write(uart_t*, char const*, size_t) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\uart.cpp line 547\r\n0x402148dc: Print::print(unsigned char, int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\Print.cpp line 129\r\n0x4021347c: HardwareSerial::write(unsigned char const*, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/HardwareSerial.h line 193\r\n0x4021347c: HardwareSerial::write(unsigned char const*, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/HardwareSerial.h line 193\r\n0x40213488: HardwareSerial::write(unsigned char const*, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/HardwareSerial.h line 193\r\n0x4021347c: HardwareSerial::write(unsigned char const*, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/HardwareSerial.h line 193\r\n0x4021454d: Print::write(char const*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/Print.h line 59\r\n0x402147c0: Print::println() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/Print.h line 57\r\n0x40208abb: WiFiManager::DEBUG_WM__FlashStringHelper const*, IPAddress>(WiFiManager::wm_debuglevel_t, __FlashStringHelper const*, IPAddress) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/IPAddress.h line 88\r\n0x40100624: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x401004fd: SoftwareSerial::rxBitISR(SoftwareSerial*) at c:\\users\\ken\\appdata\\local\\arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec\\xtensa-lx106-elf\\include\\c++\\10.3.0\\bits/unique_ptr.h line 421\r\n0x401004fd: SoftwareSerial::rxBitISR(SoftwareSerial*) at c:\\users\\ken\\appdata\\local\\arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec\\xtensa-lx106-elf\\include\\c++\\10.3.0\\bits/unique_ptr.h line 421\r\n0x40100bec: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 175\r\n0x401004fd: SoftwareSerial::rxBitISR(SoftwareSerial*) at c:\\users\\ken\\appdata\\local\\arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec\\xtensa-lx106-elf\\include\\c++\\10.3.0\\bits/unique_ptr.h line 421\r\n0x40100bd0: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 167\r\n0x40100bec: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 175\r\n0x40100bd0: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 167\r\n0x40100b0c: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 138\r\n0x402176f6: Twi::WAIT_CLOCK_STRETCH() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/core_esp8266_features.h line 65\r\n0x40100b0c: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 138\r\n0x40217927: Twi::write_bit(bool) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 325\r\n0x40107114: Twi::busywait(unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 268\r\n0x40100b0c: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 138\r\n0x40212c14: u8x8_byte_arduino_hw_i2c(u8x8_t*, uint8_t, uint8_t, void*) at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\U8g2\\src\\U8x8lib.cpp line 1316\r\n0x40203601: u8x8_byte_SendBytes at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\U8g2\\src\\clib\\u8x8_byte.c line 46\r\n0x40212c14: u8x8_byte_arduino_hw_i2c(u8x8_t*, uint8_t, uint8_t, void*) at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\U8g2\\src\\U8x8lib.cpp line 1316\r\n0x40202622: u8x8_cad_ssd13xx_fast_i2c at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\U8g2\\src\\clib\\u8x8_cad.c line 582\r\n0x401004fd: SoftwareSerial::rxBitISR(SoftwareSerial*) at c:\\users\\ken\\appdata\\local\\arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec\\xtensa-lx106-elf\\include\\c++\\10.3.0\\bits/unique_ptr.h line 421\r\n0x401004fd: SoftwareSerial::rxBitISR(SoftwareSerial*) at c:\\users\\ken\\appdata\\local\\arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec\\xtensa-lx106-elf\\include\\c++\\10.3.0\\bits/unique_ptr.h line 421\r\n0x40100bec: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 175\r\n0x40100bd0: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 167\r\n0x40100bec: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 175\r\n0x40100b0c: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 138\r\n0x40100a0c: micros() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring.cpp line 181\r\n0x40202635: u8x8_cad_ssd13xx_fast_i2c at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\U8g2\\src\\clib\\u8x8_cad.c line 586\r\n0x40217922: Twi::write_bit(bool) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 325\r\n0x40217891: Twi::write_stop() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 304\r\n0x40216c87: __esp_suspend() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/core_esp8266_features.h line 64\r\n0x40216dca: __esp_delay(unsigned long) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 161\r\n0x40216f6a: esp_try_delay(unsigned int, unsigned int, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 182\r\n0x40217dc0: __delay(unsigned long) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/coredecls.h line 69\r\n0x40212465: SensirionI2CSgp41::executeConditioning(unsigned short, unsigned short, unsigned short&) at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\Sensirion_Core\\src/SensirionI2CRxFrame.h line 60\r\n0x40216f45: esp_try_delay(unsigned int, unsigned int, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 169\r\n0x402038c8: updateTVOC() at C:\\Users\\Ken\\Documents\\Arduino\\sketch_jan24a/sketch_jan24a.ino line 187\r\n0x40204b7b: loop() at C:\\Users\\Ken\\Documents\\Arduino\\sketch_jan24a/sketch_jan24a.ino line 148\r\n0x40216e50: loop_wrapper() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 258\r\n```\r\n\r\n```\r\n\r\nException 0: Illegal instruction\r\nPC: 0x40219d38: circular_queue ::available() const at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\libraries\\SoftwareSerial\\src\\circular_queue/circular_queue.h line 119\r\nEXCVADDR: 0x00000000\r\n\r\nDecoding stack results\r\n0x401004f1: SoftwareSerial::rxBitISR(SoftwareSerial*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\libraries\\SoftwareSerial\\src\\SoftwareSerial.cpp line 624\r\n0x40100bd0: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 167\r\n0x40100624: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40100b0c: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 138\r\n0x401004fd: SoftwareSerial::rxBitISR(SoftwareSerial*) at c:\\users\\ken\\appdata\\local\\arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec\\xtensa-lx106-elf\\include\\c++\\10.3.0\\bits/unique_ptr.h line 421\r\n0x40100bec: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 175\r\n0x40100bd0: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 167\r\n0x40100624: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40100b0c: interrupt_handler(void*, void*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring_digital.cpp line 138\r\n0x40228d91: sys_timeout_abs at core/timeouts.c line 189\r\n0x40216c15: loop_task(ETSEvent*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 273\r\n0x4010134c: umm_init() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\umm_malloc\\umm_malloc.cpp line 564\r\n0x401000ab: app_entry_redefinable() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 386\r\n0x40100624: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40100624: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40100624: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40100624: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40223665: glue2esp_linkoutput at glue-esp/lwip-esp.c line 301\r\n0x40223893: new_linkoutput at glue-lwip/lwip-git.c line 272\r\n0x40223cee: ethernet_output at netif/ethernet.c line 312\r\n0x40100624: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40223665: glue2esp_linkoutput at glue-esp/lwip-esp.c line 301\r\n0x40100c84: pvPortMalloc(size_t, char const*, int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\umm_malloc/umm_heap_select.h line 91\r\n0x40223893: new_linkoutput at glue-lwip/lwip-git.c line 272\r\n0x40223cee: ethernet_output at netif/ethernet.c line 312\r\n0x4022cd2e: ip4_output_if at core/ipv4/ip4.c line 1549\r\n0x4022b260: etharp_output_to_arp_index at core/ipv4/etharp.c line 769\r\n0x401013dd: realloc(void*, size_t) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\umm_malloc\\umm_malloc.cpp line 944\r\n0x4022b334: etharp_output_LWIP2 at core/ipv4/etharp.c line 885\r\n0x40100624: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x4021791f: Twi::write_bit(bool) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 324\r\n0x4021790c: Twi::write_bit(bool) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 323\r\n0x40100624: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x40203385: u8g2_draw_hv_line_2dir at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\U8g2\\src\\clib\\u8g2_hvline.c line 140\r\n0x40203385: u8g2_draw_hv_line_2dir at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\U8g2\\src\\clib\\u8g2_hvline.c line 140\r\n0x40100624: ets_post(uint8, ETSSignal, ETSParam) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 238\r\n0x401004fd: SoftwareSerial::rxBitISR(SoftwareSerial*) at c:\\users\\ken\\appdata\\local\\arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec\\xtensa-lx106-elf\\include\\c++\\10.3.0\\bits/unique_ptr.h line 421\r\n0x40217922: Twi::write_bit(bool) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 325\r\n0x40217891: Twi::write_stop() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 304\r\n0x40217bbd: Twi::writeTo(unsigned char, unsigned char*, unsigned int, unsigned char) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 393\r\n0x40100a0c: micros() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_wiring.cpp line 181\r\n0x402024e4: u8x8_i2c_data_transfer at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\U8g2\\src\\clib\\u8x8_cad.c line 479\r\n0x40217922: Twi::write_bit(bool) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 325\r\n0x40217891: Twi::write_stop() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 304\r\n0x40217b0d: Twi::readFrom(unsigned char, unsigned char*, unsigned int, unsigned char) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 433\r\n0x40217891: Twi::write_stop() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 304\r\n0x40217ce0: twi_readFrom(unsigned char, unsigned char*, unsigned int, unsigned char) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_si2c.cpp line 1039\r\n0x40212728: TwoWire::requestFrom(unsigned char, unsigned int, bool) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\libraries\\Wire\\Wire.cpp line 129\r\n0x40216dd5: __esp_delay(unsigned long) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 162\r\n0x4021285f: generateCRC(unsigned char const*, unsigned int, CrcPolynomial) at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\Sensirion_Core\\src\\SensirionCrc.cpp line 63\r\n0x40212974: SensirionI2CCommunication::receiveFrame(unsigned char, unsigned int, SensirionI2CRxFrame&, TwoWire&, CrcPolynomial) at C:\\Users\\Ken\\Documents\\Arduino\\libraries\\Sensirion_Core\\src\\SensirionI2CCommunication.cpp line 111\r\n0x40216c87: __esp_suspend() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/core_esp8266_features.h line 64\r\n0x40216dca: __esp_delay(unsigned long) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 161\r\n0x40216f6a: esp_try_delay(unsigned int, unsigned int, unsigned int) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 182\r\n0x40217dc0: __delay(unsigned long) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266/coredecls.h line 69\r\n0x40203877: updateTVOC() at C:\\Users\\Ken\\Documents\\Arduino\\sketch_jan24a/sketch_jan24a.ino line 183\r\n0x40204b7b: loop() at C:\\Users\\Ken\\Documents\\Arduino\\sketch_jan24a/sketch_jan24a.ino line 148\r\n0x40216e50: loop_wrapper() at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\cores\\esp8266\\core_esp8266_main.cpp line 258\r\n```",
                "created_at": "2023-01-28T23:20:59Z",
                "updated_at": "2023-01-28T23:20:59Z",
                "author_association": "NONE",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1407509567/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1407517187,
                "user": "mhightower83",
                "body": "Great! And the ISR caller `SoftwareSerial::rxBitISR` that @mcspr suggested is now showing in the trace. The line number isn't exactly where we would expect; however, \"in the vicinity\" is often what I see.\r\n```\r\n0x401004f1: SoftwareSerial::rxBitISR(SoftwareSerial*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\3.1.1\\libraries\\SoftwareSerial\\src\\SoftwareSerial.cpp line 624\r\n```",
                "created_at": "2023-01-29T00:09:07Z",
                "updated_at": "2023-01-29T00:09:07Z",
                "author_association": "CONTRIBUTOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1407517187/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1407561526,
                "user": "jjsuwa-sys3175",
                "body": "@mhightower83 \r\n> And the build define `-fno-optimize-sibling-calls` can help push more call details to the stack.\r\n\r\nAs an implementer of sibling call optimization in xtensa, I'd like to step in off-topic.\r\nI think it should be specified in the documentation (if it exists) as a note when tracing stack dumps.",
                "created_at": "2023-01-29T04:52:40Z",
                "updated_at": "2023-01-29T04:52:40Z",
                "author_association": "CONTRIBUTOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1407561526/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1407570982,
                "user": "mhightower83",
                "body": "@jjsuwa-sys3175 I think that is a good suggestion. I too have been thinking it should be added to the docs. I'll take this as a nudge to get it done. \r\n",
                "created_at": "2023-01-29T05:58:44Z",
                "updated_at": "2023-01-29T05:58:44Z",
                "author_association": "CONTRIBUTOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1407570982/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1407589197,
                "user": "ken830",
                "body": "> Great! And the ISR caller `SoftwareSerial::rxBitISR` that @mcspr suggested is now showing in the trace. The line number isn't exactly where we would expect; however, \"in the vicinity\" is often what I see.\r\n> \r\n> ```\r\n> 0x401004f1: SoftwareSerial::rxBitISR(SoftwareSerial*) at C:\\Users\\Ken\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp\r\n> ```\r\n\r\nJust in case, this is from the exact file on my system:\r\n\r\n```\r\n622 void IRAM_ATTR SoftwareSerial::rxBitISR(SoftwareSerial* self) {\r\n623    const bool level = *self->m_rxReg & self->m_rxBitMask;\r\n624    const uint32_t curTick = microsToTicks(micros());\r\n625    const bool empty = !self->m_isrBuffer->available();\r\n626\r\n627    // Store level and tick in the buffer unless we have an overflow\r\n628    // tick's LSB is repurposed for the level bit\r\n629    if (!self->m_isrBuffer->push((curTick | 1U) ^ !level)) self->m_isrOverflow.store(true);\r\n630    // Trigger rx callback only when receiver is starved\r\n631    if (empty && self->m_rxHandler) self->m_rxHandler();\r\n632 }\r\n```\r\n\r\nI saw the issue created in the espsoftwareserial repository earlier today. Thank you, @mhightower83 and @mcspr for your guidance and patience. I'm completely out of me element here, but I learned a lot! There are a bunch of us that are experiencing this issue so it will help a lot of people in the community when resolved. I'm looking forward to testing whatever solution winds up being implemented.",
                "created_at": "2023-01-29T07:42:06Z",
                "updated_at": "2023-01-29T07:42:06Z",
                "author_association": "NONE",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1407589197/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1409520980,
                "user": "ken830",
                "body": "I see we're reverting to SoftwareSerial v6, but does this mean the breaking change in v7 cannot be made to work? Does this affect other Arduino libraries as well like ESP32?",
                "created_at": "2023-01-30T23:32:42Z",
                "updated_at": "2023-01-30T23:32:42Z",
                "author_association": "NONE",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1409520980/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1412241793,
                "user": "mcspr",
                "body": "ESP32 Does not ship SoftwareSerial, iirc it is up to user to keep it updated.\r\n\r\nv7 has reworked SoftwareSerial::onReceive that changed execution context; there is no longer ::perform_work(), callback is executed in SoftwareSerial ISR directly. This is tangentially related, so far the decision is to revert.",
                "created_at": "2023-02-01T15:22:40Z",
                "updated_at": "2023-02-01T15:22:40Z",
                "author_association": "COLLABORATOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1412241793/reactions",
                    "total_count": 1,
                    "+1": 1,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            }
        ]
    },
    {
        "id": 1560253787,
        "number": 8835,
        "title": "ESP8266WebServer streamFile() with File32",
        "state": "closed",
        "locked": false,
        "assignees": [],
        "labels": [],
        "milestone": null,
        "created_at": "2023-01-27T18:58:03Z",
        "updated_at": "2023-01-27T19:23:25Z",
        "closed_at": "2023-01-27T19:23:25Z",
        "author_association": "CONTRIBUTOR",
        "body": "#### Platform\r\n\r\n- Hardware:\t\t\t\tEspressif 8266 (4.1.0) > NodeMCU 1.0 (ESP-12E Module)\r\n- Core Version:\t\t\tframework-arduinoespressif8266 @ 3.30101.0 (3.1.1)\r\n- Development Env:\t\tPlatformio\r\n- Operating System:\t\tWindows\r\n\r\n### Problem Description\r\n\r\nWith 3.0.x I used to use ESP8266WebServer.streamFile() in combination with SdFat to provide file downloads from an SD card.\r\nWith 3.1.1 this fails to compile:\r\n```\r\nIn member function 'size_t esp8266webserver::ESP8266WebServerTemplate<ServerType>::streamFile(T&, const String&, HTTPMethod) [with T = File32; ServerType = WiFiServer]',\r\n    inlined from 'bool ShelfWeb::_loadFromSdCard(const char*)' at C:\\Users\\Nitek\\.platformio\\packages\\framework-arduinoespressif8266\\libraries\\ESP8266WebServer\\src/ESP8266WebServer.h:225:22:\r\nC:\\Users\\Nitek\\.platformio\\packages\\framework-arduinoespressif8266\\libraries\\ESP8266WebServer\\src/ESP8266WebServer.h:233:20: error: call to 'StreamFile<FatFile, unsigned int>::name' declared with attribute error: use getName(name, size)\r\n  233 |     _streamFileCore(file.size(), file.name(), contentType);\r\n```\r\nIsn't streamFile supposed to work with File32?\r\n\r\n### Sketch\r\n\r\n```cpp\r\n\r\nESP8266WebServer _server;\r\nSdFat _SD;\r\n\r\nFile32 dataFile = _SD.open(path);\r\nif (_server.streamFile(dataFile, F(\"application/octet-stream\")) != dataFile.size()) {\r\n Serial.println(F(\"Sent less data than expected!\"));\r\n}\r\ndataFile.close();\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/esp8266/Arduino/issues/8835/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "is_pull_request": false,
        "timeline_events": [
            {
                "event": "commented",
                "actor": "earlephilhower",
                "created_at": "2023-01-27T19:23:25Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "closed",
                "actor": "earlephilhower",
                "created_at": "2023-01-27T19:23:25Z",
                "assignee": null,
                "label": null
            }
        ],
        "comments_data": [
            {
                "id": 1406973341,
                "user": "earlephilhower",
                "body": "The Core libraries only work with this Arduino Core's `File` implementation, not the internal SdFat ones.  They have a different API, etc.\r\n\r\nCheck out the SDFS filesystem which wraps the SdFat internals, and returns a `File` object that the core can work with.  You could also look at the SD library/filesystem as well which also wraps the SdFat lib in an old-style Arduino compatible way.",
                "created_at": "2023-01-27T19:23:25Z",
                "updated_at": "2023-01-27T19:23:25Z",
                "author_association": "COLLABORATOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1406973341/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            }
        ]
    },
    {
        "id": 1559018318,
        "number": 8832,
        "title": "exit status 1",
        "state": "closed",
        "locked": false,
        "assignees": [],
        "labels": [],
        "milestone": null,
        "created_at": "2023-01-27T01:14:51Z",
        "updated_at": "2023-01-27T10:55:38Z",
        "closed_at": "2023-01-27T10:55:37Z",
        "author_association": "NONE",
        "body": "How do i fix this problem?\r\n\r\n#### Platform\r\n\r\n- Hardware:\t\t\t\tESP8266\r\n- Core Version:\t\t\t3.1.1\r\n- Development Env:\t\t[Arduino IDE]\r\n- Operating System:\t\t[Windows]\r\n\r\n### Settings in IDE\r\n\r\n- Module:  \t\t\t[Nodemcu]\r\n- Flash Mode:\t\t\t[qio|dio|other]\r\n- Flash Size: \t\t[4MB]\r\n- lwip Variant:   [v2 Lower Memory]\r\n- Flash Frequency:\t[40Mhz]\r\n- CPU Frequency:\t\t[80Mhz]\r\n- Upload Using:\t\t[SERIAL]\r\n- Upload Speed:   [115200)\r\n\r\n\r\nThe Code\r\n// Fill-in information from your Blynk Template here\r\n#define BLYNK_TEMPLATE_ID \"***********\"\r\n#define BLYNK_DEVICE_NAME \"Energy Monitor\"\r\n#define BLYNK_WIFI_SSID \"***********\"\r\n#define BLYNK_WIFI_PASS \"****************\"\r\n#define BLYNK_AUTH_TOKEN \"******************\"\r\n#define BLYNK_FIRMWARE_VERSION        \"0.1.0\"\r\n\r\n#define BLYNK_PRINT Serial\r\n//#define BLYNK_DEBUG\r\n\r\n#define APP_DEBUG\r\nchar auth[] =  BLYNK_AUTH_TOKEN;\r\nchar ssid[] = \"*********\";\r\nchar pass[] = \"*********\";\r\n// Uncomment your board, or configure a custom board in Settings.h\r\n//#define USE_SPARKFUN_BLYNK_BOARD\r\n#define USE_NODE_MCU_BOARD\r\n//#define USE_WITTY_CLOUD_BOARD\r\n//#define USE_WEMOS_D1_MINI\r\n#include <Blynk.h>\r\n#include \"BlynkEdgent.h\"\r\n#include <ESP8266WiFi.h>\r\n#include <BlynkSimpleEsp8266.h>\r\n#include <Wire.h>\r\n#include <Adafruit_INA219.h>\r\n#include <Adafruit_SSD1306.h>\r\n\r\n/****************************************************************************/\r\n\r\n#define SCREEN_WIDTH 128 // OLED display width, in pixels\r\n#define SCREEN_HEIGHT 64 // OLED display height, in pixels\r\n#define OLED_RESET     -1 // Reset pin # (or -1 if sharing Arduino reset pin)\r\n#define SCREEN_ADDRESS 0x3C ///< See datasheet for Address; 0x3D for 128x64, 0x3C for 128x32\r\n// Declaration for an SSD1306 display connected to I2C (SDA, SCL pins)\r\nAdafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);\r\nAdafruit_INA219 ina219;\r\n\r\nunsigned long previousMillis = 0;\r\nunsigned long interval = 2000;\r\nfloat shuntvoltage = 0.00;\r\nfloat busvoltage = 0.00;\r\nfloat current = 0.00;\r\nfloat loadvoltage = 0.00;\r\nfloat energy = 0.00,  energyCost, energyPrevious, energyDifference;\r\nfloat energyPrice = 6.50 ;\r\nfloat power = 0.00;\r\nfloat capacity = 0.00;\r\n\r\nvoid setup()\r\n{\r\n  Serial.begin(115200);\r\n  while (!Serial) {\r\n    // will pause Zero, Leonardo, etc until serial console opens\r\n    delay(1);\r\n  }\r\n\r\n  uint32_t currentFrequency;\r\n\r\n  Serial.begin(115200);\r\n  // initialize OLED display\r\n  display.begin(SSD1306_SWITCHCAPVCC, 0x3C);\r\n  display.clearDisplay();\r\n  display.setTextColor(WHITE);\r\n  display.setTextSize(1);\r\n  display.setCursor(10, 30);\r\n  display.print(\"IoT Energy Meter\");\r\n  display.display(); \r\n  //Start Blynk 2.0\r\n  BlynkEdgent.begin();\r\n\r\n  // Initialize the INA219.\r\n  // By default the initialization will use the largest range (32V, 2A).  However\r\n  // you can call a setCalibration function to change this range (see comments).\r\n  if (! ina219.begin()) {\r\n    Serial.println(\"Failed to find INA219 chip\");\r\n    while (1) {\r\n      delay(10);\r\n    }\r\n  }\r\n  // To use a slightly lower 32V, 1A range (higher precision on amps):\r\n  //ina219.setCalibration_32V_1A();\r\n  // Or to use a lower 16V, 400mA range (higher precision on volts and amps):\r\n  //ina219.setCalibration_16V_400mA();\r\n\r\n  Serial.println(\"IoT Energy Meter with INA219 ...\");\r\n}\r\n\r\nvoid loop()\r\n{\r\n  BlynkEdgent.run();\r\n  unsigned long currentMillis = millis();\r\n  if (currentMillis - previousMillis >= interval)\r\n  {\r\n    previousMillis = currentMillis;\r\n    ina219values();\r\n    displaydata();\r\n  }\r\n}\r\n\r\n\r\nvoid ina219values()  {\r\n\r\n  shuntvoltage = ina219.getShuntVoltage_mV();\r\n  busvoltage = ina219.getBusVoltage_V();\r\n  current = ina219.getCurrent_mA();\r\n  loadvoltage = busvoltage + (shuntvoltage / 1000);\r\n  power = loadvoltage * current;\r\n  energy = energy + power / 3600; //Wh\r\n  capacity = capacity + current / 1000;\r\n  energyDifference = energy - energyPrevious;\r\n  energyPrevious = energy;\r\n  energyCost = energyCost + (energyPrice / 1000 * energyDifference);\r\n    // Send data to blynk\r\n  Blynk.virtualWrite(V7, current);\r\n  Blynk.virtualWrite(V5, String(\"Rs.\") + String(energyPrice) );\r\n\r\n  // nothing connected? set all to 0, otherwise they float around 0.\r\n\r\n  if (loadvoltage < 1 )loadvoltage = 0;\r\n  if (current < 1 )\r\n  {\r\n    current = 0;\r\n    power = 0;\r\n    energy = 0;\r\n    capacity = 0;\r\n    energyCost=0;\r\n  }\r\n\r\n  Serial.print(\"Bus Voltage:   \"); Serial.print(busvoltage); Serial.println(\" V\");\r\n  Serial.print(\"Shunt Voltage: \"); Serial.print(shuntvoltage); Serial.println(\" mV\");\r\n  Serial.print(\"Load Voltage:  \"); Serial.print(loadvoltage); Serial.println(\" V\");\r\n  Serial.print(\"Current:       \"); Serial.print(current); Serial.println(\" mA\");\r\n  Serial.print(\"Power:         \"); Serial.print(power); Serial.println(\" mW\");\r\n  Serial.print(\"Energy:        \"); Serial.print(energy); Serial.println(\" Wh\");\r\n  Serial.print(\"Capacity:      \"); Serial.print(capacity); Serial.println(\" Ah\");\r\n  Serial.print(\"Energy Cost:   \"); Serial.print(\"Rs. \"); Serial.println(energyCost);\r\n  Serial.println(\"-------------------------\");\r\n}\r\nvoid displaydata() {\r\n  display.clearDisplay();\r\n  display.setTextColor(WHITE);\r\n  display.setTextSize(1);\r\n  // VOLTAGE\r\n  Blynk.virtualWrite(V0, String(loadvoltage, 2) + String(\" V\") );\r\n  display.setCursor(0, 5);\r\n  display.print(loadvoltage, 2);\r\n  display.print(\" V\");\r\n  // CURRENT\r\n  if (current > 1000) {\r\n    Blynk.virtualWrite(V1, String((current / 1000), 2) + String(\" A\") );\r\n    display.setCursor(60, 5);\r\n    display.print((current / 1000), 2);\r\n    display.println(\" A\");\r\n    display.setCursor(0, 15);\r\n    display.println(\"--------------------\");\r\n  }\r\n  else\r\n  {\r\n    Blynk.virtualWrite(V1, String(current, 2) + String(\" mA\"));\r\n    display.setCursor(60, 5);\r\n    display.print(current, 1);\r\n    display.println(\" mA\");\r\n    display.setCursor(0, 15);\r\n    display.println(\"--------------------\");\r\n  }\r\n\r\n\r\n  display.setCursor(60, 20);\r\n  display.print(\"|\");\r\n  display.setCursor(60, 24);\r\n  display.print(\"|\");\r\n  display.setCursor(60, 28);\r\n  display.print(\"|\");\r\n  display.setCursor(60, 32);\r\n  display.print(\"|\");\r\n  display.setCursor(60, 36);\r\n  display.print(\"|\");\r\n  display.setCursor(60, 40);\r\n  display.print(\"|\");\r\n  display.setCursor(0, 46);\r\n  display.print(\"--------------------\");\r\n\r\n  // POWER\r\n  if (power > 1000) {\r\n    Blynk.virtualWrite(V2, String((power / 1000), 2) + String(\" W\") );\r\n    display.setCursor(0, 24);\r\n    display.print(String((power / 1000), 2));\r\n    display.println(\" W\");\r\n  }\r\n  else {\r\n    Blynk.virtualWrite(V2, String(power, 2) + String(\" mW\") );\r\n    display.setCursor(0, 24);\r\n    display.print(power, 2);\r\n    display.println(\" mW\");\r\n  }\r\n\r\n  //Energy Comsumption\r\n  if (energy > 1000) {\r\n    Blynk.virtualWrite(V3, String((energy / 1000), 2) + String(\" kWh\"));\r\n    display.setCursor(0, 36);\r\n    display.print((energy / 1000), 2);\r\n    display.println(\" kWh\");\r\n  }\r\n  else {\r\n    Blynk.virtualWrite(V3, String(energy, 2) + String(\" Wh\"));\r\n    display.setCursor(0, 36);\r\n    display.print(energy, 2);\r\n    display.println(\" Wh\");\r\n  }\r\n\r\n\r\n  // CAPACITY\r\n  if (capacity > 1000) {\r\n    Blynk.virtualWrite(V4, String((capacity / 1000), 2) + String(\" Ah\") );\r\n    display.setCursor(65, 24);\r\n    display.println(\"Capacity:\");\r\n    display.setCursor(65, 36);\r\n    display.print((capacity / 1000), 2);\r\n    display.println(\" Ah\");\r\n    \r\n  }\r\n  else\r\n  {\r\n    Blynk.virtualWrite(V4, String((capacity), 2) + String(\" mAh\") );\r\n    display.setCursor(65, 24);\r\n    display.println(\"Capacity:\");\r\n    display.setCursor(65, 36);\r\n    display.print(capacity, 2);\r\n    display.println(\" Ah\");\r\n \r\n  }\r\n\r\n\r\n  // ENERGY COST\r\n  Blynk.virtualWrite(V6, String(\"Rs.\") + String(energyCost, 5) );\r\n  display.setCursor(10, 54);\r\n  display.print(\"E Cost:Rs \");\r\n  display.println(energyCost, 5);\r\n  display.display();\r\n}\r\n\r\n\r\n### Output Messages\r\n\r\nIn file included from C:\\Users\\asus\\Documents\\Arduino\\Project_Energy_Monitor\\Project_Energy_Monitor.ino:26:\r\nc:\\Users\\asus\\Documents\\Arduino\\libraries\\Blynk\\src/BlynkSimpleEsp8266.h:29:7: error: template argument required for 'class BlynkWifi'\r\n   29 | class BlynkWifi\r\n      |       ^~~~~~~~~\r\nc:\\Users\\asus\\Documents\\Arduino\\libraries\\Blynk\\src/BlynkSimpleEsp8266.h:100:21: error: conflicting declaration 'WiFiClient _blynkWifiClient'\r\n  100 |   static WiFiClient _blynkWifiClient;\r\n      |                     ^~~~~~~~~~~~~~~~\r\nIn file included from C:\\Users\\asus\\Documents\\Arduino\\Project_Energy_Monitor\\BlynkEdgent.h:10,\r\n                 from C:\\Users\\asus\\Documents\\Arduino\\Project_Energy_Monitor\\Project_Energy_Monitor.ino:24:\r\nc:\\Users\\asus\\Documents\\Arduino\\libraries\\Blynk\\src/BlynkSimpleEsp8266_SSL.h:192:27: note: previous declaration as 'BearSSL::WiFiClientSecure _blynkWifiClient'\r\n  192 |   static WiFiClientSecure _blynkWifiClient;\r\n      |                           ^~~~~~~~~~~~~~~~\r\nIn file included from C:\\Users\\asus\\Documents\\Arduino\\Project_Energy_Monitor\\Project_Energy_Monitor.ino:26:\r\nc:\\Users\\asus\\Documents\\Arduino\\libraries\\Blynk\\src/BlynkSimpleEsp8266.h:101:29: error: conflicting declaration 'BlynkArduinoClient _blynkTransport'\r\n  101 |   static BlynkArduinoClient _blynkTransport(_blynkWifiClient);\r\n      |                             ^~~~~~~~~~~~~~~\r\nIn file included from C:\\Users\\asus\\Documents\\Arduino\\Project_Energy_Monitor\\BlynkEdgent.h:10,\r\n                 from C:\\Users\\asus\\Documents\\Arduino\\Project_Energy_Monitor\\Project_Energy_Monitor.ino:24:\r\nc:\\Users\\asus\\Documents\\Arduino\\libraries\\Blynk\\src/BlynkSimpleEsp8266_SSL.h:193:53: note: previous declaration as 'BlynkArduinoClientSecure<BearSSL::WiFiClientSecure> _blynkTransport'\r\n  193 |   static BlynkArduinoClientSecure<WiFiClientSecure> _blynkTransport(_blynkWifiClient);\r\n      |                                                     ^~~~~~~~~~~~~~~\r\nIn file included from C:\\Users\\asus\\Documents\\Arduino\\Project_Energy_Monitor\\Project_Energy_Monitor.ino:26:\r\nc:\\Users\\asus\\Documents\\Arduino\\libraries\\Blynk\\src/BlynkSimpleEsp8266.h:102:13: error: conflicting declaration 'BlynkWifi<...auto...> Blynk'\r\n  102 |   BlynkWifi Blynk(_blynkTransport);\r\n      |             ^~~~~\r\nIn file included from C:\\Users\\asus\\Documents\\Arduino\\Project_Energy_Monitor\\BlynkEdgent.h:10,\r\n                 from C:\\Users\\asus\\Documents\\Arduino\\Project_Energy_Monitor\\Project_Energy_Monitor.ino:24:\r\nc:\\Users\\asus\\Documents\\Arduino\\libraries\\Blynk\\src/BlynkSimpleEsp8266_SSL.h:194:58: note: previous declaration as 'BlynkWifi<BlynkArduinoClientSecure<BearSSL::WiFiClientSecure> > Blynk'\r\n  194 |   BlynkWifi<BlynkArduinoClientSecure<WiFiClientSecure> > Blynk(_blynkTransport);\r\n      |                                                          ^~~~~\r\n\r\nexit status 1\r\n\r\nCompilation error: exit status 1",
        "reactions": {
            "url": "https://api.github.com/repos/esp8266/Arduino/issues/8832/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "is_pull_request": false,
        "timeline_events": [
            {
                "event": "commented",
                "actor": "mcspr",
                "created_at": "2023-01-27T10:55:37Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "closed",
                "actor": "mcspr",
                "created_at": "2023-01-27T10:55:37Z",
                "assignee": null,
                "label": null
            }
        ],
        "comments_data": [
            {
                "id": 1406336460,
                "user": "mcspr",
                "body": "https://github.com/blynkkk/blynk-library/issues ?",
                "created_at": "2023-01-27T10:55:37Z",
                "updated_at": "2023-01-27T10:55:37Z",
                "author_association": "COLLABORATOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1406336460/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            }
        ]
    },
    {
        "id": 1561173755,
        "number": 8836,
        "title": " Irrelevant WiFiClient disconnected by ESPhttpUpdate.update",
        "state": "closed",
        "locked": false,
        "assignees": [],
        "labels": [],
        "milestone": null,
        "created_at": "2023-01-29T07:56:19Z",
        "updated_at": "2023-01-29T16:26:01Z",
        "closed_at": "2023-01-29T12:04:39Z",
        "author_association": "NONE",
        "body": "### Basic Infos\r\n\r\n- [x] This issue complies with the [issue POLICY doc](https://github.com/esp8266/Arduino/blob/master/POLICY.md).\r\n- [X] I have read the documentation at [readthedocs](https://arduino-esp8266.readthedocs.io/en/latest) and the issue is not addressed there.\r\n- [X] I have tested that the issue is present in current master branch (aka latest git).\r\n- [X] I have searched the issue tracker for a similar issue.\r\n- [X] If there is a stack dump, I have decoded it.\r\n- [X] I have filled out all fields below.\r\n\r\n#### Platform\r\n\r\n- Hardware: ESP-12F\r\n- Core Version: 3.0.2 I guess?\r\n- Development Env: PlatformIO\r\n- Operating System: macOS\r\n\r\n### Settings in platformio.ini\r\n\r\n```\r\n[env:nodemcuv2]\r\nplatform = espressif8266\r\nboard = nodemcuv2\r\nframework = arduino\r\nmonitor_speed = 115200\r\nlib_deps = \r\n\tknolleary/PubSubClient@^2.8\r\n```\r\n\r\n### Problem Description\r\n\r\nIn my code I have `WiFiClient espClient` and `WiFiClientSecure updateClient`, and they have irrelevant usage.\r\nWhen `updateClient` is used by `ESPhttpUpdate.update`, `espClient` is disconnected in `ESPhttpUpdate.onProgress`, as you can test in the sketch:\r\n\r\n### [MCVE](https://stackoverflow.com/help/mcve) Sketch\r\n\r\n```\r\n#include \"Arduino.h\"\r\n#include <ESP8266WiFi.h>\r\n#include <ESP8266httpUpdate.h>\r\n#include <PubSubClient.h>\r\n\r\n#define ssid \"ssid\" // Change this\r\n#define password \"password\" // Change this\r\n\r\nString upUrl = \"https://bin.bemfa.com/b/3BcN2Q1NGY4NWFmNDI5NzZlZTNjMjY5M2U2OTJhNmJiNTk=light002.bin\";\r\nchar serverName[] = \"baidu.com\";\r\n\r\nWiFiClient espClient;\r\n\r\nvoid onStart()\r\n{\r\n  Serial.println(\"onStart\");\r\n  Serial.printf(\"WiFiClient is %sconnected.\\r\\n\", espClient.connected() ? \"\" : \"NOT \");\r\n}\r\n\r\nvoid onEnd()\r\n{\r\n  Serial.println(\"onEnd\");\r\n}\r\n\r\nvoid onProgress(int cur, int total)\r\n{\r\n  Serial.printf(\"onProgress at %d of %d bytes.\\r\\n\", cur, total);\r\n  Serial.printf(\"WiFiClient is %sconnected.\\r\\n\", espClient.connected() ? \"\" : \"NOT \");\r\n}\r\n\r\nvoid onError(int err)\r\n{\r\n  Serial.printf(\"onError, err code = %d.\\r\\n\", err);\r\n}\r\n\r\nvoid updateBin()\r\n{\r\n  WiFiClientSecure updateClient;\r\n  updateClient.setInsecure();\r\n\r\n  ESPhttpUpdate.onStart(onStart);\r\n  ESPhttpUpdate.onEnd(onEnd);\r\n  ESPhttpUpdate.onProgress(onProgress);\r\n  ESPhttpUpdate.onError(onError);\r\n\r\n  t_httpUpdate_return ret = ESPhttpUpdate.update(updateClient, upUrl);\r\n  switch (ret)\r\n  {\r\n  case HTTP_UPDATE_FAILED:\r\n    Serial.println(\"HTTP_UPDATE_FAILED\");\r\n    break;\r\n  case HTTP_UPDATE_NO_UPDATES:\r\n    Serial.println(\"HTTP_UPDATE_NO_UPDATES\");\r\n    break;\r\n  case HTTP_UPDATE_OK:\r\n    Serial.println(\"HTTP_UPDATE_OK\");\r\n    break;\r\n  }\r\n}\r\n\r\nvoid setup()\r\n{\r\n  Serial.begin(115200);\r\n  WiFi.begin(ssid, password);\r\n  while (WiFi.status() != WL_CONNECTED)\r\n  {\r\n    delay(500);\r\n    Serial.print(\".\");\r\n  }\r\n  Serial.println(\"\");\r\n\r\n  if (espClient.connect(serverName, 443))\r\n  {\r\n    if (espClient.connected())\r\n    {\r\n      Serial.println(\"Connected to https://baidu.com.\");\r\n    }\r\n    updateBin();\r\n  }\r\n}\r\n\r\nvoid loop()\r\n{\r\n}\r\n```\r\n\r\n### Log\r\n\r\n```\r\n...........\r\nConnected to https://baidu.com.\r\nonStart\r\nWiFiClient is connected.\r\nonProgress at 0 of 305120 bytes.\r\nWiFiClient is NOT connected.\r\nonProgress at 0 of 305120 bytes.\r\nWiFiClient is NOT connected.\r\nonProgress at 4096 of 305120 bytes.\r\nWiFiClient is NOT connected.\r\n...\r\n```\r\n\r\nDid I miss anything or this is normal?\r\nHow do I keep `espClient` CONNECTED during `ESPhttpUpdate.update`? Thank you.",
        "reactions": {
            "url": "https://api.github.com/repos/esp8266/Arduino/issues/8836/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "is_pull_request": false,
        "timeline_events": [
            {
                "event": "commented",
                "actor": "mcspr",
                "created_at": "2023-01-29T12:04:39Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "closed",
                "actor": "mcspr",
                "created_at": "2023-01-29T12:04:39Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "snakeninny",
                "created_at": "2023-01-29T15:27:46Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "mentioned",
                "actor": "mcspr",
                "created_at": "2023-01-29T15:27:46Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "subscribed",
                "actor": "mcspr",
                "created_at": "2023-01-29T15:27:46Z",
                "assignee": null,
                "label": null
            },
            {
                "event": "commented",
                "actor": "mcspr",
                "created_at": "2023-01-29T16:26:01Z",
                "assignee": null,
                "label": null
            }
        ],
        "comments_data": [
            {
                "id": 1407644437,
                "user": "mcspr",
                "body": "> How do I keep espClient CONNECTED during ESPhttpUpdate.update? Thank you.\r\n\r\nShould be fixed \u22653.1.0, see https://github.com/esp8266/Arduino/pull/8598\r\n\r\n> platform = espressif8266\r\n\r\n iirc `pio pkg update` should get you the new version\r\n(https://github.com/platformio/platform-espressif8266/releases/tag/v4.1.0)",
                "created_at": "2023-01-29T12:04:39Z",
                "updated_at": "2023-01-29T12:07:21Z",
                "author_association": "COLLABORATOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1407644437/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1407693298,
                "user": "snakeninny",
                "body": "@mcspr Thanks for the info!\r\nBut the bug persists for me:\r\n```\r\n *  Executing task: platformio run \r\n\r\nProcessing nodemcuv2 (platform: espressif8266; board: esp12e; framework: arduino)\r\n----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\nVerbose mode can be enabled via `-v, --verbose` option\r\nCONFIGURATION: https://docs.platformio.org/page/boards/espressif8266/esp12e.html\r\nPLATFORM: Espressif 8266 (4.1.0) > Espressif ESP8266 ESP-12E\r\nHARDWARE: ESP8266 80MHz, 80KB RAM, 4MB Flash\r\nPACKAGES: \r\n - framework-arduinoespressif8266 @ 3.30101.0 (3.1.1) \r\n - tool-esptool @ 1.413.0 (4.13) \r\n - tool-esptoolpy @ 1.30000.201119 (3.0.0) \r\n - toolchain-xtensa @ 2.100300.220621 (10.3.0)\r\nLDF: Library Dependency Finder -> https://bit.ly/configure-pio-ldf\r\nLDF Modes: Finder ~ chain, Compatibility ~ soft\r\nFound 38 compatible libraries\r\nScanning dependencies...\r\nDependency Graph\r\n|-- PubSubClient @ 2.8.0\r\n|-- ESP8266WiFi @ 1.0\r\n|-- ESP8266httpUpdate @ 1.3\r\n|   |-- ESP8266HTTPClient @ 1.2\r\n|   |   |-- ESP8266WiFi @ 1.0\r\n|   |-- ESP8266WiFi @ 1.0\r\nBuilding in release mode\r\n...\r\n.......\r\nConnected to https://baidu.com.\r\nonStart\r\nWiFiClient is connected.\r\nonProgress at 0 of 305120 bytes.\r\nWiFiClient is NOT connected.\r\nonProgress at 0 of 305120 bytes.\r\nWiFiClient is NOT connected.\r\n...\r\n```\r\nAny ideas?",
                "created_at": "2023-01-29T15:27:46Z",
                "updated_at": "2023-01-29T15:27:46Z",
                "author_association": "NONE",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1407693298/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            },
            {
                "id": 1407708646,
                "user": "mcspr",
                "body": "Ah, it is not server.\r\n\r\nhttps://github.com/esp8266/Arduino/issues/3359 -> https://github.com/esp8266/Arduino/pull/6969\r\n`ESPhttpUpdate.closeConnectionsOnUpdate(false);`\r\n\r\nhttps://github.com/esp8266/Arduino/blob/e25f9e95783d6de59d6b3b7b4ebc029428c9b539/libraries/ESP8266httpUpdate/src/ESP8266httpUpdate.h#L100",
                "created_at": "2023-01-29T16:26:01Z",
                "updated_at": "2023-01-29T16:26:01Z",
                "author_association": "COLLABORATOR",
                "reactions": {
                    "url": "https://api.github.com/repos/esp8266/Arduino/issues/comments/1407708646/reactions",
                    "total_count": 1,
                    "+1": 1,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            }
        ]
    }
]