[
    {
        "url": "https://api.github.com/repos/esp8266/Arduino/issues/9196",
        "repository_url": "https://api.github.com/repos/esp8266/Arduino",
        "labels_url": "https://api.github.com/repos/esp8266/Arduino/issues/9196/labels{/name}",
        "comments_url": "https://api.github.com/repos/esp8266/Arduino/issues/9196/comments",
        "events_url": "https://api.github.com/repos/esp8266/Arduino/issues/9196/events",
        "html_url": "https://github.com/esp8266/Arduino/pull/9196",
        "id": 2495869757,
        "node_id": "PR_kwDOAfcSBM5553le",
        "number": 9196,
        "title": "Fix #9194 - Allow more control over crash dump",
        "user": {
            "login": "DRSDavidSoft",
            "id": 4673812,
            "node_id": "MDQ6VXNlcjQ2NzM4MTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4673812?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DRSDavidSoft",
            "html_url": "https://github.com/DRSDavidSoft",
            "followers_url": "https://api.github.com/users/DRSDavidSoft/followers",
            "following_url": "https://api.github.com/users/DRSDavidSoft/following{/other_user}",
            "gists_url": "https://api.github.com/users/DRSDavidSoft/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DRSDavidSoft/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DRSDavidSoft/subscriptions",
            "organizations_url": "https://api.github.com/users/DRSDavidSoft/orgs",
            "repos_url": "https://api.github.com/users/DRSDavidSoft/repos",
            "events_url": "https://api.github.com/users/DRSDavidSoft/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DRSDavidSoft/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-08-30T00:11:25Z",
        "updated_at": "2024-08-30T15:49:06Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/esp8266/Arduino/pulls/9196",
            "html_url": "https://github.com/esp8266/Arduino/pull/9196",
            "diff_url": "https://github.com/esp8266/Arduino/pull/9196.diff",
            "patch_url": "https://github.com/esp8266/Arduino/pull/9196.patch",
            "merged_at": null
        },
        "body": "@mcspr This is a proof of concept PR for an alternative solution to #9193 and also closes #9194. Could you please verify? I would appreciate any input and feedback. Thanks!\r\n\r\n### Description\r\nThis PR adds more granular control over how the crash dump is delivered, and some more features:\r\n- **`custom_panic_callback(panic_file, panic_line, panic_func, panic_what)`:** Allows the user to additionally listen for panics (useful to record them in flash memory)\r\n- **`ets_uart_putc1()` \u2192 `crash_ets_uart_putc1()`:** renamed function that prints to the Serial port. This allows the function to be overridden, possibly applying transformations on the text (useful if transmitting over a Bus-like UART, such as RS-485), remove clutter or insert additional comments (such as uptime), or completely inhibit the dump (useful is uart is connected to a peripheral device)\r\n- **`NO_CUT_HERE`:** Introduce a macro that allows disabling the \"CUT HERE\" message and the divider lines. Can be used to minify the number of transmitted/recorded characters over the wire or storage. Can be used with the `-D` flag.\r\n- **`ets_println()` instead of `ets_putc('\\n')`:** This makes the new lines use the \"cooked\" interface instead of the \"raw\" one, which is also used on the static `ets_printf_P()` function, which allows:\r\n    - uniform line endings (always \"\\r\\n\", instead of just the ones used within `printf_P(...)`\r\n    - making the line endings also silent when the `crash_ets_uart_putc1()` is overriden\r\n- **`rst_info.exccause`** used instead of local `exccause` for the `6` exception (divide by zero): unless I'm missing something, this allows the custom_crash_handler at the end of the postmortem function to also receive a correct exception number. Useful for projects such as EspCrashSave and EspCrashSaveSpiffs\r\n\r\n### Additional notes\r\nThe naming of some functions might not be the optimal value, if you would like to suggest a better one please either modify this PR or submit a comment.",
        "reactions": {
            "url": "https://api.github.com/repos/esp8266/Arduino/issues/9196/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/esp8266/Arduino/issues/9196/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/esp8266/Arduino/issues/9194",
        "repository_url": "https://api.github.com/repos/esp8266/Arduino",
        "labels_url": "https://api.github.com/repos/esp8266/Arduino/issues/9194/labels{/name}",
        "comments_url": "https://api.github.com/repos/esp8266/Arduino/issues/9194/comments",
        "events_url": "https://api.github.com/repos/esp8266/Arduino/issues/9194/events",
        "html_url": "https://github.com/esp8266/Arduino/issues/9194",
        "id": 2490858994,
        "node_id": "I_kwDOAfcSBM6Ud33y",
        "number": 9194,
        "title": "Feature Request: Don't print stack trace to Serial on crash",
        "user": {
            "login": "DRSDavidSoft",
            "id": 4673812,
            "node_id": "MDQ6VXNlcjQ2NzM4MTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4673812?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DRSDavidSoft",
            "html_url": "https://github.com/DRSDavidSoft",
            "followers_url": "https://api.github.com/users/DRSDavidSoft/followers",
            "following_url": "https://api.github.com/users/DRSDavidSoft/following{/other_user}",
            "gists_url": "https://api.github.com/users/DRSDavidSoft/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DRSDavidSoft/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DRSDavidSoft/subscriptions",
            "organizations_url": "https://api.github.com/users/DRSDavidSoft/orgs",
            "repos_url": "https://api.github.com/users/DRSDavidSoft/repos",
            "events_url": "https://api.github.com/users/DRSDavidSoft/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DRSDavidSoft/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-08-28T03:18:11Z",
        "updated_at": "2024-08-29T15:08:41Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Basic Infos\r\n\r\n- [x] This issue complies with the [issue POLICY doc](https://github.com/esp8266/Arduino/blob/master/POLICY.md).\r\n- [x] I have read the documentation at [readthedocs](https://arduino-esp8266.readthedocs.io/en/latest) and the issue is not addressed there.\r\n- [x] I have tested that the issue is present in current master branch (aka latest git).\r\n- [x] I have searched the issue tracker for a similar issue.\r\n- [N/A] If there is a stack dump, I have decoded it.\r\n- [x] I have filled out all fields below.\r\n\r\n#### Platform\r\n\r\n- Hardware:\t\t\t\tESP8266\r\n- Core Version:\t\t\t3.1.2 (latest)\r\n- Development Env:\t\tVS Code + Microsoft Arduino Extension\r\n- Operating System:\t\tWindows\r\n\r\n### Settings in IDE\r\n\r\n- Module:  \t\t\tGeneric ESP8266 Module\r\n\r\n### Problem Description\r\n\r\nHi there, I'm trying to change the behavior of the `postmortem_report()` call not to print anything to the Serial upon a crash. The serial port in question is connected to a peripherical and is not used for debugging purposes.\r\n\r\nSo far, my efforts in #9193 have been unsuccessful. I am unable to override the `postmortem_report()` call via my code.\r\n\r\nThis got me thinking, can you possibly please introduce a new flag that would prevent the default function from being defined, or avoid printing to the serial? Currently the `custom_crash_callback()` callback is called _after_ the `postmortem_report()` has finished printing to the Serial port.\r\n\r\nThe addition of this would be awesome.\r\n\r\nThank you for the project!\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/esp8266/Arduino/issues/9194/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/esp8266/Arduino/issues/9194/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/esp8266/Arduino/issues/9191",
        "repository_url": "https://api.github.com/repos/esp8266/Arduino",
        "labels_url": "https://api.github.com/repos/esp8266/Arduino/issues/9191/labels{/name}",
        "comments_url": "https://api.github.com/repos/esp8266/Arduino/issues/9191/comments",
        "events_url": "https://api.github.com/repos/esp8266/Arduino/issues/9191/events",
        "html_url": "https://github.com/esp8266/Arduino/pull/9191",
        "id": 2471983095,
        "node_id": "PR_kwDOAfcSBM54qdUI",
        "number": 9191,
        "title": "fix links in station-class.rst",
        "user": {
            "login": "gregsadetsky",
            "id": 1017304,
            "node_id": "MDQ6VXNlcjEwMTczMDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1017304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gregsadetsky",
            "html_url": "https://github.com/gregsadetsky",
            "followers_url": "https://api.github.com/users/gregsadetsky/followers",
            "following_url": "https://api.github.com/users/gregsadetsky/following{/other_user}",
            "gists_url": "https://api.github.com/users/gregsadetsky/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gregsadetsky/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gregsadetsky/subscriptions",
            "organizations_url": "https://api.github.com/users/gregsadetsky/orgs",
            "repos_url": "https://api.github.com/users/gregsadetsky/repos",
            "events_url": "https://api.github.com/users/gregsadetsky/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gregsadetsky/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-08-18T13:50:58Z",
        "updated_at": "2024-08-18T13:50:58Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/esp8266/Arduino/pulls/9191",
            "html_url": "https://github.com/esp8266/Arduino/pull/9191",
            "diff_url": "https://github.com/esp8266/Arduino/pull/9191.diff",
            "patch_url": "https://github.com/esp8266/Arduino/pull/9191.patch",
            "merged_at": null
        },
        "body": "fix 404 links",
        "reactions": {
            "url": "https://api.github.com/repos/esp8266/Arduino/issues/9191/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/esp8266/Arduino/issues/9191/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/esp8266/Arduino/issues/9187",
        "repository_url": "https://api.github.com/repos/esp8266/Arduino",
        "labels_url": "https://api.github.com/repos/esp8266/Arduino/issues/9187/labels{/name}",
        "comments_url": "https://api.github.com/repos/esp8266/Arduino/issues/9187/comments",
        "events_url": "https://api.github.com/repos/esp8266/Arduino/issues/9187/events",
        "html_url": "https://github.com/esp8266/Arduino/issues/9187",
        "id": 2442367915,
        "node_id": "I_kwDOAfcSBM6Rk5Or",
        "number": 9187,
        "title": "Missing eagle.flash.16m.ld",
        "user": {
            "login": "jwrw",
            "id": 28903693,
            "node_id": "MDQ6VXNlcjI4OTAzNjkz",
            "avatar_url": "https://avatars.githubusercontent.com/u/28903693?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jwrw",
            "html_url": "https://github.com/jwrw",
            "followers_url": "https://api.github.com/users/jwrw/followers",
            "following_url": "https://api.github.com/users/jwrw/following{/other_user}",
            "gists_url": "https://api.github.com/users/jwrw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jwrw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jwrw/subscriptions",
            "organizations_url": "https://api.github.com/users/jwrw/orgs",
            "repos_url": "https://api.github.com/users/jwrw/repos",
            "events_url": "https://api.github.com/users/jwrw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jwrw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 194072440,
                "node_id": "MDU6TGFiZWwxOTQwNzI0NDA=",
                "url": "https://api.github.com/repos/esp8266/Arduino/labels/component:%20tools",
                "name": "component: tools",
                "color": "bfe5bf",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-08-01T12:47:12Z",
        "updated_at": "2024-08-30T14:58:42Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "[Issue will only be an problem for 16M boards]\r\n\r\nThe linker file packages/esp8266/hardware/esp8266/3.1.2/tools/sdk/ld/eagle.flash.16m.ld is missing and is required for the Flash configuration 'FS:none'.  The eagle.flash.16m14m.ld and eagle.flash.16m15m.ld files are there for the 'FS:14M' and 'FS:15M' but unlike the ld files for every other size of board there is no eagle.flash.16m.ld.  Python bug???\r\n\r\nVerified on a 'Wemos D1 Mini Pro'.  For configuration 'FS:none' the sketch fails during the linker phase of the build.\r\n\r\nArduino IDE: 2.3.2\r\nesp8266: 3.1.2",
        "reactions": {
            "url": "https://api.github.com/repos/esp8266/Arduino/issues/9187/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/esp8266/Arduino/issues/9187/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/esp8266/Arduino/issues/9186",
        "repository_url": "https://api.github.com/repos/esp8266/Arduino",
        "labels_url": "https://api.github.com/repos/esp8266/Arduino/issues/9186/labels{/name}",
        "comments_url": "https://api.github.com/repos/esp8266/Arduino/issues/9186/comments",
        "events_url": "https://api.github.com/repos/esp8266/Arduino/issues/9186/events",
        "html_url": "https://github.com/esp8266/Arduino/pull/9186",
        "id": 2441308997,
        "node_id": "PR_kwDOAfcSBM53Dwxg",
        "number": 9186,
        "title": "upload.py - exception handling fixes",
        "user": {
            "login": "mcspr",
            "id": 132763,
            "node_id": "MDQ6VXNlcjEzMjc2Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/132763?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mcspr",
            "html_url": "https://github.com/mcspr",
            "followers_url": "https://api.github.com/users/mcspr/followers",
            "following_url": "https://api.github.com/users/mcspr/following{/other_user}",
            "gists_url": "https://api.github.com/users/mcspr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mcspr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mcspr/subscriptions",
            "organizations_url": "https://api.github.com/users/mcspr/orgs",
            "repos_url": "https://api.github.com/users/mcspr/repos",
            "events_url": "https://api.github.com/users/mcspr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mcspr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-08-01T02:40:32Z",
        "updated_at": "2024-08-01T02:53:10Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/esp8266/Arduino/pulls/9186",
            "html_url": "https://github.com/esp8266/Arduino/pull/9186",
            "diff_url": "https://github.com/esp8266/Arduino/pull/9186.diff",
            "patch_url": "https://github.com/esp8266/Arduino/pull/9186.patch",
            "merged_at": null
        },
        "body": "don't check exc_info() in `finally`, after `except Exception as e:` block sys module stops tracking it\r\nhttps://docs.python.org/3/reference/compound_stmts.html#try\r\nhttps://docs.python.org/3/library/sys.html#sys.exception\r\n\r\n#8603 caused error to appear in the log, but build itself was never stopped properly",
        "reactions": {
            "url": "https://api.github.com/repos/esp8266/Arduino/issues/9186/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/esp8266/Arduino/issues/9186/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/esp8266/Arduino/issues/9172",
        "repository_url": "https://api.github.com/repos/esp8266/Arduino",
        "labels_url": "https://api.github.com/repos/esp8266/Arduino/issues/9172/labels{/name}",
        "comments_url": "https://api.github.com/repos/esp8266/Arduino/issues/9172/comments",
        "events_url": "https://api.github.com/repos/esp8266/Arduino/issues/9172/events",
        "html_url": "https://github.com/esp8266/Arduino/pull/9172",
        "id": 2430938173,
        "node_id": "PR_kwDOAfcSBM52gzSN",
        "number": 9172,
        "title": "ESP8266WebServer: pathArgs() to complement pathArg(N)",
        "user": {
            "login": "mcspr",
            "id": 132763,
            "node_id": "MDQ6VXNlcjEzMjc2Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/132763?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mcspr",
            "html_url": "https://github.com/mcspr",
            "followers_url": "https://api.github.com/users/mcspr/followers",
            "following_url": "https://api.github.com/users/mcspr/following{/other_user}",
            "gists_url": "https://api.github.com/users/mcspr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mcspr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mcspr/subscriptions",
            "organizations_url": "https://api.github.com/users/mcspr/orgs",
            "repos_url": "https://api.github.com/users/mcspr/repos",
            "events_url": "https://api.github.com/users/mcspr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mcspr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-07-25T20:36:46Z",
        "updated_at": "2024-07-26T03:25:27Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/esp8266/Arduino/pulls/9172",
            "html_url": "https://github.com/esp8266/Arduino/pull/9172",
            "diff_url": "https://github.com/esp8266/Arduino/pull/9172.diff",
            "patch_url": "https://github.com/esp8266/Arduino/pull/9172.patch",
            "merged_at": null
        },
        "body": "similar to ::args(), returns number of parsed path arguments\r\nresolve #9100",
        "reactions": {
            "url": "https://api.github.com/repos/esp8266/Arduino/issues/9172/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/esp8266/Arduino/issues/9172/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/esp8266/Arduino/issues/9170",
        "repository_url": "https://api.github.com/repos/esp8266/Arduino",
        "labels_url": "https://api.github.com/repos/esp8266/Arduino/issues/9170/labels{/name}",
        "comments_url": "https://api.github.com/repos/esp8266/Arduino/issues/9170/comments",
        "events_url": "https://api.github.com/repos/esp8266/Arduino/issues/9170/events",
        "html_url": "https://github.com/esp8266/Arduino/issues/9170",
        "id": 2425737426,
        "node_id": "I_kwDOAfcSBM6QldDS",
        "number": 9170,
        "title": "Disabled TLS secure renegotiation prevents mutual auth from succeeding",
        "user": {
            "login": "randomdude",
            "id": 1230817,
            "node_id": "MDQ6VXNlcjEyMzA4MTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1230817?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/randomdude",
            "html_url": "https://github.com/randomdude",
            "followers_url": "https://api.github.com/users/randomdude/followers",
            "following_url": "https://api.github.com/users/randomdude/following{/other_user}",
            "gists_url": "https://api.github.com/users/randomdude/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/randomdude/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/randomdude/subscriptions",
            "organizations_url": "https://api.github.com/users/randomdude/orgs",
            "repos_url": "https://api.github.com/users/randomdude/repos",
            "events_url": "https://api.github.com/users/randomdude/events{/privacy}",
            "received_events_url": "https://api.github.com/users/randomdude/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-07-23T17:32:00Z",
        "updated_at": "2024-07-25T20:06:03Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Basic Infos\r\n\r\n- [X] This issue complies with the [issue POLICY doc](https://github.com/esp8266/Arduino/blob/master/POLICY.md).\r\n- [X] I have read the documentation at [readthedocs](https://arduino-esp8266.readthedocs.io/en/latest) and the issue is not addressed there.\r\n- [X] I have tested that the issue is present in current master branch (aka latest git).\r\n- [X] I have searched the issue tracker for a similar issue.\r\n- [ N/A ] If there is a stack dump, I have decoded it.\r\n- [X] I have filled out all fields below.\r\n\r\n#### Platform\r\n\r\n- Hardware:\t\t\t\t\t[ESP8266]\r\n- Core Version:\t\t\t[7e0d20e2b9034994f573a236364e0aef17fd66de]\r\n- Development Env:\t\t[VSMicro]\r\n- Operating System:\t\t[Windows]\r\n\r\n### Settings in IDE\r\n\r\n- Module:  \t\t\t[nodemcu]\r\n- Flash Mode:\t\t\t[idk]\r\n- Flash Size: \t\t[4MB]\r\n- lwip Variant:   [v2 Lower Memory]\r\n- Reset Method:\t\t[nodemcu]\r\n- Flash Frequency:\t[40MHz]\r\n- CPU Frequency:\t\t[160MHz]\r\n- Upload Using:\t\t[SERIAL]\r\n- Upload Speed:   [115200] (serial upload only)\r\n\r\n\r\n### Problem Description\r\n\r\nIt seems that #6165 has broken mutual TLS authentication, with the esp8266 acting as a client, in some scenarios.\r\n\r\nI'm attempting to connect to a TLS1.2-enabled apache server from an esp8266 via HTTPS. The server is configured such that it requires that the esp8266 presents a client certificate (ie, I call `WiFiClientSecure.setClientRSACert` with an appropriately-authorized certificate prior to connection). However, I found that requests would fail, even when a similar request, with the same keys, would succeed when attempted from my Windows desktop.\r\n\r\nI observed the following in my Arduino sketch:\r\n\r\n* `HTTPClient.GET` returning -5, ('connection lost')\r\n* `WiFiClientSecure.getLastSSLError` returning 40 ('SSL received fatal alert - Decoding error: extraneous element.')\r\n\r\nAnd in my server (apache) logs:\r\n\r\n```\r\n[Tue Jul 23 15:12:57.102589 2024] [ssl:info] [pid 2206:tid 139638655448832] [client 172.17.0.1:59408] AH01964: Connection to child 16 established (server localhost:443)\r\n[Tue Jul 23 15:12:57.102766 2024] [ssl:debug] [pid 2206:tid 139638655448832] ssl_engine_kernel.c(2372): [client 172.17.0.1:59408] AH02043: SSL virtual host for servername dev.home.gamesfairy.co.uk found\r\n[Tue Jul 23 15:12:57.400923 2024] [ssl:debug] [pid 2206:tid 139638655448832] ssl_engine_kernel.c(2254): [client 172.17.0.1:59408] AH02041: Protocol: TLSv1.2, Cipher: AES128-SHA256 (128/128 bits)\r\n[Tue Jul 23 15:12:58.422204 2024] [ssl:debug] [pid 2206:tid 139638655448832] ssl_engine_kernel.c(415): [client 172.17.0.1:59408] AH02034: Initial (No.1) HTTPS request received for child 16 (server dev.home.gamesfairy.co.uk:443)\r\n[Tue Jul 23 15:12:58.422284 2024] [ssl:debug] [pid 2206:tid 139638655448832] ssl_engine_kernel.c(782): [client 172.17.0.1:59408] AH02255: Changed client verification type will force renegotiation\r\n[Tue Jul 23 15:12:58.479827 2024] [ssl:info] [pid 2206:tid 139638655448832] [client 172.17.0.1:59408] AH02221: Requesting connection re-negotiation\r\n[Tue Jul 23 15:12:58.479887 2024] [ssl:debug] [pid 2206:tid 139638655448832] ssl_engine_kernel.c(984): [client 172.17.0.1:59408] AH02260: Performing full renegotiation: complete handshake protocol (client does support secure renegotiation)\r\n[Tue Jul 23 15:12:58.479969 2024] [ssl:debug] [pid 2206:tid 139638655448832] ssl_engine_kernel.c(2254): [client 172.17.0.1:59408] AH02041: Protocol: TLSv1.2, Cipher: AES128-SHA256 (128/128 bits)\r\n[Tue Jul 23 15:12:58.479976 2024] [ssl:info] [pid 2206:tid 139638655448832] [client 172.17.0.1:59408] AH02226: Awaiting re-negotiation handshake\r\n[Tue Jul 23 15:12:58.491621 2024] [ssl:error] [pid 2206:tid 139638655448832] [client 172.17.0.1:59408] AH02261: Re-negotiation handshake failed\r\n[Tue Jul 23 15:12:58.491652 2024] [ssl:error] [pid 2206:tid 139638655448832] SSL Library Error: error:14094153:SSL routines:ssl3_read_bytes:no renegotiation\r\n[Tue Jul 23 15:12:58.491673 2024] [ssl:debug] [pid 2206:tid 139638655448832] ssl_engine_io.c(1368): [client 172.17.0.1:59408] AH02007: SSL handshake interrupted by system [Hint: Stop button pressed in browser?!]\r\n[Tue Jul 23 15:12:58.491678 2024] [ssl:info] [pid 2206:tid 139638655448832] [client 172.17.0.1:59408] AH01998: Connection closed to child 16 with abortive shutdown (server dev.home.gamesfairy.co.uk:443)\r\n```\r\n(please forgive my verbosity here - I'm trying to maximise discoverability in case any one else encounters the same issue).\r\n\r\nAfter much troubleshooting, I found this to be a consequence of the linked PR. I am no TLS guru, but I believe that the server will trigger a secure renegotiation once the HTTP headers are received, once it has determined the appropriate vhost to route to. This means it can request the client to authenticate on a per-vhost basis. The linked PR, however, disables renegotiation, and thus the handshake fails. I found this by dumping (and decrypting) the TLS traffic:\r\n\r\n![image](https://github.com/user-attachments/assets/1677c22e-9599-4efe-beb8-e9659d47bb4b)\r\n\r\nAs you can see, the esp8266 (`172.17.0.1`) sends the HTTP headers, and then sends a warning to the server, stating that renegotiation is not supported. The server then terminates the connection.\r\n\r\nReverting #6165 and relevant parts of #6065 appeared to resolve my issue on my install of esp8266 v3.1.2, as the secure renegotiation succeeded, the client is authenticated correctly, and the HTTP request is performed with no problem.\r\n\r\nHowever, in the process of filing this bug, I attempted the same 'dirty hack' on the current git branch (see version hash above), where I was unfortunately met with a stack overflow deep within BearSSL. My TLS/BearSSL skills aren't enough for me to progress this any further.\r\n\r\n```\r\nstate: 0 -> 2 (b0)\r\n.state: 2 -> 3 (0)\r\nstate: 3 -> 5 (10)\r\nadd 0\r\naid 1\r\ncnt \r\n\r\nconnected with stripysocks, channel 11\r\ndhcp client start...\r\nip:192.168.90.170,mask:255.255.255.0,gw:192.168.90.251\r\n.Waiting for NTP time sync: ...................pm open,type:2 0\r\n............\r\nCurrent time: Tue Jul 23 16:24:17 2024\r\nBSSL:_connectSSL: start connection\r\nBSSL:Connected!\r\n[HTTP-Client][sendRequest] type: 'GET' redirCount: 0\r\nBSSL:_connectSSL: start connection\r\nBSSL:Connected!\r\n[HTTP-Client] connected to dev.home.gamesfairy.co.uk:443\r\n[HTTP-Client] sending request header\r\n-----\r\nGET / HTTP/1.1\r\nHost: dev.home.gamesfairy.co.uk\r\nUser-Agent: ESP8266HTTPClient\r\nAccept-Encoding: identity;q=1,chunked;q=0.1,*;q=0\r\nConnection: keep-alive\r\nContent-Length: 0\r\n\r\n-----\r\n\r\nTo make this dump useful, DECODE IT - https://tinyurl.com/8266dcdr\r\n--------------- CUT HERE FOR EXCEPTION DECODER ---------------\r\n\r\nStack overflow detected\r\n\r\n>>>stack>>>\r\n\r\nctx: bearssl\r\nsp: 3fff1768 end: 3fff2200 offset: 0000\r\n3fff1768:  00000001 40100184 00000000 00000000  \r\n3fff1778:  3ffe8654 4020821d 3fff1946 3fff18ba  \r\n3fff1788:  3fff182e 40222602 00000396 3fff1c72  \r\n3fff1798:  00000002 4022fbdd 04440002 73733d0b  \r\n3fff17a8:  193508c3 0a513d9b 4ef70260 6ffe1723  \r\n3fff17b8:  13062e0a 15437d64 0bf301af 313f473a  \r\n3fff17c8:  595d010d 3e557911 2a727687 14e57786  \r\n3fff17d8:  6d33680a 288a25b3 422b79e9 7f516f5e  \r\n3fff17e8:  10a251a2 2e2d6201 5d4712b3 657d455b  \r\n3fff17f8:  104116d7 5fdf02a3 41003d1b 6904478f  \r\n3fff1808:  76c02c6f 5ded01a8 448c208d 28eb69cb  \r\n3fff1818:  4aff5f91 034517a4 2d465f0c 297b0cf8  \r\n3fff1828:  1afe266d 0444000c 04a9288b 4f1a4aa8  \r\n3fff1838:  05306950 381e0bf7 3e491b66 04bc1bca  \r\n3fff1848:  428a6ee2 759e3ff3 42fb7558 61564464  \r\n3fff1858:  5c142d5d 198336f1 0d27105b 65534b1c  \r\n3fff1868:  6b7f44ff 2e761abf 67c9470a 16e03b2a  \r\n3fff1878:  43ea45cb 62cb2324 0e172d9e 7a782d8b  \r\n3fff1888:  3986093a 7a537e82 37a457d4 0fba01b8  \r\n3fff1898:  3d8c5cf6 30e434f9 444c4199 3b2d47d8  \r\n3fff18a8:  22a856c1 65fa3ca6 534971c4 310f2799  \r\n3fff18b8:  04440007 59943a49 22267934 203b3dfa  \r\n3fff18c8:  676e72a2 6dff1144 0e4d09ce 50cb03d1  \r\n3fff18d8:  51cf08f9 1f5f34e6 4a7d680e 7dee5e7f  \r\n3fff18e8:  0cca766d 0a641b42 406a5bad 387606b7  \r\n3fff18f8:  142d1ab8 61ff1614 1fc965c2 252760f5  \r\n3fff1908:  302d663d 6b363353 010f7ace 27d3169f  \r\n3fff1918:  3f8235a0 01094260 492853f2 107b6c01  \r\n3fff1928:  5949584f 046a71c8 79df390e 407c03dc  \r\n3fff1938:  523a31a0 12de46c7 2f25715e 0444000e  \r\n3fff1948:  747634bf 179626e1 61c919fc 3ba35d43  \r\n3fff1958:  27353093 4ac01984 7ec352b1 673e47b0  \r\n3fff1968:  5d5158fe 1d9170f3 19c8375e 1aad6fe9  \r\n3fff1978:  4f5812e3 740b32a5 58ee4fb5 738434c9  \r\n3fff1988:  1e7c21d3 6f304fbb 6bae0643 7cb96a5a  \r\n3fff1998:  27d722cb 5f9f7f1b 3d5d4a6a 28c013b7  \r\n3fff19a8:  23244ec4 38fd6c4c 5e7d0787 02447e9d  \r\n3fff19b8:  64ea2079 43753018 05e52256 4cfe63b8  \r\n3fff19c8:  176850b9 78b669d2 04440003 207a521a  \r\n3fff19d8:  434432ad 6b58346c 0ecc42dc 2f4e7545  \r\n3fff19e8:  4b8c1b9d 64245f3f 3d595901 64d606d1  \r\n3fff19f8:  32eb5589 172d77d5 03093c60 5fd60744  \r\n3fff1a08:  5a534c67 788a3700 26a059ce 7aa03716  \r\n3fff1a18:  487f36d7 6da95fdd 0aa771e6 38f51f05  \r\n3fff1a28:  6a0c72c9 78d52244 01057405 15494d35  \r\n3fff1a38:  0de97538 6aa91a38 0ab37fef 2c764651  \r\n3fff1a48:  6335682c 60aa4044 3b447a5b 368a2c52  \r\n3fff1a58:  06b136d7 04440002 207a521a 434432ad  \r\n3fff1a68:  6b58346c 0ecc42dc 2f4e7545 4b8c1b9d  \r\n3fff1a78:  64245f3f 3d595901 64d606d1 32eb5589  \r\n3fff1a88:  172d77d5 03093c60 5fd60744 5a534c67  \r\n3fff1a98:  788a3700 26a059ce 7aa03716 487f36d7  \r\n3fff1aa8:  6da95fdd 0aa771e6 38f51f05 6a0c72c9  \r\n3fff1ab8:  78d52244 01057405 15494d35 0de97538  \r\n3fff1ac8:  6aa91a38 0ab37fef 2c764651 6335682c  \r\n3fff1ad8:  60aa4044 3b447a5b 368a2c52 06b136d7  \r\n3fff1ae8:  04440002 3f7e3a25 64cf508f 137f015b  \r\n3fff1af8:  62641e67 0514750c 718e3ca2 0b2479db  \r\n3fff1b08:  11cb13d9 14e82d66 641912d1 6f84215b  \r\n3fff1b18:  016e4c1a 36aa173d 6cec2bb7 33aa0b3f  \r\n3fff1b28:  79e874fb 26567745 0bfe07df 1ab76c3a  \r\n3fff1b38:  43db5bde 180378e0 0148494a 4f8418e3  \r\n3fff1b48:  19be4adc 2db92d1b 6c5a69ec 02220ce7  \r\n3fff1b58:  5a740837 6dc47373 74a6183b 3bf900a5  \r\n3fff1b68:  61bc735d 28d4782b 63020eb6 0444000a  \r\n3fff1b78:  44682bec 158b79c2 4dff553d 7c0f7ee1  \r\n3fff1b88:  1a331e27 335941e5 42a17351 1cb92b3b  \r\n3fff1b98:  65797592 278609c1 7a985a4c 0ecf5fdf  \r\n3fff1ba8:  025329d8 10923f7c 21f07a2c 04d76f30  \r\n3fff1bb8:  051428de 3ad1587d 6fe62fa6 7a932004  \r\n3fff1bc8:  550512d8 7cb11fff 21770e47 1b2a1c30  \r\n3fff1bd8:  02100fcb 61491751 243533f6 72f906c9  \r\n3fff1be8:  71c15870 29db6ca3 098a5afc 49783bbd  \r\n3fff1bf8:  524d0f84 5f224b90 04440003 70830617  \r\n3fff1c08:  79404d67 4c577841 176d5312 6a1d3e56  \r\n3fff1c18:  2a6f0464 20bd3365 02a35f28 32113a67  \r\n3fff1c28:  0ee36bfd 1e355df0 7aad0565 37ca6819  \r\n3fff1c38:  3fc1038d 1753194c 5fb11507 4a253f71  \r\n3fff1c48:  297a6ae4 6fb104c6 788311ca 5df80691  \r\n3fff1c58:  041b4d53 3b9a54d3 66b93f5c 69e32ca6  \r\n3fff1c68:  7dfe7b29 1eb41f34 71ee5cc1 7f7069d6  \r\n3fff1c78:  556965a7 5dc04e0f 40472b4b 465060e3  \r\n3fff1c88:  6fa95dc0 04440008 6ebf23f4 3145410f  \r\n3fff1c98:  665321fa 25b87d72 15464f57 7ed57f9d  \r\n3fff1ca8:  67c02155 5f737b4f 1329581c 49c07327  \r\n3fff1cb8:  18b069a0 2be14d3f 4e0322bf 11750cb7  \r\n3fff1cc8:  0d00487b 4bfb36f2 421d1dfe 54140988  \r\n3fff1cd8:  63971e79 4a0e13fc 508b1bcc 70af3603  \r\n3fff1ce8:  6e5a45be 04eb7364 7b2f149f 30221e36  \r\n3fff1cf8:  5f0a104d 535d34a5 384d212a 0a4c2e00  \r\n3fff1d08:  35af783b 2c481855 783b1bb4 152b1ccf  \r\n3fff1d18:  04440001 6d391f3f 470a3b58 7cfc66dc  \r\n3fff1d28:  30ea00b0 35e449aa 26e64b3a 05fd3635  \r\n3fff1d38:  4ae478d3 33fc3861 34a02e1d 273d4160  \r\n3fff1d48:  66c56645 68274b49 76ea2b31 3b5f3a10  \r\n3fff1d58:  05197258 2147344f 154a3b45 35170e85  \r\n3fff1d68:  72a54339 55192314 415e7a93 60422a48  \r\n3fff1d78:  564b3996 35626716 21376ee9 446062f4  \r\n3fff1d88:  17df36e1 34bc5d6f 012a61a7 74405928  \r\n3fff1d98:  1e6a0fbe 18fc4117 6dd012dd 04440008  \r\n3fff1da8:  70fa61e4 5a5e7598 174643ba 24a579ca  \r\n3fff1db8:  07ec1805 7ec6669e 57c61c6a 793e3e39  \r\n3fff1dc8:  60b95edd 6f287276 09e85186 03b626d7  \r\n3fff1dd8:  5aa14342 6ec10c24 58890f01 4fc838e4  \r\n3fff1de8:  477112d2 0a2c2e66 338234c4 49076eee  \r\n3fff1df8:  16323000 3eb74ae7 5c7859a4 74ba2422  \r\n3fff1e08:  3862432e 79ba6c4f 47a95638 6b7e08b1  \r\n3fff1e18:  1e7b50b2 23ee241a 12d4164a 1e2f7ae9  \r\n3fff1e28:  3e024704 7f570617 43a70000 ab70030e  \r\n3fff1e38:  d58bc6be 901f42df 8405f761 9957a561  \r\n3fff1e48:  2d5b8023 065e5ea0 de3ec2d4 d8803303  \r\n3fff1e58:  eab106a2 044ada94 08a9793e 91af373f  \r\n3fff1e68:  f004b044 2efdf680 00000000 00000000  \r\n3fff1e78:  00000000 00006778 4ef56c53 6ca86210  \r\n3fff1e88:  4f7961a0 467e02c9 8b98a305 b2d83fe8  \r\n3fff1e98:  ce96d0a6 8eb2401e c89f535d 05497667  \r\n3fff1ea8:  f29c7c17 5094c9d5 648ddfea cc5af810  \r\n3fff1eb8:  cca1a9df e030b8dc 6bee6214 bbac8b80  \r\n3fff1ec8:  b851dc4a b24fcbf4 f63a559e 7c888a73  \r\n3fff1ed8:  cbd54400 c55f3d13 2238e610 65696c59  \r\n3fff1ee8:  a775c7f9 92301d16 c2587e66 71b7d8a9  \r\n3fff1ef8:  4ec164d0 d6f6a484 a51c53da df71d5aa  \r\n3fff1f08:  fc118513 fb4cb613 25fb93aa e32c7222  \r\n3fff1f18:  4edab9b9 3f70dd5c f31499db 6ce3707a  \r\n3fff1f28:  bad487ee 58ab0397 23a8f862 92b3bdc5  \r\n3fff1f38:  abba0e2f 28a931da 3fff1f40 40258478  \r\n3fff1f48:  9bfff35d 3fff2000 13be8140 8cc70208  \r\n3fff1f58:  90befffa a4506ceb bef9a3f7 c67178f2  \r\n3fff1f68:  3fff1f40 01394007 a7d54ca7 a5994620  \r\n3fff1f78:  ff94faae 4f0332f4 6b519bf3 abb96cb8  \r\n3fff1f88:  a51b0ea5 62c0db16 23a8f862 abba0e2f  \r\n3fff1f98:  ffb7453f 3fff2090 37b20138 8cc70208  \r\n3fff1fa8:  90befffa 3fff2040 3fffa6dc 3fffa6dc  \r\n3fff1fb8:  00000030 40221863 61f70584 61a55799  \r\n3fff1fc8:  23805b2d a05e5e06 d4c23ede 033380d8  \r\n3fff1fd8:  a206b1ea 94da4a04 3e79a908 3f37af91  \r\n3fff1fe8:  44b004f0 80f6fd2e 00000000 00000000  \r\n3fff1ff8:  00000000 78670000 ab114060 f7d5674f  \r\n3fff2008:  5b178f7c d0669861 61ed350f ea45937e  \r\n3fff2018:  8fd8b304 4ad406d5 00000200 00000003  \r\n3fff2028:  3fffa931 3fffa8cc 00000008 3fffa4bc  \r\n3fff2038:  40258340 40232156 00000005 61f70584  \r\n3fff2048:  61a55799 23805b2d a05e5e06 d4c23ede  \r\n3fff2058:  033380d8 a206b1ea 94da4a04 3e79a908  \r\n3fff2068:  3f37af91 44b004f0 9cf6fd2e 604828c1  \r\n3fff2078:  acd01bbc bce2919a 00000100 3fff1a5e  \r\n3fff2088:  0000595d 00000396 00000350 3fff19d2  \r\n3fff2098:  0000008c 3fff24a8 00000001 3fffa4bc  \r\n3fff20a8:  abb96cb8 3fffa4bc 00000020 3fff24a8  \r\n3fff20b8:  3fffa4bc 3fffa4bc 00000020 00000200  \r\n3fff20c8:  00000100 40222d49 604011ab 4f67d5f7  \r\n3fff20d8:  7c8f175b 619866d0 0f35ed61 7e9345ea  \r\n3fff20e8:  04b3d88f d506d44a 5cef6801 3b475f0e  \r\n3fff20f8:  8fde38c7 7a047bca aaa9128e 45bd83d5  \r\n3fff2108:  d0df2d90 a4d1965b 3fffa8f0 3fffa4bc  \r\n3fff2118:  3fff9bcc 40223ba4 00004bc6 00000000  \r\n3fff2128:  3fffab17 3fff9bcc 3fffa3bc 3fffa44c  \r\n3fff2138:  3fffa3b0 40224647 00000000 00000000  \r\n3fff2148:  3ffefb28 00000030 402590b4 78988a00  \r\n3fff2158:  3fff23dc 00000001 00000016 00000010  \r\n3fff2168:  00000003 3fffa92c 3fff21b0 00000000  \r\n3fff2178:  00000000 00000000 00000000 00000010  \r\n3fff2188:  402590b5 00000004 3fffa3c4 3fffa3c0  \r\n3fff2198:  00000303 3fff9bb0 fffff81c 0000007e  \r\n3fff21a8:  3fffa6b0 0000007e 00000245 deadbeef  \r\n3fff21b8:  deadbeef 3fffa6cc 00000000 3fffa5cc  \r\n3fff21c8:  3fff9bcc 40222f30 3fffa3b0 00000000  \r\n3fff21d8:  3fff9bcc 40223332 0000005a deadbeef  \r\n3fff21e8:  deadbeef 3ffefb24 00000000 3fffab17  \r\n3fff21f8:  3fff08ec 402017a0 deadbeef a5a5a5a5  \r\n\r\nctx: cont\r\nsp: 3ffffe30 end: 3fffffd0 offset: 0000\r\n3ffffe30:  00000000 3fffab17 00001388 402047b2  \r\n3ffffe40:  0000005a 00001388 40208222 00001388  \r\n3ffffe50:  00000010 000051e2 00000001 40204789  \r\n3ffffe60:  00000000 00000020 3fff9a2c 00000000  \r\n3ffffe70:  000050da fffffffc 3fff08ec 40204be3  \r\n3ffffe80:  00000000 fffffffc 3fff08ec 40204d9c  \r\n3ffffe90:  000050da 00000000 3ffef9f8 4020b476  \r\n3ffffea0:  000050da fffffffc 3ffef9f8 40205801  \r\n3ffffeb0:  000000b0 00000000 00b000bf 00000000  \r\n3ffffec0:  3ffefa28 3ffe9a15 00000019 00000094  \r\n3ffffed0:  3ffefa10 00000000 3fff3634 00000000  \r\n3ffffee0:  4025cff8 3ffe9a15 3fffff00 00000000  \r\n3ffffef0:  3ffefaec 3ffe9a15 3ffef9f8 402061cb  \r\n3fffff00:  00000000 000e000f 00000000 401007ca  \r\n3fffff10:  3ffe9a0f 00000000 0000063f 40100b80  \r\n3fffff20:  000031f8 00000000 3ffe8658 00000000  \r\n3fffff30:  00000000 3fff08ec 00000000 00000000  \r\n3fffff40:  00000000 00000020 3fff3614 40100d06  \r\n3fffff50:  4024cc02 3ffe8888 3fffff7c 3ffefa7c  \r\n3fffff60:  3ffe88a2 3ffe8888 3ffef9f8 40201376  \r\n3fffff70:  00000000 0010001f 00000000 00000000  \r\n3fffff80:  0019001f 00000000 00000002 3ffefc88  \r\n3fffff90:  3fff2424 3ffefaec 3fff2424 3ffefc88  \r\n3fffffa0:  3fff2424 3ffefa7c 3fff2e94 3ffefc88  \r\n3fffffb0:  3fffdad0 00000000 3ffefc5c 402083c0  \r\n3fffffc0:  feefeffe feefeffe 3fffdab0 40101039  \r\n<<<stack<<<\r\n\r\nTo make this dump useful, DECODE IT - https://tinyurl.com/8266dcdr\r\n--------------- CUT HERE FOR EXCEPTION DECODER ---------------\r\n```\r\nThe decoded stack trace:\r\n```\r\n0x40100158: ets_post at C:\\Users\\aliz\\Documents\\Arduino\\hardware\\esp8266com\\esp8266\\cores\\esp8266\\core_esp8266_main.cpp:243\r\n0x40207a2d: esp_suspend_within_cont at C:\\Users\\aliz\\Documents\\Arduino\\hardware\\esp8266com\\esp8266\\cores\\esp8266\\core_esp8266_main.cpp:121\r\n0x40207a2d: __yield at C:\\Users\\aliz\\Documents\\Arduino\\hardware\\esp8266com\\esp8266\\cores\\esp8266\\core_esp8266_main.cpp:193\r\n0x40220a3a: br_rsa_i15_private at /home/earle/src/esp-quick-toolchain/arduino/tools/sdk/ssl/bearssl/src/rsa/rsa_i15_priv.c:160\r\n0x4022e015: br_i15_modpow_opt at /home/earle/src/esp-quick-toolchain/arduino/tools/sdk/ssl/bearssl/src/int/i15_modpow2.c:159\r\n0x4021fc9b: sha2small_out at /home/earle/src/esp-quick-toolchain/arduino/tools/sdk/ssl/bearssl/src/hash/sha2small.c:249\r\n0x4023058e: br_multihash_out at /home/earle/src/esp-quick-toolchain/arduino/tools/sdk/ssl/bearssl/src/hash/multihash.c:165\r\n0x40221181: cc_do_sign at /home/earle/src/esp-quick-toolchain/arduino/tools/sdk/ssl/bearssl/src/ssl/ssl_ccert_single_rsa.c:130\r\n0x40221fdc: make_client_sign at /home/earle/src/esp-quick-toolchain/arduino/tools/sdk/ssl/bearssl/src/ssl/ssl_hs_client.c:384\r\n0x40222a7f: br_ssl_hs_client_run at /home/earle/src/esp-quick-toolchain/arduino/tools/sdk/ssl/bearssl/src/ssl/ssl_hs_client.c:1279\r\n0x40221368: br_ssl_engine_closed at /home/earle/src/esp-quick-toolchain/arduino/tools/sdk/ssl/bearssl/src/inner.h:2211\r\n0x40221368: jump_handshake at /home/earle/src/esp-quick-toolchain/arduino/tools/sdk/ssl/bearssl/src/ssl/ssl_engine.c:1081\r\n0x4022176a: br_ssl_engine_sendrec_ack at /home/earle/src/esp-quick-toolchain/arduino/tools/sdk/ssl/bearssl/src/ssl/ssl_engine.c:1168\r\n0x402046c2: BearSSL::WiFiClientSecureCtx::_run_until(unsigned int, bool) at C:\\Users\\aliz\\Documents\\Arduino\\hardware\\esp8266com\\esp8266\\libraries\\ESP8266WiFi\\src\\WiFiClientSecureBearSSL.cpp:542\r\n0x40207a32: esp_get_cycle_count at C:\\Users\\aliz\\Documents\\Arduino\\hardware\\esp8266com\\esp8266\\cores\\esp8266\\core_esp8266_features.h:64\r\n0x40207a32: EspClass::getCycleCount() at C:\\Users\\aliz\\Documents\\Arduino\\hardware\\esp8266com\\esp8266\\cores\\esp8266\\Esp.h:237\r\n0x40207a32: esp_suspend_within_cont at C:\\Users\\aliz\\Documents\\Arduino\\hardware\\esp8266com\\esp8266\\cores\\esp8266\\core_esp8266_main.cpp:122\r\n0x40207a32: __yield at C:\\Users\\aliz\\Documents\\Arduino\\hardware\\esp8266com\\esp8266\\cores\\esp8266\\core_esp8266_main.cpp:193\r\n0x40204699: BearSSL::WiFiClientSecureCtx::_run_until(unsigned int, bool) at C:\\Users\\aliz\\Documents\\Arduino\\hardware\\esp8266com\\esp8266\\libraries\\ESP8266WiFi\\src\\WiFiClientSecureBearSSL.cpp:516\r\n0x40204a07: BearSSL::WiFiClientSecureCtx::_pollRecvBuffer() at C:\\Users\\aliz\\Documents\\Arduino\\hardware\\esp8266com\\esp8266\\libraries\\ESP8266WiFi\\src\\WiFiClientSecureBearSSL.cpp:426\r\n0x40204b84: BearSSL::WiFiClientSecureCtx::connected() at C:\\Users\\aliz\\Documents\\Arduino\\hardware\\esp8266com\\esp8266\\libraries\\ESP8266WiFi\\src\\WiFiClientSecureBearSSL.cpp:270\r\n0x40204b84: BearSSL::WiFiClientSecureCtx::connected() at C:\\Users\\aliz\\Documents\\Arduino\\hardware\\esp8266com\\esp8266\\libraries\\ESP8266WiFi\\src\\WiFiClientSecureBearSSL.cpp:264\r\n0x4020acaa: HTTPClient::connected() at C:\\Users\\aliz\\Documents\\Arduino\\hardware\\esp8266com\\esp8266\\libraries\\ESP8266HTTPClient\\src\\ESP8266HTTPClient.cpp:245\r\n0x4020550e: HTTPClient::handleHeaderResponse() at C:\\Users\\aliz\\Documents\\Arduino\\hardware\\esp8266com\\esp8266\\libraries\\ESP8266HTTPClient\\src\\ESP8266HTTPClient.cpp:896\r\n0x40205cff: HTTPClient::sendRequest(char const*, unsigned char const*, unsigned int) at C:\\Users\\aliz\\Documents\\Arduino\\hardware\\esp8266com\\esp8266\\libraries\\ESP8266HTTPClient\\src\\ESP8266HTTPClient.cpp:486\r\n0x40206c69: String::copy(char const*, unsigned int) at C:\\Users\\aliz\\Documents\\Arduino\\hardware\\esp8266com\\esp8266\\cores\\esp8266\\WString.cpp:274\r\n0x40206e14: String::operator=(char const*) at C:\\Users\\aliz\\Documents\\Arduino\\hardware\\esp8266com\\esp8266\\cores\\esp8266\\WString.cpp:319\r\n0x40100944: free at C:\\Users\\aliz\\Documents\\Arduino\\hardware\\esp8266com\\esp8266\\cores\\esp8266\\umm_malloc\\umm_malloc.cpp:688\r\n0x40100944: free at C:\\Users\\aliz\\Documents\\Arduino\\hardware\\esp8266com\\esp8266\\cores\\esp8266\\umm_malloc\\umm_malloc.cpp:667\r\n0x402014c2: loop at C:\\Users\\aliz\\Desktop\\temp\\temp\\temp.ino:157\r\n0x401005fc: umm_free_core at C:\\Users\\aliz\\Documents\\Arduino\\hardware\\esp8266com\\esp8266\\cores\\esp8266\\umm_malloc\\umm_malloc.cpp:642\r\n0x40100979: malloc at C:\\Users\\aliz\\Documents\\Arduino\\hardware\\esp8266com\\esp8266\\cores\\esp8266\\umm_malloc\\umm_malloc.cpp:914\r\n0x40207bd0: loop_wrapper at C:\\Users\\aliz\\Documents\\Arduino\\hardware\\esp8266com\\esp8266\\cores\\esp8266\\core_esp8266_main.cpp:263\r\n```\r\n\r\n### [MCVE](https://stackoverflow.com/help/mcve) Sketch\r\n\r\nHere's a minimised sketch to repro. I don't know if anything specific in my apache setup is triggering this, let me know if you have trouble reproducing and I'll investigate.\r\n\r\n```\r\n#include <ESP8266WiFi.h>\r\n#include <ESP8266HTTPClient.h>\r\n#include <WiFiClientSecure.h>\r\n#include <time.h>\r\n\r\nconst char *ssid = \"...\";\r\nconst char *pass = \"...\";\r\n\r\nconst char* server_cert = R\"EOF(-----BEGIN CERTIFICATE-----\r\n...\r\n-----END CERTIFICATE-----\r\n)EOF\";\r\n\r\nconst char* server_private_key = R\"EOF(\r\n-----BEGIN PRIVATE KEY-----\r\n...\r\n-----END PRIVATE KEY-----\r\n\r\n)EOF\";\r\n\r\nconst char* ca_cert = R\"EOF(\r\n-----BEGIN CERTIFICATE-----\r\n...\r\n-----END CERTIFICATE-----\r\n)EOF\";\r\n\r\n// Note there are no client certificates required here in the server.\r\n// That is because all clients will send a certificate that can be\r\n// proven to be signed by the public CA certificate included at the\r\n// head of the app.\r\n\r\nWiFiClientSecure https;\r\nHTTPClient http;\r\n\r\n// Set time via NTP, as required for x.509 validation\r\nvoid setClock() {\r\n  configTime(3 * 3600, 0, \"pool.ntp.org\", \"time.nist.gov\");\r\n\r\n  Serial.print(\"Waiting for NTP time sync: \");\r\n  time_t now = time(nullptr);\r\n  while (now < 8 * 3600 * 2) {\r\n    delay(500);\r\n    Serial.print(\".\");\r\n    now = time(nullptr);\r\n  }\r\n  Serial.println(\"\");\r\n  struct tm timeinfo;\r\n  gmtime_r(&now, &timeinfo);\r\n  Serial.print(\"Current time: \");\r\n  Serial.print(asctime(&timeinfo));\r\n}\r\n\r\nvoid setup()\r\n{\r\n  Serial.begin(115200);\r\n\r\n  WiFi.mode(WIFI_STA);\r\n  WiFi.begin(ssid, pass);\r\n\r\n  while (WiFi.status() != WL_CONNECTED)\r\n  {\r\n    delay(500);\r\n    Serial.print(\".\");\r\n  }\r\n\r\n  setClock();\r\n\r\n  BearSSL::X509List *serverCertList = new BearSSL::X509List(server_cert);\r\n  BearSSL::PrivateKey *serverPrivKey = new BearSSL::PrivateKey(server_private_key);\r\n  https.setClientRSACert(serverCertList, serverPrivKey);\r\n\r\n  BearSSL::X509List *serverTrustedCA = new BearSSL::X509List(ca_cert);\r\n  https.setTrustAnchors(serverTrustedCA);\r\n}\r\n\r\nvoid loop()\r\n{\r\n  ESP.wdtDisable();\r\n  *((volatile uint32_t*)0x60000900) &= ~(1); // Hardware WDT OFF\r\n\r\n  if (!https.connect(\"dev.home.gamesfairy.co.uk\", 443))\r\n  {\r\n    char* errMsg = (char*)malloc(101);\r\n    memset(errMsg, 0, 100);\r\n    int errCode = https.getLastSSLError(errMsg, 100);\r\n    Serial.printf(\"Failed to set active scene, connecting to host failed: %d ('%s')\\n\", errCode, errMsg);\r\n    free(errMsg);\r\n\r\n    return;\r\n  }\r\n\r\n  http.addHeader(\"Content-Type\", \"application/json\");\r\n  http.begin(https, \"dev.home.gamesfairy.co.uk\", 443, \"/\", true);\r\n\r\n  int respCode = http.POST((const uint8_t*)\"foo\",3);\r\n\r\n  if (respCode < 0)\r\n  {\r\n    Serial.printf(\"Failed to set scene, error %d: %s\\n\", respCode, http.errorToString(respCode).c_str());\r\n\r\n    char* errMsg = (char*)malloc(101);\r\n    memset(errMsg, 0, 100);\r\n    int errCode = https.getLastSSLError(errMsg, 100);\r\n    Serial.printf(\"Failed to set active scene, connecting to host failed: %d ('%s')\\n\", errCode, errMsg);\r\n    free(errMsg);\r\n  }\r\n  else\r\n  {\r\n    if (respCode != HTTP_CODE_OK)\r\n    {\r\n      Serial.printf(\"Failed to set scene, get HTTP status %d for URL %s;\\n response body:\\n%s\\n\", respCode, \"/\", http.getString().c_str());\r\n    }\r\n  }\r\n  http.end();\r\n\r\n  Serial.printf(\"All done.\\n\");\r\n  delay(60 * 1000);\r\n}\r\n```\r\n\r\nTo summarise: \r\n\r\n* TLS mutual auth is failing when an esp8266 client attempts to connect to a server requesting a client cert, at least in my environment\r\n* This is because TLS renegotiation is disabled\r\n* Re-enabling renegotiation is a dirty hack to 'fix' the issue in esp8266 3.1.2, but when attempted in current git, BearSSL crashes.\r\n\r\nI can see the benefit of disabling renegotiation, in terms of resource usage, for the majority of users. However, it seems it is required in some scenarios, such as mine. Would it be possible to enable re-negotiation, as an opt-in feature?\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/esp8266/Arduino/issues/9170/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/esp8266/Arduino/issues/9170/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/esp8266/Arduino/issues/9161",
        "repository_url": "https://api.github.com/repos/esp8266/Arduino",
        "labels_url": "https://api.github.com/repos/esp8266/Arduino/issues/9161/labels{/name}",
        "comments_url": "https://api.github.com/repos/esp8266/Arduino/issues/9161/comments",
        "events_url": "https://api.github.com/repos/esp8266/Arduino/issues/9161/events",
        "html_url": "https://github.com/esp8266/Arduino/issues/9161",
        "id": 2398949254,
        "node_id": "I_kwDOAfcSBM6O_Q-G",
        "number": 9161,
        "title": "Releasing Updates",
        "user": {
            "login": "ayushsharma82",
            "id": 26592968,
            "node_id": "MDQ6VXNlcjI2NTkyOTY4",
            "avatar_url": "https://avatars.githubusercontent.com/u/26592968?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ayushsharma82",
            "html_url": "https://github.com/ayushsharma82",
            "followers_url": "https://api.github.com/users/ayushsharma82/followers",
            "following_url": "https://api.github.com/users/ayushsharma82/following{/other_user}",
            "gists_url": "https://api.github.com/users/ayushsharma82/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ayushsharma82/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ayushsharma82/subscriptions",
            "organizations_url": "https://api.github.com/users/ayushsharma82/orgs",
            "repos_url": "https://api.github.com/users/ayushsharma82/repos",
            "events_url": "https://api.github.com/users/ayushsharma82/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ayushsharma82/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2024-07-09T18:59:51Z",
        "updated_at": "2024-08-09T19:46:57Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Pretty sure you guys have already thought of this but just an opinion - Last release was more than a year ago. I think you should start releasing minor versions of this core with recent bug fixes and feature requests?\r\n\r\nA OSS library like mine (NetWizard) is already waiting for the removable routes and webserver filters which were added recently ( but the update for core is yet to be released ), without the release I cannot add ESP8266 support.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/esp8266/Arduino/issues/9161/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/esp8266/Arduino/issues/9161/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/esp8266/Arduino/issues/9124",
        "repository_url": "https://api.github.com/repos/esp8266/Arduino",
        "labels_url": "https://api.github.com/repos/esp8266/Arduino/issues/9124/labels{/name}",
        "comments_url": "https://api.github.com/repos/esp8266/Arduino/issues/9124/comments",
        "events_url": "https://api.github.com/repos/esp8266/Arduino/issues/9124/events",
        "html_url": "https://github.com/esp8266/Arduino/issues/9124",
        "id": 2250434672,
        "node_id": "I_kwDOAfcSBM6GIuhw",
        "number": 9124,
        "title": "Meaning of \"HTTPServer: error: short send after timeout\"",
        "user": {
            "login": "jmmprodukts",
            "id": 34891664,
            "node_id": "MDQ6VXNlcjM0ODkxNjY0",
            "avatar_url": "https://avatars.githubusercontent.com/u/34891664?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jmmprodukts",
            "html_url": "https://github.com/jmmprodukts",
            "followers_url": "https://api.github.com/users/jmmprodukts/followers",
            "following_url": "https://api.github.com/users/jmmprodukts/following{/other_user}",
            "gists_url": "https://api.github.com/users/jmmprodukts/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jmmprodukts/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jmmprodukts/subscriptions",
            "organizations_url": "https://api.github.com/users/jmmprodukts/orgs",
            "repos_url": "https://api.github.com/users/jmmprodukts/repos",
            "events_url": "https://api.github.com/users/jmmprodukts/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jmmprodukts/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-04-18T11:20:51Z",
        "updated_at": "2024-07-30T21:55:42Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Basic Infos\r\n\r\n- [ ] This issue complies with the [issue POLICY doc](https://github.com/esp8266/Arduino/blob/master/POLICY.md).\r\n- [ ] I have read the documentation at [readthedocs](https://arduino-esp8266.readthedocs.io/en/latest) and the issue is not addressed there.\r\n- [ ] I have tested that the issue is present in current master branch (aka latest git).\r\n- [ ] I have searched the issue tracker for a similar issue.\r\n- [ ] If there is a stack dump, I have decoded it.\r\n- [ ] I have filled out all fields below.\r\n\r\n#### Platform\r\n\r\n- Hardware:\t\t\t\tESP8266\r\n- Core Version:\t\t\tUnknown\r\n- Development Env:\t\tArduino IDE\r\n- Operating System:\t\tWindows 11\r\n\r\n### Settings in IDE\r\n\r\n- Module:  \t\t\tWemos D1 mini\r\n- Flash Mode:\t\t\t[qio|dio|other]\r\n- Flash Size: \t\t\t[4MB/1MB]\r\n- lwip Variant: \t\t\t[v1.4|v2 Lower Memory|Higher Bandwidth]\r\n- Reset Method:\t\t[ck|nodemcu]\r\n- Flash Frequency:\t\t[40Mhz]\r\n- CPU Frequency:\t\t[80Mhz|160MHz]\r\n- Upload Using:\t\t[OTA]\r\n- Upload Speed: \t\t[115200)\r\n\r\n\r\n### Problem Description\r\n\r\nAfter multiple requests from a browser to the EP8266 webserver I get the following on the serial port (with DEBUG LEVEL HTTP_CLIENT+HTTP_SERVER\r\n\r\n\r\n\r\n### [MCVE](https://stackoverflow.com/help/mcve) Sketch\r\n\r\n\r\n### Debug Messages\r\n\r\n2024-04-18 13:09:26 Zomertijd 12600 36>New client\r\nrequest: GET /FolderPage HTTP/1.1\r\nmethod: GET url: /FolderPage search:  keepAlive=: 1\r\nheaderName: Host\r\nheaderValue: 192.168.2.238\r\nheaderName: Connection\r\nheaderValue: keep-alive\r\nheaderName: Cache-Control\r\nheaderValue: max-age=0\r\nheaderName: DNT\r\nheaderValue: 1\r\nheaderName: Upgrade-Insecure-Requests\r\nheaderValue: 1\r\nheaderName: User-Agent\r\nheaderValue: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36\r\nheaderName: Accept\r\nheaderValue: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\r\nheaderName: Referer\r\nheaderValue: http://192.168.2.238/\r\nheaderName: Accept-Encoding\r\nheaderValue: gzip, deflate\r\nheaderName: Accept-Language\r\nheaderValue: en-US,en;q=0.9,nl-NL;q=0.8,nl;q=0.7\r\nheaderName: sec-gpc\r\nheaderValue: 1\r\nargs: \r\nargs count: 0\r\nargs: \r\nargs count: 0\r\nRequest: /FolderPage\r\nArguments: \r\nfinal list of key/value pairs:\r\nHTTPServer: error: sent 0 on 103 bytes\r\nHTTPServer: error: short send after timeout (0 < 25)\r\nHTTPServer: error: short send after timeout (0 < 24)\r\nHTTPServer: error: short send after timeout (0 < 26)\r\nHTTPServer: error: short send after timeout (0 < 5)\r\nHTTPServer: error: short send after timeout (0 < 11)\r\nHTTPServer: error: short send after timeout (0 < 2)\r\nHTTPServer: error: short send after timeout (0 < 3)\r\nHTTPServer: error: short send after timeout (0 < 18)\r\nHTTPServer: error: short send after timeout (0 < 4)\r\nHTTPServer: error: short send after timeout (0 < 3)\r\nHTTPServer: error: short send after timeout (0 < 292)\r\nHTTPServer: error: short send after timeout (0 < 28)\r\nHTTPServer: error: short send after timeout (0 < 546)\r\nHTTPServer: error: short send after timeout (0 < 592)\r\nHTTPServer: error: short send after timeout (0 < 8)\r\nHTTPServer: error: short send after timeout (0 < 10)\r\nHTTPServer: error: short send after timeout (0 < 19)\r\nHTTPServer: error: short send after timeout (0 < 41)\r\nHTTPServer: error: short send after timeout (0 < 3)\r\nHTTPServer: error: short send after timeout (0 < 24)\r\nHTTPServer: error: short send after timeout (0 < 35)\r\nHTTPServer: error: short send after timeout (0 < 28)\r\nHTTPServer: error: short send after timeout (0 < 103)\r\nHTTPServer: error: short send after timeout (0 < 10)\r\nHTTPServer: error: short send after timeout (0 < 36)\r\nHTTPServer: error: short send after timeout (0 < 38)\r\nHTTPServer: error: short send after timeout (0 < 38)\r\nHTTPServer: error: short send after timeout (0 < 71)\r\nHTTPServer: error: short send after timeout (0 < 60)\r\nHTTPServer: error: short send after timeout (0 < 58)\r\nHTTPServer: error: short send after timeout (0 < 58)\r\nHTTPServer: error: short send after timeout (0 < 36)\r\nHTTPServer: error: short send after timeout (0 < 28)\r\nHTTPServer: error: short send after timeout (0 < 5)\r\nHTTPServer: error: short send after timeout (0 < 3)\r\nHTTPServer: error: short send after timeout (0 < 34)\r\nHTTPServer: error: short send after timeout (0 < 126)\r\nHTTPServer: error: short send after timeout (0 < 53)\r\nHTTPServer: error: short send after timeout (0 < 49)\r\nHTTPServer: error: short send after timeout (0 < 78)\r\nHTTPServer: error: short send after timeout (0 < 3)\r\nHTTPServer: error: short send after timeout (0 < 35)\r\nHTTPServer: error: short send after timeout (0 < 54)\r\nHTTPServer: error: short send after timeout (0 < 31)\r\nHTTPServer: error: short send after timeout (0 < 3)\r\nHTTPServer: error: short send after timeout (0 < 32)\r\nHTTPServer: error: short send after timeout (0 < 44)\r\nHTTPServer: error: short send after timeout (0 < 3)\r\nHTTPServer: error: short send after timeout (0 < 32)\r\nHTTPServer: error: short send after timeout (0 < 45)\r\nHTTPServer: error: short send after timeout (0 < 3)\r\nHTTPServer: error: short send after timeout (0 < 11)\r\nHTTPServer: error: short send after timeout (0 < 54)\r\nHTTPServer: error: short send after timeout (0 < 71)\r\nHTTPServer: error: short send after timeout (0 < 723)\r\nHTTPServer: error: short send after timeout (0 < 8)\r\nHTTPServer: error: short send after timeout (0 < 28)\r\nHTTPServer: error: short send after timeout (0 < 22)\r\nHTTPServer: error: short send after timeout (0 < 22)\r\nHTTPServer: error: short send after timeout (0 < 22)\r\nHTTPServer: error: short send after timeout (0 < 22)\r\nHTTPServer: error: short send after timeout (0 < 2)\r\nHTTPServer: error: short send after timeout (0 < 11)\r\nHTTPServer: error: short send after timeout (0 < 29)\r\nHTTPServer: error: short send after timeout (0 < 41)\r\nHTTPServer: error: short send after timeout (0 < 4)\r\nHTTPServer: error: short send after timeout (0 < 29)\r\nHTTPServer: error: short send after timeout (0 < 12)\r\nHTTPServer: error: short send after timeout (0 < 8)\r\nHTTPServer: error: short send after timeout (0 < 96)\r\nHTTPServer: error: short send after timeout (0 < 34)\r\nHTTPServer: error: short send after timeout (0 < 108)\r\nHTTPServer: error: short send after timeout (0 < 18)\r\nHTTPServer: error: short send after timeout (0 < 21)\r\nHTTPServer: error: short send after timeout (0 < 21)\r\nHTTPServer: error: short send after timeout (0 < 8)\r\nHTTPServer: error: short send after timeout (0 < 11)\r\nHTTPServer: error: short send after timeout (0 < 58)\r\nHTTPServer: error: short send after timeout (0 < 8)\r\nHTTPServer: error: short send after timeout (0 < 41)\r\nHTTPServer: error: short send after timeout (0 < 4)\r\nHTTPServer: error: short send after timeout (0 < 29)\r\nHTTPServer: error: short send after timeout (0 < 12)\r\nHTTPServer: error: short send after timeout (0 < 8)\r\nHTTPServer: error: short send after timeout (0 < 96)\r\nHTTPServer: error: short send after timeout (0 < 34)\r\nHTTPServer: error: short send after timeout (0 < 107)\r\nHTTPServer: error: short send after timeout (0 < 18)\r\nHTTPServer: error: short send after timeout (0 < 21)\r\nHTTPServer: error: short send after timeout (0 < 21)\r\nHTTPServer: error: short send after timeout (0 < 8)\r\nHTTPServer: error: short send after timeout (0 < 7)\r\nHTTPServer: error: short send after timeout (0 < 104)\r\nHTTPServer: error: short send after timeout (0 < 31)\r\nHTTPServer: error: short send after timeout (0 < 106)\r\nHTTPServer: error: short send after timeout (0 < 86)\r\nHTTPServer: error: short send after timeout (0 < 11)\r\n\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/esp8266/Arduino/issues/9124/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/esp8266/Arduino/issues/9124/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/esp8266/Arduino/issues/9006",
        "repository_url": "https://api.github.com/repos/esp8266/Arduino",
        "labels_url": "https://api.github.com/repos/esp8266/Arduino/issues/9006/labels{/name}",
        "comments_url": "https://api.github.com/repos/esp8266/Arduino/issues/9006/comments",
        "events_url": "https://api.github.com/repos/esp8266/Arduino/issues/9006/events",
        "html_url": "https://github.com/esp8266/Arduino/pull/9006",
        "id": 1944515068,
        "node_id": "PR_kwDOAfcSBM5c3Mpj",
        "number": 9006,
        "title": "Fix memory leaks if handshake fails",
        "user": {
            "login": "zefir-o",
            "id": 38714065,
            "node_id": "MDQ6VXNlcjM4NzE0MDY1",
            "avatar_url": "https://avatars.githubusercontent.com/u/38714065?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zefir-o",
            "html_url": "https://github.com/zefir-o",
            "followers_url": "https://api.github.com/users/zefir-o/followers",
            "following_url": "https://api.github.com/users/zefir-o/following{/other_user}",
            "gists_url": "https://api.github.com/users/zefir-o/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zefir-o/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zefir-o/subscriptions",
            "organizations_url": "https://api.github.com/users/zefir-o/orgs",
            "repos_url": "https://api.github.com/users/zefir-o/repos",
            "events_url": "https://api.github.com/users/zefir-o/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zefir-o/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-16T07:01:35Z",
        "updated_at": "2024-08-07T13:55:02Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/esp8266/Arduino/pulls/9006",
            "html_url": "https://github.com/esp8266/Arduino/pull/9006",
            "diff_url": "https://github.com/esp8266/Arduino/pull/9006.diff",
            "patch_url": "https://github.com/esp8266/Arduino/pull/9006.patch",
            "merged_at": null
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/esp8266/Arduino/issues/9006/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/esp8266/Arduino/issues/9006/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/esp8266/Arduino/issues/9005",
        "repository_url": "https://api.github.com/repos/esp8266/Arduino",
        "labels_url": "https://api.github.com/repos/esp8266/Arduino/issues/9005/labels{/name}",
        "comments_url": "https://api.github.com/repos/esp8266/Arduino/issues/9005/comments",
        "events_url": "https://api.github.com/repos/esp8266/Arduino/issues/9005/events",
        "html_url": "https://github.com/esp8266/Arduino/pull/9005",
        "id": 1944160683,
        "node_id": "PR_kwDOAfcSBM5c1_KO",
        "number": 9005,
        "title": "Refactor Web Server Parsing-impl.h using StreamString to avoid String Reallocations",
        "user": {
            "login": "Lan-Hekary",
            "id": 13420623,
            "node_id": "MDQ6VXNlcjEzNDIwNjIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/13420623?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Lan-Hekary",
            "html_url": "https://github.com/Lan-Hekary",
            "followers_url": "https://api.github.com/users/Lan-Hekary/followers",
            "following_url": "https://api.github.com/users/Lan-Hekary/following{/other_user}",
            "gists_url": "https://api.github.com/users/Lan-Hekary/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Lan-Hekary/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Lan-Hekary/subscriptions",
            "organizations_url": "https://api.github.com/users/Lan-Hekary/orgs",
            "repos_url": "https://api.github.com/users/Lan-Hekary/repos",
            "events_url": "https://api.github.com/users/Lan-Hekary/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Lan-Hekary/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2208208571,
                "node_id": "MDU6TGFiZWwyMjA4MjA4NTcx",
                "url": "https://api.github.com/repos/esp8266/Arduino/labels/alpha",
                "name": "alpha",
                "color": "e88a3e",
                "default": false,
                "description": "included in alpha release"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-10-16T01:13:23Z",
        "updated_at": "2024-08-02T19:32:13Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/esp8266/Arduino/pulls/9005",
            "html_url": "https://github.com/esp8266/Arduino/pull/9005",
            "diff_url": "https://github.com/esp8266/Arduino/pull/9005.diff",
            "patch_url": "https://github.com/esp8266/Arduino/pull/9005.patch",
            "merged_at": null
        },
        "body": "I was getting many `Reallocating large String` Warnings when decoding a long URL, and I found that the length of the string is already known before allocating, so it made sense, and it made a big difference.",
        "reactions": {
            "url": "https://api.github.com/repos/esp8266/Arduino/issues/9005/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/esp8266/Arduino/issues/9005/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/esp8266/Arduino/issues/8720",
        "repository_url": "https://api.github.com/repos/esp8266/Arduino",
        "labels_url": "https://api.github.com/repos/esp8266/Arduino/issues/8720/labels{/name}",
        "comments_url": "https://api.github.com/repos/esp8266/Arduino/issues/8720/comments",
        "events_url": "https://api.github.com/repos/esp8266/Arduino/issues/8720/events",
        "html_url": "https://github.com/esp8266/Arduino/pull/8720",
        "id": 1458399234,
        "node_id": "PR_kwDOAfcSBM5DYWLR",
        "number": 8720,
        "title": "Heap: Improve debug caller address reporting",
        "user": {
            "login": "mhightower83",
            "id": 27247790,
            "node_id": "MDQ6VXNlcjI3MjQ3Nzkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/27247790?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mhightower83",
            "html_url": "https://github.com/mhightower83",
            "followers_url": "https://api.github.com/users/mhightower83/followers",
            "following_url": "https://api.github.com/users/mhightower83/following{/other_user}",
            "gists_url": "https://api.github.com/users/mhightower83/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mhightower83/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mhightower83/subscriptions",
            "organizations_url": "https://api.github.com/users/mhightower83/orgs",
            "repos_url": "https://api.github.com/users/mhightower83/repos",
            "events_url": "https://api.github.com/users/mhightower83/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mhightower83/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2208208571,
                "node_id": "MDU6TGFiZWwyMjA4MjA4NTcx",
                "url": "https://api.github.com/repos/esp8266/Arduino/labels/alpha",
                "name": "alpha",
                "color": "e88a3e",
                "default": false,
                "description": "included in alpha release"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2022-11-21T18:32:06Z",
        "updated_at": "2024-09-04T18:30:41Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/esp8266/Arduino/pulls/8720",
            "html_url": "https://github.com/esp8266/Arduino/pull/8720",
            "diff_url": "https://github.com/esp8266/Arduino/pull/8720.diff",
            "patch_url": "https://github.com/esp8266/Arduino/pull/8720.patch",
            "merged_at": null
        },
        "body": "PR Status: ready for review\r\n\r\nHeap: Improve debug caller address reporting to indicate the address in the sketch or library.\r\n\r\nLite refactoring of `heap.cpp` and expanded comments\r\n* Lite refactoring of `DEBUG_ESP_OOM` printing\r\n* Overall refactoring to make it easier to follow.\r\n* Changes to support atomic save of OOM debug info\r\n* Debug support for C++ \"delete\" operator - support reporting caller address\r\n\r\n\r\nOverall avoid identifying the wrapper code as the source of the Heap call. Each outer wrapper passes the caller's address down to the next level.\r\n\r\nImproves \"caller\" address reporting for OOM and Poison events. Previously, some OOM and Poison events reported info pointing to the thick heap wrapper rather than back to the caller. Update `abi.cpp`, `heap.cpp` and `umm_local.c` (`umm_poison`) to support caller parameters.\r\n\r\nEnhanced `DEBUG_ESP_OOM` to track OOM events when C++ Exceptions: \"enabled\" is selected. Report more interesting higher-level code addresses as the caller instead of GCC C++ module.\r\n\r\nAdded `DEBUG_ESP_WITHINISR` to provide notification for ISRs using C++ \"new\"/\"delete\" operators or `LIBC` calls using `_malloc_r`, ...\r\n\r\nEnhanced poison neighbor reporting to distinguish between allocation vs. neighbor failing poison check.\r\n\r\nSupport for specifying both UMM_POISON_CHECK and UMM_POISON_CHECK_LITE at the same time did not work as expected. UMM_POISON_CHECK_LITE dominated in the build. Fix: Keep things simple and prevent combining UMM_POISON_CHECK and UMM_POISON_CHECK_LITE. Defines for UMM_POISON_CHECK, UMM_POISON_CHECK_LITE, and UMM_POISON_NONE are checked for mutual exclusivity.\r\n\r\nFor sketches with extremely limited resources, added UMM_POISON_NONE to prevent UMM_POISON_CHECK_LITE from being added to debug builds.\r\n\r\nMoved _port_ related changes for `UMM_POISON...` from `umm_malloc_cfg.h` to `umm_malloc_cfgport.h`.\r\n\r\nDraft version remnants removed.\r\n\r\nUpdated this description to reflect the current PR ",
        "reactions": {
            "url": "https://api.github.com/repos/esp8266/Arduino/issues/8720/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/esp8266/Arduino/issues/8720/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    }
]