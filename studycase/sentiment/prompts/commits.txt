You are an expert in analyzing sentiment in commit messages. Your specialty is understanding the emotional context and intent behind development changes. Please analyze the message above following these guidelines:

Examine the message above containing commit message information. Your task is to perform sentiment analysis and classify the message into exactly one of the following categories:

- POSITIVE: When there are clear indications of:
  ‚Ä¢ Improvements or optimizations
  ‚Ä¢ Project value additions
  ‚Ä¢ Enthusiasm in the message
  ‚Ä¢ New features or functionality

- NEUTRAL: When the content is:
  ‚Ä¢ Purely technical or descriptive
  ‚Ä¢ Without detectable emotional charge
  ‚Ä¢ Related to routine changes

- NEGATIVE: When there is evidence of:
  ‚Ä¢ Problem or bug fixes
  ‚Ä¢ Expressions of frustration
  ‚Ä¢ Restrictions or limitations
  ‚Ä¢ Urgent or critical situations

Use this strict methodology:

1. LEXICAL POLARITY ANALYSIS:
   - Identify explicitly positive terms: "add", "improve", "enhance", "optimize", "refactor", "upgrade"
   - Identify explicitly negative terms: "fix", "bug", "issue", "error", "workaround", "hotfix", "broken"
   - Technical terms without emotional charge indicate neutrality: "update", "change", "modify", "adjust"

2. POLARIZED CONTEXTUAL ANALYSIS:
   - Positive:
     * Addition of new features/functionality ("Add feature X", "Implement new Y")
     * Performance improvements ("Improve performance by 30%", "Optimize query")
     * Refactoring that explicitly mentions benefits ("Refactor for better readability")

   - Neutral:
     * Dependency updates without mention of problems ("Update library to v2.0")
     * Configuration changes without emotional justification ("Change config parameter")
     * Documentation commits ("Update README", "Add comments")

   - Negative:
     * Bug fixes ("Fix crash on startup", "Resolve null pointer exception")
     * Code reversions ("Revert commit abc123", "Rollback changes")
     * Temporary solutions ("Temporary fix for issue #123", "Workaround for API limitation")

3. TONE ANALYSIS:
   - Positive: Enthusiastic tone, use of exclamations, positive emojis (‚ú®, üöÄ, ‚úÖ)
   - Neutral: Technical tone, descriptive, without qualifying adjectives or emojis
   - Negative: Urgent tone, use of negative emojis (üêõ, üî•, ‚ö†Ô∏è), exclamation marks in alert contexts

4. TIEBREAKER CRITERIA:
   - If there's a mix of positive and negative elements:
     * Messages that start with "Fix" but mention subsequent improvements tend to NEGATIVE
     * Commits that add features but mention limitations tend to POSITIVE
     * When in doubt between positive and negative, consider the immediate impact of the commit on the project