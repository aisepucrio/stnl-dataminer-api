# Generated by Django 5.1 on 2025-03-21 14:02

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='GitHubBranch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('repository', models.CharField(db_index=True, default='', max_length=255)),
                ('name', models.CharField(max_length=500)),
                ('sha', models.CharField(max_length=40)),
                ('time_mined', models.DateTimeField(help_text='Data e hora da mineração', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GitHubPullRequest',
            fields=[
                ('pr_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('repository', models.CharField(max_length=255)),
                ('number', models.IntegerField(null=True)),
                ('title', models.CharField(max_length=255)),
                ('state', models.CharField(max_length=50)),
                ('creator', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('closed_at', models.DateTimeField(null=True)),
                ('merged_at', models.DateTimeField(null=True)),
                ('labels', models.JSONField(default=list)),
                ('commits', models.JSONField(default=list)),
                ('comments', models.JSONField(default=list)),
                ('body', models.TextField(blank=True, null=True)),
                ('time_mined', models.DateTimeField(help_text='Data e hora da mineração', null=True)),
            ],
            options={
                'db_table': 'github_pull_requests',
            },
        ),
        migrations.CreateModel(
            name='GitHubAuthor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(db_index=True, max_length=254)),
            ],
            options={
                'unique_together': {('name', 'email')},
            },
        ),
        migrations.CreateModel(
            name='GitHubCommit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('repository', models.CharField(db_index=True, default='', max_length=255)),
                ('sha', models.CharField(max_length=40, unique=True)),
                ('message', models.TextField()),
                ('date', models.DateTimeField()),
                ('insertions', models.IntegerField(default=0)),
                ('deletions', models.IntegerField(default=0)),
                ('files_changed', models.IntegerField(default=0)),
                ('in_main_branch', models.BooleanField(default=False)),
                ('merge', models.BooleanField(default=False)),
                ('dmm_unit_size', models.FloatField(null=True)),
                ('dmm_unit_complexity', models.FloatField(null=True)),
                ('dmm_unit_interfacing', models.FloatField(null=True)),
                ('time_mined', models.DateTimeField(help_text='Data e hora da mineração', null=True)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='author_commits', to='github.githubauthor')),
                ('committer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='committer_commits', to='github.githubauthor')),
            ],
        ),
        migrations.CreateModel(
            name='GitHubIssue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('repository', models.CharField(db_index=True, default='', max_length=255)),
                ('issue_id', models.BigIntegerField()),
                ('number', models.IntegerField(null=True)),
                ('title', models.TextField()),
                ('state', models.CharField(max_length=20)),
                ('creator', models.CharField(max_length=100)),
                ('assignees', models.JSONField(default=list)),
                ('labels', models.JSONField(default=list)),
                ('milestone', models.CharField(blank=True, max_length=255, null=True)),
                ('locked', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('closed_at', models.DateTimeField(blank=True, null=True)),
                ('body', models.TextField(blank=True, null=True)),
                ('comments', models.JSONField(default=list)),
                ('timeline_events', models.JSONField(default=list)),
                ('is_pull_request', models.BooleanField(default=False)),
                ('author_association', models.CharField(blank=True, max_length=50, null=True)),
                ('reactions', models.JSONField(default=dict)),
                ('time_mined', models.DateTimeField(help_text='Data e hora da mineração', null=True)),
            ],
            options={
                'indexes': [models.Index(fields=['repository', 'issue_id'], name='github_gith_reposit_680a4b_idx'), models.Index(fields=['created_at'], name='github_gith_created_dd1287_idx'), models.Index(fields=['updated_at'], name='github_gith_updated_5e648d_idx')],
            },
        ),
        migrations.CreateModel(
            name='GitHubIssuePullRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('repository', models.CharField(db_index=True, default='', max_length=255)),
                ('record_id', models.BigIntegerField(unique=True)),
                ('number', models.IntegerField(null=True)),
                ('title', models.TextField()),
                ('state', models.CharField(max_length=20)),
                ('creator', models.CharField(max_length=100)),
                ('assignees', models.JSONField(default=list)),
                ('labels', models.JSONField(default=list)),
                ('milestone', models.CharField(blank=True, max_length=255, null=True)),
                ('locked', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('closed_at', models.DateTimeField(blank=True, null=True)),
                ('body', models.TextField(blank=True, null=True)),
                ('comments', models.JSONField(default=list)),
                ('timeline_events', models.JSONField(default=list)),
                ('merged_at', models.DateTimeField(blank=True, null=True)),
                ('commits', models.JSONField(default=list)),
                ('is_pull_request', models.BooleanField(default=False)),
                ('author_association', models.CharField(blank=True, max_length=50, null=True)),
                ('reactions', models.JSONField(default=dict)),
                ('tipo', models.CharField(max_length=20)),
                ('time_mined', models.DateTimeField(help_text='Data e hora da mineração', null=True)),
            ],
            options={
                'indexes': [models.Index(fields=['repository', 'record_id'], name='github_gith_reposit_a7991d_idx'), models.Index(fields=['created_at'], name='github_gith_created_c0cefb_idx'), models.Index(fields=['updated_at'], name='github_gith_updated_036249_idx')],
            },
        ),
        migrations.CreateModel(
            name='GitHubMetadata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('repository', models.CharField(db_index=True, max_length=255)),
                ('owner', models.CharField(max_length=255)),
                ('organization', models.CharField(max_length=255, null=True)),
                ('stars_count', models.IntegerField(default=0)),
                ('watchers_count', models.IntegerField(default=0)),
                ('forks_count', models.IntegerField(default=0)),
                ('open_issues_count', models.IntegerField(default=0)),
                ('default_branch', models.CharField(default='main', max_length=255)),
                ('description', models.TextField(null=True)),
                ('html_url', models.URLField()),
                ('contributors_count', models.IntegerField(null=True)),
                ('topics', models.JSONField(null=True)),
                ('languages', models.JSONField(null=True)),
                ('readme', models.TextField(null=True)),
                ('labels_count', models.IntegerField(null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('last_sync', models.DateTimeField(auto_now=True)),
                ('is_archived', models.BooleanField(default=False)),
                ('is_template', models.BooleanField(default=False)),
                ('used_by_count', models.IntegerField(default=0)),
                ('releases_count', models.IntegerField(default=0)),
                ('time_mined', models.DateTimeField(help_text='Data e hora da mineração', null=True)),
            ],
            options={
                'indexes': [models.Index(fields=['repository'], name='github_gith_reposit_4a8a5f_idx'), models.Index(fields=['created_at'], name='github_gith_created_c095ab_idx'), models.Index(fields=['updated_at'], name='github_gith_updated_83a92e_idx')],
            },
        ),
        migrations.CreateModel(
            name='GitHubModifiedFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_path', models.TextField(null=True)),
                ('new_path', models.TextField(null=True)),
                ('filename', models.TextField()),
                ('change_type', models.CharField(max_length=20)),
                ('diff', models.TextField(null=True)),
                ('added_lines', models.IntegerField()),
                ('deleted_lines', models.IntegerField()),
                ('complexity', models.IntegerField(null=True)),
                ('time_mined', models.DateTimeField(help_text='Data e hora da mineração', null=True)),
                ('commit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modified_files', to='github.githubcommit')),
            ],
        ),
        migrations.CreateModel(
            name='GitHubMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('complexity', models.IntegerField(null=True)),
                ('max_nesting', models.IntegerField(null=True)),
                ('time_mined', models.DateTimeField(help_text='Data e hora da mineração', null=True)),
                ('modified_file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='methods', to='github.githubmodifiedfile')),
            ],
        ),
    ]
