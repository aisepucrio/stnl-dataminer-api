"""
Django settings for dataminer_api project.

Generated by 'django-admin startproject' using Django 5.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-4#0!#$y$nhi83cpx_+z+-0r=b@li^csxtj=7adx!js5_#d18bt'

# SECURITY WARNING: don't run with debug turned on in production!
# Get DEBUG setting from environment variable IS_DEBUG, default to False if not set
DEBUG = os.getenv('IS_DEBUG', 'False').lower() == 'true'

ALLOWED_HOSTS = ["*"]
CORS_ALLOW_ALL_ORIGINS = True

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'rest_framework',
    'drf_spectacular',
    'dataminer_api',
    'github',
    'jira',
    'jobs',
    'django_filters',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'dataminer_api.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'dataminer_api.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.getenv('POSTGRES_DB'),
        'USER': os.getenv('POSTGRES_USER'),
        'PASSWORD': os.getenv('POSTGRES_PASSWORD'),
        'HOST': 'db',
        'PORT': 5432,
    },
}

# Jira Config
JIRA_EMAIL = os.getenv("JIRA_EMAIL")
JIRA_API_TOKEN = (os.getenv("JIRA_API_TOKEN") or "").strip('"')

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATIC_URL = '/static/'

# User-uploaded files
# https://docs.djangoproject.com/en/5.0/ref/settings/#std-setting-MEDIA_ROOT

MEDIA_ROOT_NAME = 'media'
MEDIA_ROOT = os.path.join(BASE_DIR, MEDIA_ROOT_NAME)
MEDIA_URL = f'/{MEDIA_ROOT_NAME}/'

EXPORT_DIRECTORY = os.path.join(BASE_DIR, 'exports')

STORAGES = {
        'default': {
            'BACKEND': 'django.core.files.storage.FileSystemStorage',
            'OPTIONS': {
                'location': MEDIA_ROOT,
                'base_url': MEDIA_URL,
            },
        },
        'staticfiles': {
            'BACKEND': 'django.contrib.staticfiles.storage.StaticFilesStorage',
            'LOCATION': STATIC_ROOT
        },
    }

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

REST_FRAMEWORK = {
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend',
        'rest_framework.filters.SearchFilter',
        'rest_framework.filters.OrderingFilter',
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    )
}

SPECTACULAR_SETTINGS = {
    'TITLE': 'RAISE',
    'DESCRIPTION': 'A Django-based API designed for mining and analyzing software engineering data.',
    'VERSION': '1.0.0',
    'SERVE_INCLUDE_SCHEMA': False,
}

# Defines the broker URL (Redis) that Celery will use for messaging
CELERY_BROKER_URL = 'redis://redis:6379/0'

# Defines where the task results will be stored
CELERY_RESULT_BACKEND = 'redis://redis:6379/0'

# Defines which serialization formats are accepted for the messages
# In this case, only JSON is allowed
CELERY_ACCEPT_CONTENT = ['json']

# Defines the serializer used for tasks
CELERY_TASK_SERIALIZER = 'json'

# Defines the serializer used for results
CELERY_RESULT_SERIALIZER = 'json'

# Defines the timezone for Celery
CELERY_TIMEZONE = 'UTC'

# Defines how long task results are kept
# In this case: 3 days (60 seconds * 60 minutes * 24 hours * 3 days)
CELERY_TASK_RESULT_EXPIRES = 60 * 60 * 24 * 3

# Allows Celery to attempt to reconnect to the broker in case of failure during startup
CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP = True

# Enables tracking of the "STARTED" state of tasks
CELERY_TASK_TRACK_STARTED = True

# Forces the storage of results even in eager mode (useful for testing)
CELERY_TASK_STORE_EAGER_RESULT = True

# Duplicate of CELERY_TASK_TRACK_STARTED (can be removed)
CELERY_TRACK_STARTED = True

# Defines the maximum memory limit per worker process (2MB in this case)
CELERY_MAX_MEMORY_PER_CHILD = 1024*1024*2

# Defines the number of concurrent worker processes
CELERY_CONCURRENCY = 4