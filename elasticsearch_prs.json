{
  "metadata": {
    "repository": "elastic/elasticsearch",
    "start_date": "2024-01-09",
    "end_date": "2024-01-16",
    "extraction_timestamp": "2025-01-16T11:28:00.538012",
    "metrics": {
      "execution_time": {
        "seconds": 624.07,
        "formatted": "10min 24s"
      },
      "api_usage": {
        "total_requests": 754,
        "total_prs_collected": 250,
        "pages_processed": 4,
        "average_request_time": "0s",
        "rate_limit": {
          "total": "30",
          "remaining": "28",
          "used_in_session": 2,
          "reset_time": "Unknown"
        }
      }
    }
  },
  "pull_requests": [
    {
      "number": 104239,
      "title": "Enhance ActionListener documentation",
      "state": "closed",
      "created_at": "2024-01-10T23:09:38Z",
      "updated_at": "2024-01-18T19:25:04Z",
      "closed_at": "2024-01-18T19:25:04Z",
      "merged_at": "2024-01-18T19:25:04Z",
      "author": "DiannaHohensee",
      "labels": [
        ">non-issue",
        ":Distributed Coordination/Network",
        "Team:Distributed (Obsolete)",
        "v8.13.0"
      ],
      "comments_count": 1,
      "review_comments_count": 16,
      "additions": 28,
      "deletions": 12,
      "changed_files": 4,
      "url": "https://github.com/elastic/elasticsearch/pull/104239",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104239",
      "commits": [
        {
          "sha": "0d12b3d3538c21afb541d19663d4420d0dc513ff",
          "message": "Enhance ActionListener documentation\n\nImprove comments for ActionListener#delegateFailure and\nSubscribableListener."
        },
        {
          "sha": "bd673d18d54621e32b5ff216b9c5d7c86cbf998c",
          "message": "Apply David's code review suggestions\n\nCo-authored-by: David Turner <david.turner@elastic.co>"
        },
        {
          "sha": "a8ef112f8015c44ff85d5e362dcd5f45a14f4f78",
          "message": "update after PR review"
        },
        {
          "sha": "6867c4234799b648aa8d5a3f8895e53aaeb88175",
          "message": "Merge branch 'main' into 2024/01/10/Update-Action-Listener-Documentation"
        },
        {
          "sha": "72235451180e7af3f2b9a2c51662e6a002d2b593",
          "message": "use 'by default'"
        },
        {
          "sha": "d2530c8313280a9c2447f3780de222882ad34155",
          "message": "Merge branch 'main' into 2024/01/10/Update-Action-Listener-Documentation"
        },
        {
          "sha": "8b5ae0942e27b2a9591753f08c810113e9a5930e",
          "message": "formatting"
        }
      ],
      "comments": [
        {
          "user": "DiannaHohensee",
          "body": "https://github.com/elastic/elasticsearch/pull/96575 seems to have been about performance, but I can't easily discern the particulars to note here."
        },
        {
          "user": "DiannaHohensee",
          "body": "Discussing child classes doesn't explain what this class does (also layer violation). The child classes themselves explain the differences well enough."
        },
        {
          "user": "DaveCTurner",
          "body": "`onResponse` takes a `Response`, not an `Object`, but Java generics can't cope with such complications. Suggest just dropping the arg.\r\n\r\nAlso (tiny nit) `bc` isn't necessarily a lambda.\r\n\r\n```suggestion\r\n     * Creates a new listener, wrapping this one, that overrides {@link #onResponse} handling with the given {@code bc} consumer.\r\n```"
        },
        {
          "user": "DaveCTurner",
          "body": "I'm not sure about \"internal\" here, and \"wrapped\" sort of has other meanings in `ActionListener`-land too. Can we call it something else? \"original listener\" perhaps?\r\n\r\nAlso exceptions from `onResponse` are _forbidden_ (in tests at least).\r\n\r\nAlso (tiny nit) `onResponse` can be a `@link`\r\n\r\n```suggestion\r\n     * {@link #onFailure(Exception)} handling is delegated to the original listener. Exceptions in {@link #onResponse} are forbidden.\r\n```"
        },
        {
          "user": "DaveCTurner",
          "body": "```suggestion\r\n     * @param bc {@link BiConsumer} invoked via {@link #onResponse} with the original listener and the response with which the new listener was completed.\r\n```"
        },
        {
          "user": "DaveCTurner",
          "body": "```suggestion\r\n     * @return a new listener that delegates failures to this listener and runs {@code bc} on a response.\r\n```"
        },
        {
          "user": "DaveCTurner",
          "body": "```suggestion\r\n     * Same as {@link #delegateFailure(BiConsumer)} except that any failure thrown by {@code bc} or the original listener's\r\n     * {@link #onResponse} will be passed to the original listener's {@link #onFailure(Exception)}.\r\n```"
        },
        {
          "user": "DaveCTurner",
          "body": "I would guess it's (some subset of) avoiding the allocation of the method reference, reducing the layers of wrapping, and being easier for the compiler to spot and optimise the pattern."
        },
        {
          "user": "DaveCTurner",
          "body": "Several subclasses override the `onFailure` behaviour too, it's only a useful default.\r\n\r\n```suggestion\r\n * A wrapper around an {@link ActionListener} {@code L} that by default delegates failures to {@code L}'s {@link ActionListener#onFailure} method.\r\n```\r\n\r\nIn some sense the \"real\" reason for this class is more that it has a `toString()` implementation that includes `delegate.toString()` which makes these things less useless when they appear in logs."
        },
        {
          "user": "DaveCTurner",
          "body": "These child classes pre-date `SubscribableListener` by many years, and did not have this common superclass until quite recently, so I think it's useful to mention them here for the sake of folk that know the children but not the parent."
        },
        {
          "user": "DaveCTurner",
          "body": "```suggestion\r\n * A sequence of async steps can be chained together using a series of {@link SubscribableListener}s, similar to {@link CompletionStage} (without\r\n```"
        },
        {
          "user": "DiannaHohensee",
          "body": "Nice"
        },
        {
          "user": "DiannaHohensee",
          "body": "Returned the toString() comment. I thought of it more as an implementation detail, rather than something a user needs to know, but if it's helpful.\r\n\r\nI'm hesitant about 'by default' because the user of this class cannot provide any other delegation. I added a line about overriding other methods."
        },
        {
          "user": "DiannaHohensee",
          "body": "Returned the references"
        },
        {
          "user": "DaveCTurner",
          "body": "> the user of this class cannot provide any other delegation\r\n\r\nPerhaps I'm misunderstanding what you mean by \"user\" but there's quite a few implementations that do something different from just delegating failures to `L.onFailure()`, see for instance `org.elasticsearch.action.ActionListenerImplementations.DelegatingResponseActionListener` or `org.elasticsearch.action.support.CountDownActionListener`."
        },
        {
          "user": "DiannaHohensee",
          "body": "Ah, I think I was missing that this is an abstract class, so there are no uses of DelegatingActionListener.\r\n\r\nI was think of \"user\" as any code with `new DelegatingActionListener`. But that doesn't exist :)\r\n\r\nDone."
        }
      ],
      "body": "Improve comments for ActionListener#delegateFailure and\r\nSubscribableListener.\r\n\r\nCloses #103829\r\n\r\n--------------------------\r\n\r\nI reworded your recent SubscribableListener comment a bit, because I liked the wording of you slack explanation a while ago better.",
      "base_ref": "main",
      "head_ref": "2024/01/10/Update-Action-Listener-Documentation",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104239/comments"
    },
    {
      "number": 104236,
      "title": "[8.12] Simplify handling of runtime java for tests clusters (#104232)",
      "state": "closed",
      "created_at": "2024-01-10T22:39:12Z",
      "updated_at": "2024-01-10T23:30:12Z",
      "closed_at": "2024-01-10T23:29:49Z",
      "merged_at": "2024-01-10T23:29:49Z",
      "author": "mark-vieira",
      "labels": [
        ">non-issue",
        ":Delivery/Build",
        "backport",
        "Team:Delivery",
        "auto-merge-without-approval",
        "v8.12.1"
      ],
      "comments_count": 0,
      "review_comments_count": 0,
      "additions": 2,
      "deletions": 14,
      "changed_files": 4,
      "url": "https://github.com/elastic/elasticsearch/pull/104236",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104236",
      "commits": [
        {
          "sha": "03aa77bb7e6932715847e621970197a2e36ee599",
          "message": "Simplify handling of runtime java for tests clusters (#104232)"
        }
      ],
      "comments": [],
      "body": "Backports the following commits to 8.12:\n - Simplify handling of runtime java for tests clusters (#104232)",
      "base_ref": "8.12",
      "head_ref": "backport/8.12/pr-104232",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104236/comments"
    },
    {
      "number": 104232,
      "title": "Simplify handling of runtime java for tests clusters",
      "state": "closed",
      "created_at": "2024-01-10T21:28:32Z",
      "updated_at": "2024-01-10T22:54:37Z",
      "closed_at": "2024-01-10T22:37:38Z",
      "merged_at": "2024-01-10T22:37:38Z",
      "author": "mark-vieira",
      "labels": [
        ">non-issue",
        ":Delivery/Build",
        "Team:Delivery",
        "v8.12.1",
        "v8.13.0"
      ],
      "comments_count": 2,
      "review_comments_count": 0,
      "additions": 2,
      "deletions": 14,
      "changed_files": 4,
      "url": "https://github.com/elastic/elasticsearch/pull/104232",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104232",
      "commits": [
        {
          "sha": "4c0697cbabd86855c0b668cf2123384f392cfd00",
          "message": "Simplify handling of runtime java for tests clusters"
        },
        {
          "sha": "0fad6f9b272b62a9e4877e37f74b7c0b88dcce65",
          "message": "Simplify even further"
        }
      ],
      "comments": [],
      "body": "This simplifies our test clusters runtime java handling to simply inherit from the parent test task.",
      "base_ref": "main",
      "head_ref": "simply-test-clusters-runtime-java",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104232/comments"
    },
    {
      "number": 104231,
      "title": "ESQL: Slightly harden rest tests",
      "state": "closed",
      "created_at": "2024-01-10T21:25:30Z",
      "updated_at": "2024-01-11T12:27:06Z",
      "closed_at": "2024-01-11T12:27:00Z",
      "merged_at": "2024-01-11T12:27:00Z",
      "author": "nik9000",
      "labels": [
        ">test",
        "Team:Analytics",
        ":Analytics/ES|QL",
        "v8.13.0"
      ],
      "comments_count": 2,
      "review_comments_count": 0,
      "additions": 5,
      "deletions": 6,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104231",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104231",
      "commits": [
        {
          "sha": "fbd907a3f175a2ef9e3cdaa9617c26d31af16ad7",
          "message": "ESQL: Slightly harden rest tests\n\nThis attempts to slightly harder our formatting tests by adding a `SORT`\nto them. We've seen some failures that look like the data not arring in\nexpected order. And, without a sort, the order is technically undefined.\n\nCloses #104195"
        }
      ],
      "comments": [],
      "body": "This attempts to slightly harder our formatting tests by adding a `SORT` to them. We've seen some failures that look like the data not arring in expected order. And, without a sort, the order is technically undefined.\r\n\r\nCloses #104195\r\n",
      "base_ref": "main",
      "head_ref": "esql_rest_sort",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104231/comments"
    },
    {
      "number": 104230,
      "title": "[ML] Undeploy elser when inference model deleted",
      "state": "closed",
      "created_at": "2024-01-10T19:57:18Z",
      "updated_at": "2024-01-11T15:32:47Z",
      "closed_at": "2024-01-11T15:32:46Z",
      "merged_at": "2024-01-11T15:32:46Z",
      "author": "maxhniebergall",
      "labels": [
        ">bug",
        ":ml",
        "Team:ML",
        "v8.13.0"
      ],
      "comments_count": 3,
      "review_comments_count": 10,
      "additions": 131,
      "deletions": 2,
      "changed_files": 6,
      "url": "https://github.com/elastic/elasticsearch/pull/104230",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104230",
      "commits": [
        {
          "sha": "d1c2e104ae9c599ac0e2a483c108921eb44aa406",
          "message": "Added stop top InferenceService interface and Elser"
        },
        {
          "sha": "66cc94dfcf2a3234b42e443acc2c45a692b07dfd",
          "message": "New integration tests"
        },
        {
          "sha": "77db6a063303d2c6b21aa0942f64e1bbad56b108",
          "message": "undeploy ELSER deployment when _inf ELSER model deleted"
        },
        {
          "sha": "053b8220e0bd0b7e721c1424bfbfb6d833dcf620",
          "message": "Update docs/changelog/104230.yaml"
        },
        {
          "sha": "094c34c33ef3b64f94dfc020d7e428aa048cd1bc",
          "message": "Added check for platform architecture in integration test"
        },
        {
          "sha": "4585574e109f6991404182e38e9f6e8a9d8969d5",
          "message": "Merge branch 'undeployElserWhenInferenceModelDeleted' of https://github.com/elastic/elasticsearch into undeployElserWhenInferenceModelDeleted"
        },
        {
          "sha": "ad2f1807588174bd79c9d2e672be337c925a4d69",
          "message": "improvements from PR comments"
        }
      ],
      "comments": [
        {
          "user": "jonathan-buttner",
          "body": "🙌 "
        },
        {
          "user": "jonathan-buttner",
          "body": "nit: maybe check the message from the exception that it shows the model doesn't exist"
        },
        {
          "user": "jonathan-buttner",
          "body": "I wonder if this should be `listener.delegateFailureAndWrap()` just in case 🤷‍♂️. The only thing it is doing is `onResponse` so I guess it probably doesn't matter."
        },
        {
          "user": "maxhniebergall",
          "body": "yea, I think the AndWrap method is only needed when the lambda could throw a runtime exception, and I don't think that should be possible here"
        },
        {
          "user": "davidkyle",
          "body": "```suggestion\r\n```"
        },
        {
          "user": "davidkyle",
          "body": "```suggestion\r\n```"
        },
        {
          "user": "davidkyle",
          "body": "This will be a slow test, we should look at testing the happy case elsewhere"
        },
        {
          "user": "droberts195",
          "body": "If you look in `Platforms.java` you'll see there's code that treats both `amd64` and `x86_64` the same: https://github.com/elastic/elasticsearch/blob/12ad399c488f0cc60e19b5e1b29c6d569cb4351a/server/src/main/java/org/elasticsearch/plugins/Platforms.java#L64-L65\r\n\r\nMaybe Java is more consistent about these constants now, but I think it's better to reuse the code from `Platforms.java` rather than duplicate here.\r\n\r\n```suggestion\r\n        if (\"linux-x86_64\".equals(Platforms.PLATFORM_NAME)) {\r\n```"
        },
        {
          "user": "maxhniebergall",
          "body": "Thanks Dave, for some reason I didn't think I would be able to use the code in the Platforms plugin without adding a dependency, but it did just work. "
        },
        {
          "user": "maxhniebergall",
          "body": "Where should we be testing slow tests like this?"
        }
      ],
      "body": "Previously, when an _inference model was deleted, this action did not also delete the corresponding trained model deployment. Now, for the ELSER service, the trained model deployment associated with an inference model is deleted/undeployed when the inference model is deleted.\r\n\r\ncloses https://github.com/elastic/ml-team/issues/1099",
      "base_ref": "main",
      "head_ref": "undeployElserWhenInferenceModelDeleted",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104230/comments"
    },
    {
      "number": 104229,
      "title": "[ci] Add Amazon Linux 2 to platform support pipeline",
      "state": "closed",
      "created_at": "2024-01-10T19:47:17Z",
      "updated_at": "2024-01-11T21:18:51Z",
      "closed_at": "2024-01-11T21:17:47Z",
      "merged_at": "2024-01-11T21:17:47Z",
      "author": "brianseeders",
      "labels": [
        ">non-issue",
        ":Delivery/Build",
        "Team:Delivery",
        "v7.17.17",
        "v8.12.1",
        "v8.13.0",
        "v8.11.5"
      ],
      "comments_count": 2,
      "review_comments_count": 0,
      "additions": 1,
      "deletions": 0,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104229",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104229",
      "commits": [
        {
          "sha": "77c492cf248fad6abe52cdbfefc70a1ff1614e00",
          "message": "[ci] Add Amazon Linux 2 to platform support pipeline"
        }
      ],
      "comments": [],
      "body": "The issue preventing tests to run on amazonlinux-2 has been fixed separately, so this OS can be re-added to the platform support pipeline.",
      "base_ref": "main",
      "head_ref": "add-amazonlinux2",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104229/comments"
    },
    {
      "number": 104228,
      "title": "Skip heap attack tests in release builds",
      "state": "closed",
      "created_at": "2024-01-10T19:22:56Z",
      "updated_at": "2024-01-10T20:22:04Z",
      "closed_at": "2024-01-10T20:22:03Z",
      "merged_at": "2024-01-10T20:22:03Z",
      "author": "dnhatn",
      "labels": [
        ">test",
        "Team:Analytics",
        ":Analytics/ES|QL",
        "v8.13.0"
      ],
      "comments_count": 2,
      "review_comments_count": 0,
      "additions": 3,
      "deletions": 0,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104228",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104228",
      "commits": [
        {
          "sha": "98156eb60ebcc98c7e601f89949415d86aee615e",
          "message": "Skip heap attack tests in release builds"
        },
        {
          "sha": "423975fcf081db39421106e4e42f5d001d077cf7",
          "message": "import"
        }
      ],
      "comments": [],
      "body": "We need to add a test plugin in the heap attack tests. However, we are not loading test plugins in the release builds; hence, we need to skip this suite.",
      "base_ref": "main",
      "head_ref": "skip-heap-attack-release-builds",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104228/comments"
    },
    {
      "number": 104227,
      "title": "Avoid wrapping searchers multiple times in mget",
      "state": "closed",
      "created_at": "2024-01-10T19:08:13Z",
      "updated_at": "2024-02-07T20:53:35Z",
      "closed_at": "2024-02-07T20:53:34Z",
      "merged_at": "2024-02-07T20:53:34Z",
      "author": "dnhatn",
      "labels": [
        ">enhancement",
        ":Distributed Indexing/CRUD",
        "Team:Distributed (Obsolete)",
        "v8.13.0"
      ],
      "comments_count": 9,
      "review_comments_count": 6,
      "additions": 335,
      "deletions": 23,
      "changed_files": 7,
      "url": "https://github.com/elastic/elasticsearch/pull/104227",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104227",
      "commits": [
        {
          "sha": "e86162e2671a18457c55b470d2859f0665de828b",
          "message": "Avoid wrapping searchers multiple times in mget"
        },
        {
          "sha": "6c80cd71781c79c93918acb6fb5e6ce334c90095",
          "message": "Add test"
        },
        {
          "sha": "34a1073337c3389e20d093d137843e5fc038a825",
          "message": "Update docs/changelog/104227.yaml"
        },
        {
          "sha": "bbf87852ef4ff102279d5691ab7665d1793190d4",
          "message": "Merge branch 'main' into avoid-wrap-searchers-mget"
        },
        {
          "sha": "9f9d1cc413f1e8f68867089e6029a0599e0a9489",
          "message": "feedback"
        },
        {
          "sha": "7ac1b571b0df752bd0612daf87ab841059f8ce72",
          "message": "Merge branch 'main' into avoid-wrap-searchers-mget"
        },
        {
          "sha": "fcae84d16c9174ea7483e100db644c63d42639b3",
          "message": "harden"
        },
        {
          "sha": "5dd8b04dd66f32c750a66c2c564ad9a23891e6d1",
          "message": "interval"
        },
        {
          "sha": "8d867ebfbaa1247b6a44545cd9661a115d89572f",
          "message": "Merge branch 'main' into avoid-wrap-searchers-mget"
        }
      ],
      "comments": [
        {
          "user": "henningandersen",
          "body": "can we add javadoc to this method, including that the resulting object is for single threaded use?"
        },
        {
          "user": "henningandersen",
          "body": "I think both the single thread constraint and the release of the `MultiEngineGet` could be enforced (or at least made more explicit) if we instead make the method accept a `Consumer<MultiEngineGet>`. I think I'd prefer that, since it simplifies the contract but we can also do that as a follow-up instead. \r\n\r\nLike:\r\n```\r\npublic void mget(Consumer<MultiEngineGet> mgetter) {\r\n```\r\n\r\nthat could ensure it is all released and it would be quite unnatural to think that the consumer could pass the object to other threads - in particular if the `MultiEngineGet` passed here has no close method (only need a `get` method).\r\n\r\nFeel free to omit this for now if you prefer."
        },
        {
          "user": "henningandersen",
          "body": "why not -1 here? That would seem more natural, avoiding to think about whether there could be a first scheduled refresh involved."
        },
        {
          "user": "dnhatn",
          "body": "Great suggestion, I pushed https://github.com/elastic/elasticsearch/pull/104227/commits/fcae84d16c9174ea7483e100db644c63d42639b3"
        },
        {
          "user": "dnhatn",
          "body": "I fixed this in https://github.com/elastic/elasticsearch/pull/104227/commits/5dd8b04dd66f32c750a66c2c564ad9a23891e6d1."
        },
        {
          "user": "dnhatn",
          "body": "see https://github.com/elastic/elasticsearch/commit/fcae84d16c9174ea7483e100db644c63d42639b3"
        }
      ],
      "body": "Wrapping a searcher can be expensive; and this optimization avoids wrapping the same searcher multiple times for a MGET request.\r\n\r\nCloses #85069",
      "base_ref": "main",
      "head_ref": "avoid-wrap-searchers-mget",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104227/comments"
    },
    {
      "number": 104226,
      "title": "Remove BWC testing of snapshot 6.8 versions",
      "state": "closed",
      "created_at": "2024-01-10T18:38:44Z",
      "updated_at": "2024-01-10T22:21:58Z",
      "closed_at": "2024-01-10T22:21:58Z",
      "merged_at": "2024-01-10T22:21:58Z",
      "author": "mark-vieira",
      "labels": [
        ">non-issue",
        ":Delivery/Build",
        "Team:Delivery",
        "test-full-bwc",
        "v7.17.17"
      ],
      "comments_count": 1,
      "review_comments_count": 0,
      "additions": 12,
      "deletions": 128,
      "changed_files": 12,
      "url": "https://github.com/elastic/elasticsearch/pull/104226",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104226",
      "commits": [
        {
          "sha": "2efbdfe8d9899b3ac8adab461f5128da1f20b945",
          "message": "Remove BWC testing of snapshot 6.8 versions"
        },
        {
          "sha": "6b064b821f1e0807f0a6de787ed5ecc3e8958647",
          "message": "Fix VersionUtils"
        },
        {
          "sha": "f91171bf40726210623b6a2bcf7d41dad2a2c2bf",
          "message": "Spotless"
        },
        {
          "sha": "20571ba33c7d2b6087241e79dc037fb34fc3ea37",
          "message": "Missing import"
        },
        {
          "sha": "fdd02041228860e32058d25f86f6a6ebc941bbd6",
          "message": "More test fixes"
        },
        {
          "sha": "3c1281eaafb070964fccc59a6a772aca0dec46a7",
          "message": "Spotless"
        }
      ],
      "comments": [],
      "body": "The 6.8.x train is end of life and there will never be a 6.8.24 release. This removes testing of that version which avoids having to build 6.8 regularly from source.",
      "base_ref": "7.17",
      "head_ref": "remove-6.8-bwc",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104226/comments"
    },
    {
      "number": 104225,
      "title": "[7.17] Disable BWC tests from \"monolithic\" CI jobs (#104221)",
      "state": "closed",
      "created_at": "2024-01-10T18:24:01Z",
      "updated_at": "2024-01-10T18:54:28Z",
      "closed_at": "2024-01-10T18:54:03Z",
      "merged_at": "2024-01-10T18:54:03Z",
      "author": "mark-vieira",
      "labels": [
        "backport",
        "auto-merge-without-approval",
        "v7.17.17"
      ],
      "comments_count": 0,
      "review_comments_count": 0,
      "additions": 2,
      "deletions": 2,
      "changed_files": 2,
      "url": "https://github.com/elastic/elasticsearch/pull/104225",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104225",
      "commits": [
        {
          "sha": "bde2271d699d9811a49e392833b56fd5ff86eb53",
          "message": "Disable BWC tests from \"monolithic\" CI jobs (#104221)\n\n# Conflicts:\n#\t.buildkite/pipelines/periodic.template.yml\n#\t.buildkite/pipelines/periodic.yml\n#\t.buildkite/scripts/encryption-at-rest.sh\n#\t.buildkite/scripts/release-tests.sh"
        }
      ],
      "comments": [],
      "body": "Backports the following commits to 7.17:\n - Disable BWC tests from \"monolithic\" CI jobs (#104221)",
      "base_ref": "7.17",
      "head_ref": "backport/7.17/pr-104221",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104225/comments"
    },
    {
      "number": 104224,
      "title": "[8.11] Disable BWC tests from \"monolithic\" CI jobs (#104221)",
      "state": "closed",
      "created_at": "2024-01-10T18:18:39Z",
      "updated_at": "2024-01-10T18:55:48Z",
      "closed_at": "2024-01-10T18:55:24Z",
      "merged_at": "2024-01-10T18:55:24Z",
      "author": "mark-vieira",
      "labels": [
        ">non-issue",
        ":Delivery/Build",
        "backport",
        "Team:Delivery",
        "auto-merge-without-approval",
        "v8.11.5"
      ],
      "comments_count": 0,
      "review_comments_count": 0,
      "additions": 6,
      "deletions": 6,
      "changed_files": 4,
      "url": "https://github.com/elastic/elasticsearch/pull/104224",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104224",
      "commits": [
        {
          "sha": "711c019c7c202c6aac3d2338cbf3b22c466ef33a",
          "message": "Disable BWC tests from \"monolithic\" CI jobs (#104221)"
        }
      ],
      "comments": [],
      "body": "Backports the following commits to 8.11:\n - Disable BWC tests from \"monolithic\" CI jobs (#104221)",
      "base_ref": "8.11",
      "head_ref": "backport/8.11/pr-104221",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104224/comments"
    },
    {
      "number": 104223,
      "title": "[8.12] Disable BWC tests from \"monolithic\" CI jobs (#104221)",
      "state": "closed",
      "created_at": "2024-01-10T18:18:23Z",
      "updated_at": "2024-01-10T18:58:34Z",
      "closed_at": "2024-01-10T18:58:11Z",
      "merged_at": "2024-01-10T18:58:11Z",
      "author": "mark-vieira",
      "labels": [
        ">non-issue",
        ":Delivery/Build",
        "backport",
        "Team:Delivery",
        "auto-merge-without-approval",
        "v8.12.1"
      ],
      "comments_count": 0,
      "review_comments_count": 0,
      "additions": 6,
      "deletions": 6,
      "changed_files": 4,
      "url": "https://github.com/elastic/elasticsearch/pull/104223",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104223",
      "commits": [
        {
          "sha": "7c796aefb9df76b6f119d88ff4e73052734d6955",
          "message": "Disable BWC tests from \"monolithic\" CI jobs (#104221)"
        }
      ],
      "comments": [],
      "body": "Backports the following commits to 8.12:\n - Disable BWC tests from \"monolithic\" CI jobs (#104221)",
      "base_ref": "8.12",
      "head_ref": "backport/8.12/pr-104221",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104223/comments"
    },
    {
      "number": 104222,
      "title": "[ML] Unmute MLModelDeploymentsUpgradeIT testTrainedModelDeployment",
      "state": "closed",
      "created_at": "2024-01-10T17:47:08Z",
      "updated_at": "2024-01-11T09:34:39Z",
      "closed_at": "2024-01-11T09:34:35Z",
      "merged_at": "2024-01-11T09:34:35Z",
      "author": "droberts195",
      "labels": [
        ">test",
        ":ml",
        "Team:ML",
        "v8.13.0"
      ],
      "comments_count": 1,
      "review_comments_count": 0,
      "additions": 0,
      "deletions": 2,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104222",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104222",
      "commits": [
        {
          "sha": "606e41585fda36967e1d546a5759a84ac8278fdd",
          "message": "[ML] Do not cache ml-cpp dependencies locally\n\nWhen all the ml-cpp files were in one zip file it was possible\nto cache locally for a while. Now that they are split between\ntwo files this can cause hard-to-debug problems, if one file\nis cached and the other isn't and this happens at a time when\nchanges have been made that need to be consistent between both\nfiles. (Such situations are very rare, which is why this problem\nhasn't been seen before.)\n\nFixes #104193"
        },
        {
          "sha": "a191d95b802a9df2f81ec5ad5f7a53291960fe40",
          "message": "Revert caching change"
        }
      ],
      "comments": [],
      "body": "It seems that this test failure was purely down to inconsistency of ml-cpp dependencies, and not a real problem. Therefore the test can be unmuted.\r\n\r\nFixes #104193",
      "base_ref": "main",
      "head_ref": "no_local_cache_for_ml",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104222/comments"
    },
    {
      "number": 104221,
      "title": "Disable BWC tests from \"monolithic\" CI jobs",
      "state": "closed",
      "created_at": "2024-01-10T17:24:53Z",
      "updated_at": "2024-01-10T18:24:33Z",
      "closed_at": "2024-01-10T18:16:51Z",
      "merged_at": "2024-01-10T18:16:51Z",
      "author": "mark-vieira",
      "labels": [
        ">non-issue",
        ":Delivery/Build",
        "Team:Delivery",
        "v7.17.17",
        "v8.12.1",
        "v8.13.0",
        "v8.11.5"
      ],
      "comments_count": 2,
      "review_comments_count": 0,
      "additions": 6,
      "deletions": 6,
      "changed_files": 4,
      "url": "https://github.com/elastic/elasticsearch/pull/104221",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104221",
      "commits": [
        {
          "sha": "ee232587912305247fb93e1a14bc38e6e1bd0b70",
          "message": "Disable BWC tests from \"monolithic\" CI jobs"
        }
      ],
      "comments": [],
      "body": "Backward compatibility tests are expensive, and cause these builds to run very long, and increase flakiness due to a lot of cross-test resource contention. We introduced the `functionalTests` tasks which avoids BWC tests for this reason. There are still a few jobs that don't use this task. This PR updates them to do so.",
      "base_ref": "main",
      "head_ref": "functional-tests-refactoring",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104221/comments"
    },
    {
      "number": 104220,
      "title": "(WIP) Interface Changes",
      "state": "closed",
      "created_at": "2024-01-10T17:17:23Z",
      "updated_at": "2024-02-20T21:45:45Z",
      "closed_at": "2024-02-20T21:45:44Z",
      "merged_at": null,
      "author": "DiannaHohensee",
      "labels": [
        ">non-issue",
        ":Distributed Indexing/Engine",
        "Team:Distributed (Obsolete)"
      ],
      "comments_count": 2,
      "review_comments_count": 6,
      "additions": 43,
      "deletions": 8,
      "changed_files": 6,
      "url": "https://github.com/elastic/elasticsearch/pull/104220",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104220",
      "commits": [
        {
          "sha": "9ce73b1fe0d1874616e47bb2b076c71da6ecc427",
          "message": "Give channel access to TransportNodesAction subclasses"
        },
        {
          "sha": "038297f672b11557ae650410c894314177c586ed",
          "message": "refactor IndexShard SubscribableListener use"
        },
        {
          "sha": "3c6057a0090b3af4de525fa1ba5858faa0549e07",
          "message": "Change TransportNodesAction to instead have a nodeOperationAsync method that can be overridden instead of nodeOperation"
        },
        {
          "sha": "6813e6a36cad73bfebe725f17460a4d7b770820f",
          "message": "extend Engine interface to save reader state"
        },
        {
          "sha": "d3e4cb25d9d1d96b27c56d4f82ea50d7e137c1dd",
          "message": "fix formatting"
        },
        {
          "sha": "4076db809fcdc58f5f11931324d1eecf463a06b4",
          "message": "cleanup"
        }
      ],
      "comments": [
        {
          "user": "idegtiarenko",
          "body": "I think it is better to avoid loggers in abstract classes. In most cases once it is used it is not clear what implementation actually caused the log entry. Is there a chance instead of making it public we could remove it and replace log usages with concrete implementation loggers?"
        },
        {
          "user": "kingherc",
          "body": "If we only need it in stateless, it's preferable to have it only there."
        },
        {
          "user": "kingherc",
          "body": "I think you can avoid changing Elasticsearch core and avoid introducing an empty saveInfoToClosedShardService(). You can just introduce the saving logic in the `closeNoLock()` function of the stateless engine."
        },
        {
          "user": "DaveCTurner",
          "body": "FWIW I disagree with this. I find it more useful for the logger to refer to the exact source file that contains the log message being emitted, rather than having to chase messages around between classes. It's certainly important for the message to describe the context in which it's being called, but typically that means much more than just the name of the concrete subclass.\r\n\r\nHowever I don't think we want this to be public. It shouldn't be needed outside of this class anyway (by the same reasoning) but if there's a good reason for needing it elsewhere then we should just get it again from the `LogManager` rather than from here."
        },
        {
          "user": "DiannaHohensee",
          "body": "I tried out your suggestion, but I realized I can't rely on the `flushEngine==true` here for regular shard closure -- it sounds like `flushEngine` is [only true when closing an index or shutting down the node](https://github.com/elastic/elasticsearch/blob/a5a4b9e529b66279dd9e7967304d7214d2e36c0b/server/src/main/java/org/elasticsearch/index/IndexService.java#L592-L593). Which means, under normal circumstances, we leave the `SearchEngine` alone (don't call `flushAndClose()`), which makes sense because the `SearchEngine` survives shard closure until reads release reference to it.\r\n\r\nAnyway, I believe this leaves me needing to make elasticsearch core changes after all."
        },
        {
          "user": "DiannaHohensee",
          "body": "Oh wait, it looks like [we call engine.close() farther down](https://github.com/elastic/elasticsearch/blob/a5a4b9e529b66279dd9e7967304d7214d2e36c0b/server/src/main/java/org/elasticsearch/index/shard/IndexShard.java#L1688), not just engine.flushAndClose() here. So both can call ultimately closeNoLock().... "
        }
      ],
      "body": "Track closed search shard readers\r\n\r\nRelated to ES-6685",
      "base_ref": "main",
      "head_ref": "2024/01/03/ES-6685-all",
      "mergeable": false,
      "mergeable_state": "dirty",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104220/comments"
    },
    {
      "number": 104219,
      "title": "Enable feature flag in node shutdown full cluster restart tests",
      "state": "closed",
      "created_at": "2024-01-10T17:16:46Z",
      "updated_at": "2024-01-10T23:26:34Z",
      "closed_at": "2024-01-10T23:26:11Z",
      "merged_at": "2024-01-10T23:26:11Z",
      "author": "mark-vieira",
      "labels": [
        ">test",
        ":Delivery/Build",
        "Team:Delivery",
        "auto-merge-without-approval",
        "test-release",
        "v8.13.0"
      ],
      "comments_count": 3,
      "review_comments_count": 0,
      "additions": 1,
      "deletions": 0,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104219",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104219",
      "commits": [
        {
          "sha": "239ec022660af468dc0df6e2aa38c99753145996",
          "message": "Enable feature flag in node shutdown full cluster restart tests"
        },
        {
          "sha": "caef91d887332a34e16979b811cce570ae9a2144",
          "message": "Merge branch 'main' into shutdown-bwc-feature-flag"
        },
        {
          "sha": "9011ee78df81566fbc940a1b271746756cd0d7b0",
          "message": "Merge branch 'main' into shutdown-bwc-feature-flag"
        }
      ],
      "comments": [],
      "body": "This should resolve test failures in release builds like [this one](https://gradle-enterprise.elastic.co/s/twbb3r777mhlo/tests/task/:x-pack:plugin:shutdown:qa:full-cluster-restart:v8.12.0%23bwcTest/details/org.elasticsearch.xpack.restart.FullClusterRestartIT/testNodeShutdown%20%7Bcluster%3DUPGRADED%7D?page=eyJvdXRwdXQiOnsiMCI6NX19&top-execution=1).",
      "base_ref": "main",
      "head_ref": "shutdown-bwc-feature-flag",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104219/comments"
    },
    {
      "number": 104218,
      "title": "ESQL: Support reading points from doc-values for STATS ST_CENTROID",
      "state": "closed",
      "created_at": "2024-01-10T17:06:39Z",
      "updated_at": "2024-01-23T15:15:22Z",
      "closed_at": "2024-01-23T15:04:46Z",
      "merged_at": "2024-01-23T15:04:46Z",
      "author": "craigtaverner",
      "labels": [
        ">enhancement",
        ">docs",
        ":Analytics/Geo",
        "Team:Docs",
        "Team:Analytics",
        ":Analytics/ES|QL",
        "v8.13.0"
      ],
      "comments_count": 8,
      "review_comments_count": 70,
      "additions": 4828,
      "deletions": 1076,
      "changed_files": 70,
      "url": "https://github.com/elastic/elasticsearch/pull/104218",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104218",
      "commits": [
        {
          "sha": "253672305b473bff0013ef2fcda5330aefac0955",
          "message": "Add initial structure for ST_CENTROID"
        },
        {
          "sha": "b80c495e25713421544bd5628559d7eaab66c5d7",
          "message": "Revert \"Revert stab at implementing forStats for doc-values vs source\"\n\nThis reverts commit cfc4341bf4bf139f203671e58a5fc62140d859de."
        },
        {
          "sha": "5b123978447557380ecd0f9cc3148694acc1f791",
          "message": "Refined csv-spect tests with st_centroid"
        },
        {
          "sha": "213c138ffd882de44c2b4f0115ac3b998409ad0c",
          "message": "Spotless disagrees with intellij"
        },
        {
          "sha": "3c6731b42532552f8e99b2d51dad297af79e8428",
          "message": "Fixes after reverting fieldmapper code to test GeoPointFieldMapper"
        },
        {
          "sha": "4297c934b24f0637b9fc0ef98b22ad9d7fd3751e",
          "message": "Get GeoPointFieldMapperTests working again after enabling doc-values reading"
        },
        {
          "sha": "09b310985e2c0a5845d5cf2e082e4c517c5939e7",
          "message": "Simplify after rebase on main\n\nIn particular, field-mappers that do not need to know about fields can have simpler calls."
        },
        {
          "sha": "da0c3123d9a245108369b14c6cfadcc0ea01cee0",
          "message": "Support local physical planning of forStats attributes for spatial aggregations"
        },
        {
          "sha": "4366bc2ff3ab1654555596582184d306245e0d82",
          "message": "Get st_centroid aggregation working on doc-values\n\nWe changed it to produce BytesRef, so we don't (yet) need any doc-values types."
        },
        {
          "sha": "a279e342c7e415f774a710db9a9e54fac93603e8",
          "message": "Create both DocValues and SourceValues versions of st_centroid"
        },
        {
          "sha": "00dcdd7baa57ed66e5e22eff9ed043efbaa72292",
          "message": "Support physical planning of DocValues and SourceValues SpatialCentroid"
        },
        {
          "sha": "07e16d1d552be9af87b8550fc1036e6d07de94a7",
          "message": "Improve test for physical planning of DocValues in SpatialCentroid"
        },
        {
          "sha": "a18aa6ed00a64f067701d6cc175c8c1303f6d5fe",
          "message": "Fixed show functions for st_centroid"
        },
        {
          "sha": "fe3452d558d339241187ef2f5607ed7dac3cfa84",
          "message": "More st_centroid tests with mv_expand\n\nTo test single and multi-value centroids"
        },
        {
          "sha": "c61901db5b5e29409ca7df212cb185fb8ead18b6",
          "message": "Fix st_centroid from point literals\n\nThe blocks contained BytesRef byte[] with multiple values, and we were ignoring the offsets when decoding, so decoding the first value over and over instead of decoding the subsequent values."
        },
        {
          "sha": "68ad574d528923a68096a845499dd09912cf2b14",
          "message": "Teach CsvTests to handle spatial types alternative loading from doc-values\n\nSpatial GEO_POINT and CARTESIAN_POINT load from doc-values in some cases. If the physical planner has planned for this, we need the CsvTests to also take that into account, changing the type of the point field from BytesRefBlock to LongBlock."
        },
        {
          "sha": "ec82452d505951499abaf25fc073cc9cfec067b1",
          "message": "Fixed failing NodeSubclassTests\n\nRequired making the new constructor public and enabling Set as a valid parameter in the test framework."
        },
        {
          "sha": "6239f2f80d4c904038505593579c90d9768758f4",
          "message": "More complex st_centroid tests and fixed bug with multiple aggs\n\nWhen there were multiple agregations in the same STATS, we were inadvertently re-ordering them, causing the wrong Blocks to be fed to the wrong aggregator in the coordinator node."
        },
        {
          "sha": "1489df3c90547226421657ed631c31ca3b58f192",
          "message": "Update docs/changelog/104218.yaml"
        },
        {
          "sha": "558c2efbd7984f4b04ef14ec53b1d656b4a81a7c",
          "message": "Fix automatically generated changelog file"
        },
        {
          "sha": "c884de27b2240d7fe8455416b414e0a575145036",
          "message": "Fixed failing test\n\nThe nodes can now sometimes be Set, which is also a Collection, but not a List, and therefor never can be a subset of the children."
        },
        {
          "sha": "b72b6d4234cc84cf0605ae98e7e9f0f6956099d5",
          "message": "More tests covering more combinations including MV_EXPAND and grouping"
        },
        {
          "sha": "fdd5429c49de75e3140be30e82d326565edf03a2",
          "message": "Added cartesian st_centroid with grouping test\n\nWe could not add MV_EXPAND tests since the cartesian data does not have multi-value columns, but the geo_point tests are sufficient for this since they share the same code."
        },
        {
          "sha": "1fffba44068a23d166afdfac38eb46f493f6fd82",
          "message": "Reduce flaky tests by sorting results"
        },
        {
          "sha": "5ea442a51680592092281badfcc372b70c004d8c",
          "message": "Reduce flaky tests by sorting results"
        },
        {
          "sha": "47f8cc3b7a29d7e32667cdbde74a989fe546dda3",
          "message": "Added tests for stats on stats to ensure planner coped"
        },
        {
          "sha": "efb091b2dcc3c78922976f3c817b28eb596f7c26",
          "message": "Add unit tests to ensure doc-values in query planning complex cases"
        },
        {
          "sha": "a3a2526fce9d72e37c7d8e29f9882117d4fe8d8f",
          "message": "Some minor updates from code review"
        },
        {
          "sha": "e89a2e4302dc81c51883fbeaf87042c33d2b91bd",
          "message": "Fixes after rebase on main"
        },
        {
          "sha": "918dfebfd54ae7f66bd7ff6b3756dd5ba921b9d8",
          "message": "Merge remote-tracking branch 'origin/main' into esql_point_doc_values"
        }
      ],
      "comments": [
        {
          "user": "craigtaverner",
          "body": "Message refers to wrong method signature"
        },
        {
          "user": "craigtaverner",
          "body": "Should say WKB here."
        },
        {
          "user": "craigtaverner",
          "body": "Should say WKB here."
        },
        {
          "user": "craigtaverner",
          "body": "With the latest design, the use of `forStats==true` is limited to the local physical plan, so most of the time it is completely correct to set this to false. Should we bother changing all the callers to this method when the case where it is needed is limited to a single location?"
        },
        {
          "user": "craigtaverner",
          "body": "The problem here is that the entire test class `PointFieldMapperTests` has not been setup for synthetic source tests, which `GeoPointFieldMapperTests` has, and this support is needed for the relevant tests. We can investigate adding this."
        },
        {
          "user": "craigtaverner",
          "body": "We've considered alternative names, like `forDisplay` (opposite of for stats), but every choice has pros and cons, so I've left it like this for now, since this most closely matches current needs.\r\n\r\nIf we start using this for non-stats use cases, like spatial predicates that benefit from doc-values, we can change the name of the method at that point."
        },
        {
          "user": "craigtaverner",
          "body": "Added support for inheritence in finding the static methods used in aggregations, because, for example, the SpatialCentroid can be configured in four different ways (geo vs cartesian, and doc-values vs source values). Used only single-level inheritance for simplicity."
        },
        {
          "user": "craigtaverner",
          "body": "Look at the changes in `AggregateMapper` to see how we supported these combinations of generated function names."
        },
        {
          "user": "craigtaverner",
          "body": "This is the heart of the solution for figuring out when to use doc-values and when to use source values. It only runs on the local node, so we only consider doc-values on the local node, and it re-writes spatial aggregations to mark fields as doc-values so the right spatial aggregation functions are executed, as well as finding the fields involved, and re-writing the FieldExtractExec to load that field as doc-values from the index."
        },
        {
          "user": "craigtaverner",
          "body": "Since the re-writing to use `forStats` is done only on the local node, this knowledge does not need to be serialised across the cluster. It is therefor not required to update the transport-version, and this older constructor remains the main constructor for the entire stack. If we decide at some point to plan this knowledge in the logical planner, we would need to serialize this, and update the transport version too. At this point we see no need to take that step."
        },
        {
          "user": "craigtaverner",
          "body": "This is where the additional combination of function names is generated. So far only spatial aggregations need this, but the idea can be used by others if there is ever value."
        },
        {
          "user": "craigtaverner",
          "body": "Perhaps check for `SpatialAggregateFunction` instead, since all spatial aggregations will need this."
        },
        {
          "user": "craigtaverner",
          "body": "Done"
        },
        {
          "user": "craigtaverner",
          "body": "Done"
        },
        {
          "user": "craigtaverner",
          "body": "Done"
        },
        {
          "user": "craigtaverner",
          "body": "Done"
        },
        {
          "user": "nik9000",
          "body": "Predicate and top-n run on the results of functions consuming the points will want it."
        },
        {
          "user": "nik9000",
          "body": "The javadoc looks out of date."
        },
        {
          "user": "nik9000",
          "body": "Could you explain what this is about in more detail? I'd kind of imagined the `withForStats` would be enough to enable the optimization and the mapper would just call the single function. I imagine I'm missing some part of how the linkage works though."
        },
        {
          "user": "craigtaverner",
          "body": "Take a look at `SpatialCentroid.supplier()`. There are four possible combinations, based on two spatial types `GEO_POINT` and `CARTESIAN_POINT`, and two loading types `DocValues` and `SourceValues`. The code generator needs to generate functions for all four combinations. The `AggregateMapper` deals with many possible combinations, but not this specific set of `DocValues` and `SourceValues`, so I added these using the same pattern I see here for other combinations. Without this fix the classloader cannot find the classes to load for the four combinations."
        },
        {
          "user": "nik9000",
          "body": "> Without this fix the classloader cannot find the classes to load for the four combinations.\r\n\r\nThat's the trick. I suppose we're using some kind of trick to get these linked up. Scalars just use booleans for it. I'd kind of prefer that. But now isn't the time to rework that."
        },
        {
          "user": "costin",
          "body": "Despite looking at the PR , I still find the method name confusing.\r\nInstead of telling it who should be using it, how about describing its role? e.g. loadAsDocValues or loadAsColumn, etc..."
        },
        {
          "user": "costin",
          "body": "Small nit but you change the return type as well: protected Function<Object, BytesRef>"
        },
        {
          "user": "costin",
          "body": "Could use the ternary operator to make this a one-liner:\r\n`return blContext.asDocValues() && hasDocValues() ? new BlockDocValuesReader.LongsBlockLoader(name()) : blockLoaderFromSource(blContext)`"
        },
        {
          "user": "costin",
          "body": "Same as above - e.g. `preferDocValues()`"
        },
        {
          "user": "costin",
          "body": "As there are/will be multiple geo aggs, it makes sense to make a spatial subpackage."
        },
        {
          "user": "costin",
          "body": "compute.aggregation.geo :)"
        },
        {
          "user": "costin",
          "body": "👍 \r\nI would put them at the end, after the conversion functions or right above them - any reason this group is placed here?"
        },
        {
          "user": "costin",
          "body": "`aggregate.spatial`"
        },
        {
          "user": "costin",
          "body": "Drop from -`SpatialDocuValuesExtraction`"
        }
      ],
      "body": "Support `st_centroid` aggregation on `geo_point` and `cartesian_point` data. All aggregations will combined the original data into new data, and as such we can load from doc-values for performance. This feature is both the first spatial aggregation for ES|QL as well as support for loading points from doc-values instead of from source, but only for spatial aggregations.\r\n\r\nSince ES|QL aggregations (ie the `STATS` command) are split into two phases, an initial aggregation on the data nodes, and the final aggregation on the coordinator node, this allows us to only need to support doc-values on the data nodes. The data flow is as follows:\r\n\r\n* Data node uses FieldExtractExec to tell the BlockLoaderContext that the blocks should be loaded with `forStats==true`, and the GeoPoint and cartesian Point field types will detect this boolean and return `LongBlock` loaders.\r\n* The `SpatialAggregateFunction` on the data node will be notified that it should support `LongBlock` input, and will decode the long into `(double x, double y)` before aggregating, and producing intermediate results (four `DoubleBLock` for xSum, xComp, ySum, yCom and one `LongBlock` for count).\r\n* The `SpatialAggregateFunction` on the coordinator node only receives intermediate results, and will never receive actual points, so does not care what block type was originally used, and will produce the final centroid in WKB format.\r\n\r\nThis design has a few advantages over the original plan of supporting both WKB and encoded longs in the full stack:\r\n* Only one backing type for each explicit type (no need to bring back the `LongBlock` support we used in 8.12)\r\n* The decision to switch to `LongBlock` in the data loading from the index can be made very late, at the `LocalPhysicalPlanOptimizer` stage, isolating it to a very small set of changes, and also only on the data nodes at the data loading part.\r\n\r\nNote that this solution will not support the use of doc-values in `ST_CENTROID` if some other `STATS` command is run first, because only the first `STATS` command will be run on the data nodes. For example:\r\n\r\n```\r\nFROM airports\r\n| STATS count = COUNT(*) BY scalerank, location\r\n| LIMIT 10\r\n| STATS centroid=ST_CENTROID(location), count=SUM(count)\r\n```\r\n\r\nIn this case the `ST_CENTROID` will use the source values for the calculation. We have decided to favour the simpler solution of only doing local physical planning for doc-values because support of doc-values in the coordinator node requires a much more complex solution with full-stack support of both source and doc-values versions of the point types.\r\n\r\nFixes #104656 104656\r\n",
      "base_ref": "main",
      "head_ref": "esql_point_doc_values",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104218/comments"
    },
    {
      "number": 104217,
      "title": "Remove incorrect is-not-empty asserts in EsqlAsyncActionIT",
      "state": "closed",
      "created_at": "2024-01-10T16:59:43Z",
      "updated_at": "2024-01-10T18:06:28Z",
      "closed_at": "2024-01-10T18:06:28Z",
      "merged_at": "2024-01-10T18:06:28Z",
      "author": "ChrisHegarty",
      "labels": [
        ">test",
        "Team:Analytics",
        ":Analytics/ES|QL",
        "v8.13.0"
      ],
      "comments_count": 1,
      "review_comments_count": 0,
      "additions": 0,
      "deletions": 3,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104217",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104217",
      "commits": [
        {
          "sha": "b044a066abf280e4461f91f968786146cf585f9e",
          "message": "Remove incorrect is_no_empty asserts in EsqlAsyncActionIT"
        },
        {
          "sha": "69eb51f66f807d86c77a9aa8501dfb45cb1a25f8",
          "message": "import"
        }
      ],
      "comments": [],
      "body": "This commit removes a couple of incorrect is-not-empty asserts in EsqlAsyncActionIT. \r\n\r\nThe original intent of the asserts here was to try to ensure that the completed results are valid - there should be a result. However, there are some test scenarios where an empty list of columns and values is actually the expected and correct result. The asserts are not need, not correct, and should just be removed. The results will be asserted by the caller when the response is returned.\r\n\r\ncloses #104214",
      "base_ref": "main",
      "head_ref": "esql_async_test_empty_fix",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104217/comments"
    },
    {
      "number": 104216,
      "title": "ESQL: Allow custom delimiters in CsvTestsDataLoader",
      "state": "closed",
      "created_at": "2024-01-10T16:55:44Z",
      "updated_at": "2024-01-22T07:47:59Z",
      "closed_at": "2024-01-22T07:47:55Z",
      "merged_at": null,
      "author": "iverase",
      "labels": [
        ">test",
        "Team:Analytics",
        ":Analytics/ES|QL",
        "v8.13.0"
      ],
      "comments_count": 5,
      "review_comments_count": 0,
      "additions": 26,
      "deletions": 22,
      "changed_files": 2,
      "url": "https://github.com/elastic/elasticsearch/pull/104216",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104216",
      "commits": [
        {
          "sha": "64516eacc4bb439ae092c71bb03a976df1919585",
          "message": "Allow custom delimiters in CsvTestsDataLoader"
        },
        {
          "sha": "fd9c35ff21f7b9de5f7c628cde07e5feb5abd45c",
          "message": "Move delimiter to `delimitedListToStringArray`"
        }
      ],
      "comments": [],
      "body": "It is currently not possible to generate datasets if any of the fields contain a comma. To avoid this limitation we can allow each dataset to define its own delimiter so they can overcome this limitation.",
      "base_ref": "main",
      "head_ref": "CsvTestsDataLoader",
      "mergeable": false,
      "mergeable_state": "dirty",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104216/comments"
    },
    {
      "number": 104213,
      "title": "Find break limits for DocBlock tests on fly",
      "state": "closed",
      "created_at": "2024-01-10T16:25:49Z",
      "updated_at": "2024-01-12T17:40:35Z",
      "closed_at": "2024-01-12T17:40:34Z",
      "merged_at": "2024-01-12T17:40:34Z",
      "author": "dnhatn",
      "labels": [
        ">test",
        "Team:Analytics",
        ":Analytics/ES|QL",
        "v8.13.0"
      ],
      "comments_count": 3,
      "review_comments_count": 2,
      "additions": 69,
      "deletions": 43,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104213",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104213",
      "commits": [
        {
          "sha": "0e24c0dedf8a92458a40c45515d19e4fa9144550",
          "message": "Find break limits for DocBlock tests on fly"
        },
        {
          "sha": "dcaead1c30ab9f4cf7c26aa85867f8aee6871632",
          "message": "Merge branch 'main' into fix-doc-break"
        },
        {
          "sha": "faaeb89764e3c649a22c7442d84c5edb939a0e62",
          "message": "Feedback"
        }
      ],
      "comments": [
        {
          "user": "nik9000",
          "body": "I don't think we need the MAX limit test if we're going to find this on the fly. The act of finding it confirms that it breaks."
        },
        {
          "user": "nik9000",
          "body": "I'd move this to the tests that need them. If the build process doesn't properly release on failure this could leave behind un-released blocks. Better to have that fail in the test, i think."
        }
      ],
      "body": "The test failure is related to #104159, where we had an overestimate of the RAM usage for X-ArrayVector. Instead of updating the break limits, this PR uses the breaker utility that @nik9000  wrote to dynamically compute the limits on-the-fly.\r\n\r\nCloses #104191",
      "base_ref": "main",
      "head_ref": "fix-doc-break",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104213/comments"
    },
    {
      "number": 104212,
      "title": "Telemetry agent settings explicit fallback",
      "state": "closed",
      "created_at": "2024-01-10T15:53:38Z",
      "updated_at": "2024-01-22T16:09:30Z",
      "closed_at": "2024-01-22T16:09:30Z",
      "merged_at": null,
      "author": "stu-elastic",
      "labels": [
        "v8.13.0"
      ],
      "comments_count": 0,
      "review_comments_count": 1,
      "additions": 122,
      "deletions": 30,
      "changed_files": 6,
      "url": "https://github.com/elastic/elasticsearch/pull/104212",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104212",
      "commits": [
        {
          "sha": "4a3438255553325cffbd91669f845b87cb0d7d28",
          "message": "Add test"
        },
        {
          "sha": "ad2f50adc997509dbd88b7305c978ece8b136707",
          "message": "Merge branch 'main' of github.com:elastic/elasticsearch into telemetry-agent-settings-explicit-fallback"
        },
        {
          "sha": "d2a333a8680af02245a3d14f97f4d2058f261f33",
          "message": "Add fallback prefix"
        },
        {
          "sha": "824ac46cf2759dbfd8e9844e555bf0055a02d39e",
          "message": "Merge branch 'telemetry-agent-settings-explicit-fallback' of github.com:stu-elastic/elasticsearch into telemetry-agent-settings-explicit-fallback"
        },
        {
          "sha": "349f2a1406ed3fa465b521730ddb545ae1a0a496",
          "message": "debug logs"
        },
        {
          "sha": "7244ee4f80d390cc746dedd178d32a45136aa88f",
          "message": "merge whitelist changes"
        },
        {
          "sha": "9e4d28badc5f0f67d6f0b969499dcf11867701c5",
          "message": "Merge branch 'main' of github.com:elastic/elasticsearch into telemetry-agent-settings-explicit-fallback"
        },
        {
          "sha": "67f1b35716dbad3ddd759ea7807bdf0a72218556",
          "message": "test and more logging"
        },
        {
          "sha": "fc7ff9c8894406f6885d7d89a67e39daa99bd5ea",
          "message": "Fix cli -javaagent"
        },
        {
          "sha": "bfb7f0bbfa444899e92177fb4d8de72a1a996f82",
          "message": "Merge branch 'main' of github.com:elastic/elasticsearch into telemetry-agent-settings-explicit-fallback"
        }
      ],
      "comments": [
        {
          "user": "stu-elastic",
          "body": "Ignore, didn't work"
        }
      ],
      "body": null,
      "base_ref": "main",
      "head_ref": "telemetry-agent-settings-explicit-fallback",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104212/comments"
    },
    {
      "number": 104210,
      "title": "ESQL: Fix bug in topn tests",
      "state": "closed",
      "created_at": "2024-01-10T15:23:56Z",
      "updated_at": "2024-01-12T18:03:35Z",
      "closed_at": "2024-01-12T18:03:12Z",
      "merged_at": "2024-01-12T18:03:12Z",
      "author": "nik9000",
      "labels": [
        ">test",
        "Team:Analytics",
        "auto-merge-without-approval",
        ":Analytics/ES|QL",
        "v8.13.0"
      ],
      "comments_count": 1,
      "review_comments_count": 2,
      "additions": 226,
      "deletions": 102,
      "changed_files": 19,
      "url": "https://github.com/elastic/elasticsearch/pull/104210",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104210",
      "commits": [
        {
          "sha": "b16b5f868a6014912fb3c89c0f27e0e221473523",
          "message": "ESQL: Fix bug in topn tests\n\nThis fixes a bug in the topn tests which failed because we tried to sort\nof a geo field. Geo fields aren't valid sort keys but the test is\nrandomized and rarely picks them. This stops it from picking them."
        },
        {
          "sha": "717da5033bdcfdf4cf42971301b404ac3595dde0",
          "message": "Merge branch 'main' into fix_104167"
        },
        {
          "sha": "1e0b4ec3aca51082ce0ac3549d946091e88ce404",
          "message": "Reenable"
        }
      ],
      "comments": [
        {
          "user": "nik9000",
          "body": "I added all of this to make debugging eaier."
        },
        {
          "user": "nik9000",
          "body": "And this is the real fix."
        }
      ],
      "body": "This fixes a bug in the topn tests which failed because we tried to sort of a geo field. Geo fields aren't valid sort keys but the test is randomized and rarely picks them. This stops it from picking them.\r\n\r\nMost of the text of this change is actually just me making debugging easier.\r\n\r\nCloses #104167",
      "base_ref": "main",
      "head_ref": "fix_104167",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104210/comments"
    },
    {
      "number": 104209,
      "title": "DesiredNode: deprecate `node_version` field and make it optional (unused) in current parser",
      "state": "closed",
      "created_at": "2024-01-10T15:17:23Z",
      "updated_at": "2024-01-29T13:09:49Z",
      "closed_at": "2024-01-29T13:09:46Z",
      "merged_at": "2024-01-29T13:09:46Z",
      "author": "ldematte",
      "labels": [
        ":Core/Infra/Core",
        ">deprecation",
        ":Distributed Indexing/Distributed",
        "Team:Core/Infra",
        "Team:Distributed (Obsolete)",
        "test-full-bwc",
        "v8.13.0"
      ],
      "comments_count": 3,
      "review_comments_count": 8,
      "additions": 647,
      "deletions": 513,
      "changed_files": 27,
      "url": "https://github.com/elastic/elasticsearch/pull/104209",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104209",
      "commits": [
        {
          "sha": "02e5c636e8c3b6fd48c932831ef1ba50e1672735",
          "message": "Deprecated node_version field, made it optional(unused) in new parser"
        },
        {
          "sha": "37fd30a4847912a48a1902d3e2fdeb024d9817c7",
          "message": "Merge remote-tracking branch 'upstream/main' into desired-node-version-deprecation"
        },
        {
          "sha": "372f3c31b1efee12de9457187e87799a868bd4ea",
          "message": "Update docs/changelog/104209.yaml"
        },
        {
          "sha": "1d03572c989942506ca07666e8763659e7c9f502",
          "message": "Updated changelog"
        },
        {
          "sha": "d52a4994bbfebf1ca0cba55c84435cb3da4754cd",
          "message": "Response based on feature detection (WIP)"
        },
        {
          "sha": "41c81898710e5c207c7c64df5530f0581c0426e1",
          "message": "Merge remote-tracking branch 'upstream/main' into desired-node-version-deprecation"
        },
        {
          "sha": "db7eb0edf777be69c13ab64d01576f05a3ec6620",
          "message": "Merge remote-tracking branch 'upstream/main' into desired-node-version-deprecation"
        },
        {
          "sha": "0cd5d00677bf2c1a272c496c92eb9ff8b6a03459",
          "message": "Added deprecation warning handler for mixed cluster"
        },
        {
          "sha": "eaeab235207a72dc128e5239d9ac75453dbdfef5",
          "message": "Merge remote-tracking branch 'upstream/main' into desired-node-version-deprecation"
        },
        {
          "sha": "aa5f5dec88bf58597e11da571a67c56477d131da",
          "message": "Split tests for old vs. current format"
        },
        {
          "sha": "15512c34a420fd48b0e9b11d2adf25ed182c58ba",
          "message": "Adding deprecation warning only if whole cluster has feature"
        },
        {
          "sha": "1684dd4d0b08cf1c065c14569be4095c29fa629b",
          "message": "Changed internal type to String"
        },
        {
          "sha": "103d3e508705f5ea0e276f89ba0e907bb656f530",
          "message": "Merge remote-tracking branch 'upstream/main' into desired-node-version-deprecation"
        },
        {
          "sha": "fdf0c6f937ff460c07955b8acb191acc63afdb96",
          "message": "Fix"
        },
        {
          "sha": "c0bc5dd40af63617c95c61226156adede283fb23",
          "message": "Fix tests"
        },
        {
          "sha": "25eeba4a12d2e8f7f5e9171b7c85b9f1b40585a7",
          "message": "Merge remote-tracking branch 'upstream/main' into desired-node-version-deprecation"
        },
        {
          "sha": "25aa3b3532545b09c94318813d9e7a07f7232628",
          "message": "Spotless + docs fix"
        },
        {
          "sha": "9729736e93cb8c2aee8f9ffccc10674cafc0c5a2",
          "message": "Changed YAML prerequisite conditions to use the old format (compatible with clients)"
        },
        {
          "sha": "02590a8e5743dd80f0eebb1093caba7b339ec3d0",
          "message": "Merge remote-tracking branch 'upstream/main' into desired-node-version-deprecation"
        },
        {
          "sha": "5da0a3060f2925425afd2860b266e803abe6098a",
          "message": "Merge remote-tracking branch 'upstream/main' into desired-node-version-deprecation"
        },
        {
          "sha": "fe1a185ad8e7b952bbdd0d445d134fc1f7583ca9",
          "message": "Fix: removed new YAML syntax"
        },
        {
          "sha": "21fa8f8611d9aff424b9e910a1120b9651da7717",
          "message": "Fixed test to account for non-changing version (node_version no longer present)"
        }
      ],
      "comments": [
        {
          "user": "thecoop",
          "body": "Why do we need to maintain the string in the serialization at all?"
        },
        {
          "user": "thecoop",
          "body": "This needs the `randomBoolean()` between random processor ranges & random number of processors"
        },
        {
          "user": "ldematte",
          "body": "Since we are just deprecating the change, I thought it was better to keep the requested value in the response - so if you have a request with version inside (deprecated, but still valid), you find it in the responses too.\r\nThis is the most conservative route I think; I'm open to remove it altogether if we agree this is OK."
        },
        {
          "user": "ldematte",
          "body": "True, good spot, thanks!"
        },
        {
          "user": "fcofdez",
          "body": "Why do we need this check?"
        },
        {
          "user": "ldematte",
          "body": "Since the API now accepts anything as `node_version`, there is change this is an empty string or anything really. An alternative is to have this check during parsing (line 108), so we keep rejecting invalid/non-semantic versions (you either skip it or provide a valid one). \r\nWe don't really need it, we just need a Version if we are talking to older nodes (TransportVersion < DESIRED_NODE_VERSION_OPTIONAL_STRING), that's why the check is here."
        },
        {
          "user": "ldematte",
          "body": "But let me know if you prefer to move it in the parser @fcofdez "
        },
        {
          "user": "fcofdez",
          "body": "I think it's easier to understand if we keep the validation in the parser, but it's not a strong preference 👍 "
        }
      ],
      "body": "This PR follow our conversation on usage of semantic versions in APIs (new or old).\r\nWe agreed that the \"no-downgrade\" check currently done inside DesiredNode (`DesiredNodesSettingsValidator`) is better done externally (e.g. by ECK tools/services). Moving forward, we will need a more refined (and different) way to ensure the new topology is acceptable based on features, not on a catch-all version - the same API in serverless is bound to be quite different.\r\n\r\nThe DesiredNode parser still retains `node_version` to ensure compatibility, but it is now optional (and the parsed valued is discarded) and a deprecation warning is added to the response when this is specified.",
      "base_ref": "main",
      "head_ref": "desired-node-version-deprecation",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104209/comments"
    },
    {
      "number": 104208,
      "title": "[8.11] Mention `IndexFormatToo{Old,New}Exception` as corruption (#104204)",
      "state": "closed",
      "created_at": "2024-01-10T13:55:28Z",
      "updated_at": "2024-01-10T14:16:08Z",
      "closed_at": "2024-01-10T14:15:45Z",
      "merged_at": "2024-01-10T14:15:45Z",
      "author": "DaveCTurner",
      "labels": [
        ">docs",
        ":Distributed Indexing/Distributed",
        "backport",
        "Team:Distributed (Obsolete)",
        "Team:Docs",
        "auto-merge-without-approval",
        "v8.11.5"
      ],
      "comments_count": 1,
      "review_comments_count": 0,
      "additions": 8,
      "deletions": 2,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104208",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104208",
      "commits": [
        {
          "sha": "1a0f06c5dba974d41097374c431b6af12b49236b",
          "message": "Mention `IndexFormatToo{Old,New}Exception` as corruption (#104204)\n\nIf a file header is corrupted then the exception may be reported as a\nbad index format version rather than a checksum mismatch. This commit\nadjusts the docs to cover this case."
        }
      ],
      "comments": [],
      "body": "Backports the following commits to 8.11:\n - Mention `IndexFormatToo{Old,New}Exception` as corruption (#104204)",
      "base_ref": "8.11",
      "head_ref": "backport/8.11/pr-104204",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104208/comments"
    },
    {
      "number": 104207,
      "title": "[8.12] Mention `IndexFormatToo{Old,New}Exception` as corruption (#104204)",
      "state": "closed",
      "created_at": "2024-01-10T13:55:14Z",
      "updated_at": "2024-01-10T14:14:55Z",
      "closed_at": "2024-01-10T14:14:33Z",
      "merged_at": "2024-01-10T14:14:33Z",
      "author": "DaveCTurner",
      "labels": [
        ">docs",
        ":Distributed Indexing/Distributed",
        "backport",
        "Team:Distributed (Obsolete)",
        "Team:Docs",
        "auto-merge-without-approval",
        "v8.12.1"
      ],
      "comments_count": 1,
      "review_comments_count": 0,
      "additions": 8,
      "deletions": 2,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104207",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104207",
      "commits": [
        {
          "sha": "75255df7eeb38be449c4c35db06b2c8b8bd481db",
          "message": "Mention `IndexFormatToo{Old,New}Exception` as corruption (#104204)\n\nIf a file header is corrupted then the exception may be reported as a\nbad index format version rather than a checksum mismatch. This commit\nadjusts the docs to cover this case."
        }
      ],
      "comments": [],
      "body": "Backports the following commits to 8.12:\n - Mention `IndexFormatToo{Old,New}Exception` as corruption (#104204)",
      "base_ref": "8.12",
      "head_ref": "backport/8.12/pr-104204",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104207/comments"
    },
    {
      "number": 104205,
      "title": "ESQL: Run yaml tests async",
      "state": "closed",
      "created_at": "2024-01-10T13:35:42Z",
      "updated_at": "2024-01-10T20:58:36Z",
      "closed_at": "2024-01-10T20:58:13Z",
      "merged_at": "2024-01-10T20:58:13Z",
      "author": "nik9000",
      "labels": [
        ">test",
        "Team:Analytics",
        "auto-merge-without-approval",
        ":Analytics/ES|QL",
        "v8.13.0"
      ],
      "comments_count": 1,
      "review_comments_count": 0,
      "additions": 295,
      "deletions": 37,
      "changed_files": 9,
      "url": "https://github.com/elastic/elasticsearch/pull/104205",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104205",
      "commits": [
        {
          "sha": "609db2f7974a7c44c8c11248faf226100ae26e41",
          "message": "ESQL: Run yaml tests async\n\nThis adds tests that run the our suite of yaml tests against the ESQL\nasync endpoint. That's quite nice because the yaml tests are where we\nhandle lots of fun error cases and this'll make sure async does sensible\nthings in those cases."
        },
        {
          "sha": "b9dbdddc053cb80f43422ab404520f1329998abb",
          "message": "Merge branch 'main' into esql_yaml_tests_async"
        },
        {
          "sha": "b18e5a8031097783e891b15f753aca568e0910dd",
          "message": "Spotless"
        }
      ],
      "comments": [],
      "body": "This adds tests that run the our suite of yaml tests against the ESQL async endpoint. That's quite nice because the yaml tests are where we handle lots of fun error cases and this'll make sure async does sensible things in those cases.\r\n",
      "base_ref": "main",
      "head_ref": "esql_yaml_tests_async",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104205/comments"
    },
    {
      "number": 104204,
      "title": "Mention `IndexFormatToo{Old,New}Exception` as corruption",
      "state": "closed",
      "created_at": "2024-01-10T13:33:30Z",
      "updated_at": "2024-06-17T06:17:26Z",
      "closed_at": "2024-01-10T13:54:08Z",
      "merged_at": "2024-01-10T13:54:08Z",
      "author": "DaveCTurner",
      "labels": [
        ">docs",
        ":Distributed Indexing/Distributed",
        "Team:Distributed (Obsolete)",
        "Team:Docs",
        "auto-merge-without-approval",
        "v8.12.1",
        "v8.13.0",
        "v8.11.5"
      ],
      "comments_count": 4,
      "review_comments_count": 3,
      "additions": 8,
      "deletions": 2,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104204",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104204",
      "commits": [
        {
          "sha": "31eead1d32b63bf842565bc176d751f963c69880",
          "message": "Mention `IndexFormatToo{Old,New}Exception` as corruption\n\nIf a file header is corrupted then the exception may be reported as a\nbad index format version rather than a checksum mismatch. This commit\nadjusts the docs to cover this case."
        }
      ],
      "comments": [
        {
          "user": "idegtiarenko",
          "body": "I do not think this change is related to the title. Was it intentional?"
        },
        {
          "user": "DaveCTurner",
          "body": "Yeah it was intentional, I meant to fix this in the last change to this file but missed it."
        },
        {
          "user": "idegtiarenko",
          "body": "Why would you like to remove the mention of another process? My understanding is that it is still a possibility. Is it mentioned anywhere else?"
        }
      ],
      "body": "If a file header is corrupted then the exception may be reported as a\r\nbad index format version rather than a checksum mismatch. This commit\r\nadjusts the docs to cover this case.",
      "base_ref": "main",
      "head_ref": "2024/01/10/IndexFormatTooOldException-corruption",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104204/comments"
    },
    {
      "number": 104203,
      "title": "[8.11] Update nested knn search documentation about inner-hits (#104154)",
      "state": "closed",
      "created_at": "2024-01-10T12:48:57Z",
      "updated_at": "2024-01-10T13:09:33Z",
      "closed_at": "2024-01-10T13:09:10Z",
      "merged_at": "2024-01-10T13:09:10Z",
      "author": "benwtrent",
      "labels": [
        ">docs",
        "backport",
        "Team:Docs",
        "Team:Search",
        "auto-merge-without-approval",
        ":Search Relevance/Vectors",
        "v8.11.5"
      ],
      "comments_count": 1,
      "review_comments_count": 0,
      "additions": 7,
      "deletions": 0,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104203",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104203",
      "commits": [
        {
          "sha": "d50073be1ffc981c9ebea2aa7416731d6bf797ed",
          "message": "Update nested knn search documentation about inner-hits (#104154)\n\nAdding a link tag for inner hits behavior and kNN search. Additionally\nadding a note that if you are using multiple knn clauses, that the inner\nhit name should be provided."
        }
      ],
      "comments": [],
      "body": "Backports the following commits to 8.11:\n - Update nested knn search documentation about inner-hits (#104154)",
      "base_ref": "8.11",
      "head_ref": "backport/8.11/pr-104154",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104203/comments"
    },
    {
      "number": 104202,
      "title": "[8.12] Update nested knn search documentation about inner-hits (#104154)",
      "state": "closed",
      "created_at": "2024-01-10T12:48:35Z",
      "updated_at": "2024-01-10T13:08:48Z",
      "closed_at": "2024-01-10T13:08:24Z",
      "merged_at": "2024-01-10T13:08:24Z",
      "author": "benwtrent",
      "labels": [
        ">docs",
        "backport",
        "Team:Docs",
        "Team:Search",
        "auto-merge-without-approval",
        ":Search Relevance/Vectors",
        "v8.12.1"
      ],
      "comments_count": 1,
      "review_comments_count": 0,
      "additions": 7,
      "deletions": 0,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104202",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104202",
      "commits": [
        {
          "sha": "79585659fd9aee98b449236a7527e8b954a97615",
          "message": "Update nested knn search documentation about inner-hits (#104154)\n\nAdding a link tag for inner hits behavior and kNN search. Additionally\nadding a note that if you are using multiple knn clauses, that the inner\nhit name should be provided."
        }
      ],
      "comments": [],
      "body": "Backports the following commits to 8.12:\n - Update nested knn search documentation about inner-hits (#104154)",
      "base_ref": "8.12",
      "head_ref": "backport/8.12/pr-104154",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104202/comments"
    },
    {
      "number": 104201,
      "title": "ESQL: Rename some functions in SpatialCoordinateTypes",
      "state": "closed",
      "created_at": "2024-01-10T12:35:00Z",
      "updated_at": "2024-01-10T16:39:56Z",
      "closed_at": "2024-01-10T16:39:53Z",
      "merged_at": "2024-01-10T16:39:53Z",
      "author": "iverase",
      "labels": [
        ":Analytics/Geo",
        ">refactoring",
        "Team:Analytics",
        "v8.13.0"
      ],
      "comments_count": 1,
      "review_comments_count": 0,
      "additions": 60,
      "deletions": 68,
      "changed_files": 20,
      "url": "https://github.com/elastic/elasticsearch/pull/104201",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104201",
      "commits": [
        {
          "sha": "e0835645f05ef56493e4596caa1dadf3257df782",
          "message": "Rename some functions in SpatialCoordinateTypes"
        }
      ],
      "comments": [],
      "body": "This PR just rename some of the functions on SpatialCoordinateTypes, in particular the ones that refers to String instead of WKT. In addition the methods that where taking a Point now take a Geometry so they can use when introducing more complex geometries.",
      "base_ref": "main",
      "head_ref": "SpatialCoordinateTypesTidy",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104201/comments"
    },
    {
      "number": 104200,
      "title": "Expose realms authentication metrics",
      "state": "closed",
      "created_at": "2024-01-10T12:25:33Z",
      "updated_at": "2024-01-15T16:11:58Z",
      "closed_at": "2024-01-15T16:11:58Z",
      "merged_at": "2024-01-15T16:11:58Z",
      "author": "slobodanadamovic",
      "labels": [
        ">enhancement",
        ":Security/Authentication",
        "Team:Security",
        "v8.13.0"
      ],
      "comments_count": 2,
      "review_comments_count": 1,
      "additions": 238,
      "deletions": 62,
      "changed_files": 7,
      "url": "https://github.com/elastic/elasticsearch/pull/104200",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104200",
      "commits": [
        {
          "sha": "f66103a4edd76a35db1c2d1a63f7fc03b0b56989",
          "message": "This PR adds metrics for recording successful and failed\nauthentications for individual realms. Exposed metrics are:\n\n- `es.security.authc.realms.success.total`\n- `es.security.authc.realms.failures.total`\n- `es.security.authc.realms.time`\n\nEach of the metric is exposed at node level and includes\nadditional information with these attributes:\n\n- `es.security.realm_type`\n- `es.security.realm_name`\n- `es.security.realm_authc_failure_reason`"
        },
        {
          "sha": "55523618eccde4db2d1a847a0fe4ea240321f082",
          "message": "Update docs/changelog/104200.yaml"
        },
        {
          "sha": "6820003aa377394fec3a0f7abdfb5384257e8473",
          "message": "nit"
        },
        {
          "sha": "a877c34a5207eaed80a718bec76c765eae2dcf4d",
          "message": "Fix failing tests"
        },
        {
          "sha": "b1945a6359ad865954721c78c3e63ad05284b962",
          "message": "Merge branch 'sa-add-realms-authentication-metrics' of github.com:slobodanadamovic/elasticsearch into sa-add-realms-authentication-metrics"
        },
        {
          "sha": "b7d9abf1bc798bca32695c33f710232ff2b4ed94",
          "message": "Merge branch 'main' of github.com:elastic/elasticsearch into sa-add-realms-authentication-metrics"
        },
        {
          "sha": "5aba1412c575a54ec52ad1b5fa4ca65412a0be44",
          "message": "Fix failing tests"
        },
        {
          "sha": "3eae5f3a6b97bf7718738d82f0a720ca453dc7df",
          "message": "Merge branch 'main' of github.com:elastic/elasticsearch into sa-add-realms-authentication-metrics"
        },
        {
          "sha": "7c4fa6e74f9663feb7f5805b86b6414b2b71a2de",
          "message": "Merge branch 'main' of github.com:elastic/elasticsearch into sa-add-realms-authentication-metrics\n\n# Conflicts:\n#\tx-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/metric/SecurityMetricType.java"
        },
        {
          "sha": "ad82a4f214bf9ebe99559f789fa6000d355fc1fb",
          "message": "Test metrics"
        },
        {
          "sha": "d6d029125a9acc37e50410e17d4cf07cea522ff4",
          "message": "Merge branch 'main' of github.com:elastic/elasticsearch into sa-add-realms-authentication-metrics"
        },
        {
          "sha": "50ef81a03284990cfe54b7d662b9fe5f024e670e",
          "message": "Apply spotless"
        }
      ],
      "comments": [
        {
          "user": "slobodanadamovic",
          "body": "Wrapping a listener with `InstrumentedSecurityActionListener.wrapForAuthc` caused the formatting change which makes it hard to determine the actual diff, but this line is the only change. "
        }
      ],
      "body": "This PR adds metrics for recording successful and failed\r\nauthentications for individual realms. Exposed metrics are:\r\n\r\n- `es.security.authc.realms.success.total`\r\n- `es.security.authc.realms.failures.total`\r\n- `es.security.authc.realms.time`\r\n\r\nEach of the metric is exposed at node level and includes additional information with these attributes:\r\n\r\n- `es.security.realm_type` - can be one of: `jwt`, `saml`, `oidc`, `active_directory`, `ldap`, `pki`, `kerberos`...\r\n- `es.security.realm_name`\r\n- `es.security.realm_authc_failure_reason`\r\n",
      "base_ref": "main",
      "head_ref": "sa-add-realms-authentication-metrics",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104200/comments"
    },
    {
      "number": 104199,
      "title": "[ML] Ignore failed jobs in unassigned task logging",
      "state": "closed",
      "created_at": "2024-01-10T12:19:37Z",
      "updated_at": "2024-01-11T18:06:50Z",
      "closed_at": "2024-01-10T16:45:49Z",
      "merged_at": "2024-01-10T16:45:49Z",
      "author": "droberts195",
      "labels": [
        ">non-issue",
        ":ml",
        "Team:ML",
        "v8.13.0"
      ],
      "comments_count": 1,
      "review_comments_count": 0,
      "additions": 32,
      "deletions": 0,
      "changed_files": 5,
      "url": "https://github.com/elastic/elasticsearch/pull/104199",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104199",
      "commits": [
        {
          "sha": "cba3ea501ff37ed3d5e4b92c493a89300bc1bf37",
          "message": "[ML] Ignore failed jobs in unassigned task logging\n\nThe logging of unassigned tasks added in #100154 should\nignore failed jobs. Failed jobs may or may not be assigned\nto a node, but if they cannot be assigned they will not\ntrigger a scale up by autoscaling, so never will be assigned.\nTherefore it's wrong to consider the fact that they are\nunassigned as a problem. (The fact that they are failed may\nbe a problem, but that is monitored elsewhere.)"
        }
      ],
      "comments": [],
      "body": "The logging of unassigned tasks added in #100154 should ignore failed jobs. Failed jobs may or may not be assigned to a node, but if they cannot be assigned they will not trigger a scale up by autoscaling, so never will be assigned. Therefore it's wrong to consider the fact that they are unassigned as a problem. (The fact that they are _failed_ may be a problem, but that is monitored elsewhere.)",
      "base_ref": "main",
      "head_ref": "ignore_failed_jobs_in_unassigned_check",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104199/comments"
    },
    {
      "number": 104198,
      "title": "[Connector API] Fix bug in configuration validation parser",
      "state": "closed",
      "created_at": "2024-01-10T12:19:19Z",
      "updated_at": "2024-01-11T11:20:12Z",
      "closed_at": "2024-01-11T11:18:41Z",
      "merged_at": "2024-01-11T11:18:41Z",
      "author": "jedrazb",
      "labels": [
        ">bug",
        ":EnterpriseSearch/Application",
        "Team:Enterprise Search",
        "v8.12.0",
        "v8.13.0"
      ],
      "comments_count": 3,
      "review_comments_count": 5,
      "additions": 114,
      "deletions": 11,
      "changed_files": 5,
      "url": "https://github.com/elastic/elasticsearch/pull/104198",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104198",
      "commits": [
        {
          "sha": "06c7850088b3e76f6b83129f4f6e33d81c68addb",
          "message": "[Connector API] Fix bug in configuration validation representation"
        },
        {
          "sha": "ac72f94ed42ae001ea40fb214c1d6c1960b6c285",
          "message": "Update docs/changelog/104198.yaml"
        },
        {
          "sha": "4f7b350a5a3089436c0759881677d77d400dab59",
          "message": "Simplify parsing logic"
        },
        {
          "sha": "8dd2e2d9c0ff73dba4dfd910d8e5bc6789b1754b",
          "message": "Merge branch 'main' into fix-connectors-api-validation-structure"
        },
        {
          "sha": "0b154b5cf4762a1a7ff5a18bc79bab3692d00a8e",
          "message": "Extend yaml test to e2e different validation constraints and types"
        }
      ],
      "comments": [
        {
          "user": "jedrazb",
          "body": "The `UNSET` is used as null placeholder in [connectors framework](https://github.com/elastic/connectors/blob/225592b0823a895fc8cff7a7f4738232720993d5/connectors/source.py#L75), it doesn't have any meaning and should not be considered a valid enum. Since we have list of validations for a given config value, empty list implies no validations."
        },
        {
          "user": "jedrazb",
          "body": "This is the extension to parser, we allow for list type of arbitrary values as per original connector protocol spec"
        },
        {
          "user": "timgrein",
          "body": "It could make sense to list multiple validations here (like you did in the parser unit test), where each one uses a different constraint to have a little bit more coverage around this bug."
        },
        {
          "user": "jedrazb",
          "body": "yeah can add it here :+1:"
        },
        {
          "user": "jedrazb",
          "body": "Added ✅ "
        }
      ],
      "body": "According to [Connectors Protocol](https://github.com/elastic/connectors/blob/main/docs/DEVELOPING.md?plain=1#L261) the constrain can have either int, str or list type.\r\n\r\nSee exact logic in [framework](https://github.com/elastic/connectors/blob/225592b0823a895fc8cff7a7f4738232720993d5/connectors/source.py#L227).\r\n\r\nBug: right now the parser in ES just allows for either number or string\r\n\r\nThis extends parser logic to include the `list` in allowed value types for `constraint` value.\r\n\r\nAlso removed `UNSET` from validation type enum, as this is not an actual validation type (rather placeholder value that defaults to `None` in the [connector framework](https://github.com/elastic/connectors/blob/225592b0823a895fc8cff7a7f4738232720993d5/connectors/source.py#L75) code)\r\n\r\n### Verification\r\nAdded unit and yaml tests.\r\n\r\nVerified this change manually.",
      "base_ref": "main",
      "head_ref": "fix-connectors-api-validation-structure",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104198/comments"
    },
    {
      "number": 104197,
      "title": "ESQL: Remove the possibility of CartesianPoint or GeoPoint literal to a long",
      "state": "closed",
      "created_at": "2024-01-10T12:16:35Z",
      "updated_at": "2024-01-11T13:26:21Z",
      "closed_at": "2024-01-11T13:25:48Z",
      "merged_at": "2024-01-11T13:25:48Z",
      "author": "iverase",
      "labels": [
        ">non-issue",
        "Team:Analytics",
        ":Analytics/ES|QL",
        "v8.13.0"
      ],
      "comments_count": 2,
      "review_comments_count": 0,
      "additions": 3,
      "deletions": 258,
      "changed_files": 6,
      "url": "https://github.com/elastic/elasticsearch/pull/104197",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104197",
      "commits": [
        {
          "sha": "f79877fe0240efd159bbcfa13037dff010a805de",
          "message": "ESQL: Remove the possibility of CartesianPoint or GeoPoint literal to a long"
        },
        {
          "sha": "8c815fd3886776dc628747733799d876f1cad059",
          "message": "Merge branch 'main' into removeLongLiteral-2\n\n# Conflicts:\n#\tx-pack/plugin/esql/qa/testFixtures/src/main/resources/show.csv-spec"
        }
      ],
      "comments": [],
      "body": "Same as https://github.com/elastic/elasticsearch/pull/104138 but now we remove the possibility to transform a point into the lucene long representation.",
      "base_ref": "main",
      "head_ref": "removeLongLiteral-2",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104197/comments"
    },
    {
      "number": 104196,
      "title": "Refactor RollupResponseTranslator slightly to ease ref-counting",
      "state": "closed",
      "created_at": "2024-01-10T11:42:26Z",
      "updated_at": "2024-11-30T10:08:22Z",
      "closed_at": "2024-01-10T13:53:36Z",
      "merged_at": "2024-01-10T13:53:36Z",
      "author": "original-brownbear",
      "labels": [
        ">non-issue",
        ":Search/Search",
        ":StorageEngine/Rollup",
        "Team:Search",
        "v8.13.0"
      ],
      "comments_count": 2,
      "review_comments_count": 0,
      "additions": 211,
      "deletions": 156,
      "changed_files": 4,
      "url": "https://github.com/elastic/elasticsearch/pull/104196",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104196",
      "commits": [
        {
          "sha": "61e8294943b14cf1509e42f14a114256df5d526f",
          "message": "Refactor RollupResponseTranslator slightly to ease ref-counting\n\nWork with the combined MSearchResponse here throughout to make\nref-counting the full response-array in one possible."
        }
      ],
      "comments": [],
      "body": "Work with the combined MSearchResponse here throughout to make ref-counting the full response-array in one possible.\r\n... and adjust tests accordingly to not leak responses ",
      "base_ref": "main",
      "head_ref": "rollup-msearch-refactor",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104196/comments"
    },
    {
      "number": 104194,
      "title": "Update security QA suite to allow running in Serverless",
      "state": "closed",
      "created_at": "2024-01-10T11:21:07Z",
      "updated_at": "2024-01-10T16:09:03Z",
      "closed_at": "2024-01-10T16:09:02Z",
      "merged_at": "2024-01-10T16:09:02Z",
      "author": "bpintea",
      "labels": [
        ">non-issue",
        "Team:Analytics",
        ":Analytics/ES|QL",
        "v8.13.0"
      ],
      "comments_count": 1,
      "review_comments_count": 0,
      "additions": 3,
      "deletions": 2,
      "changed_files": 2,
      "url": "https://github.com/elastic/elasticsearch/pull/104194",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104194",
      "commits": [
        {
          "sha": "a4040ef3ec23811388a8c05b47e552419de6ad76",
          "message": "Update security QA suite to run in Serverless\n\nThis removes the node count setting from configuring the test cluster,\nas well as adding the `internal-test-artifact` plugin to suite's config."
        }
      ],
      "comments": [],
      "body": "This removes the node count setting from configuring the test cluster, adds the `internal-test-artifact` plugin to suite's config and sets the test admin role as operator (needed to allow querying for cluster's config when setting up the suite's test client).",
      "base_ref": "main",
      "head_ref": "esql/qa_security_serverless",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104194/comments"
    },
    {
      "number": 104192,
      "title": "Fix TextFieldMapperTests",
      "state": "closed",
      "created_at": "2024-01-10T10:56:43Z",
      "updated_at": "2024-01-11T08:58:21Z",
      "closed_at": "2024-01-11T08:58:21Z",
      "merged_at": "2024-01-11T08:58:21Z",
      "author": "luigidellaquila",
      "labels": [
        ">test",
        "Team:Analytics",
        ":Analytics/ES|QL",
        "v8.13.0"
      ],
      "comments_count": 7,
      "review_comments_count": 0,
      "additions": 48,
      "deletions": 64,
      "changed_files": 3,
      "url": "https://github.com/elastic/elasticsearch/pull/104192",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104192",
      "commits": [
        {
          "sha": "78dd133631470916ff6ebe6779868da17ac55b6c",
          "message": "Revert \"Muting testBlockLoader tests for TextFieldMapperTests (#104163)\"\n\nThis reverts commit 198261687973699f7da776da345b7a46365e7a0e."
        },
        {
          "sha": "3779bf81ec87ed5b97f9e6764233b7cfedf96808",
          "message": "Improve TextFieldMapperTests"
        },
        {
          "sha": "f608e555287fbcc348c29db4b20041eb8a2b0b67",
          "message": "Rework expected\n\nIt was super confusing. Now it should be ok!"
        },
        {
          "sha": "a9e68196e8d98bea4354370401d54580e34e1564",
          "message": "spotless"
        },
        {
          "sha": "2b270dde040273d24c810bcaa1c9c790f4ec7b8f",
          "message": "Merge branch 'main' into fix_104152"
        }
      ],
      "comments": [],
      "body": "Fixes https://github.com/elastic/elasticsearch/issues/104152\r\n\r\nThe introduction of more strict checks on using subfields to load the exact value of a TEXT field - mostly for ES|QL - (ie. not loading data from subfields when they don't have the exact same value as the parent field, eg. because of `ignore_above`) triggered some errors in this test.\r\n\r\n\r\n",
      "base_ref": "main",
      "head_ref": "fix_104152",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104192/comments"
    },
    {
      "number": 104190,
      "title": "[DOCS] Adds Hugging Face service to the inference API docs",
      "state": "closed",
      "created_at": "2024-01-10T10:21:00Z",
      "updated_at": "2024-01-15T10:23:32Z",
      "closed_at": "2024-01-15T10:21:22Z",
      "merged_at": "2024-01-15T10:21:22Z",
      "author": "szabosteve",
      "labels": [
        ">docs",
        "Team:Docs",
        "auto-backport",
        "v8.12.0",
        "v8.13.0"
      ],
      "comments_count": 4,
      "review_comments_count": 0,
      "additions": 69,
      "deletions": 2,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104190",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104190",
      "commits": [
        {
          "sha": "c5136a6dbd38ff3cbb9bfee2f90d5e090f6599f7",
          "message": "[DOCS] Adds Hugging Face service to the inference API docs."
        },
        {
          "sha": "ae9f28ab8c1cd8dbf212e0c4cd27bb21cadeaa63",
          "message": "[DOCS] Adjusts instructions."
        },
        {
          "sha": "23d3f3428b2ff73ef86e4c352f9e70ada038deb8",
          "message": "[DOCS] Fixes bullet list."
        }
      ],
      "comments": [],
      "body": "## Overview\r\n\r\nThis PR adds the Hugging Face service documentation to the PUT inference API. It also organizes each example under its subsection with an anchor for easier reference.\r\n\r\n### Preview\r\n\r\n[PUT Inference API](https://elasticsearch_104190.docs-preview.app.elstc.co/guide/en/elasticsearch/reference/master/put-inference-api.html)",
      "base_ref": "main",
      "head_ref": "sdt-31",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104190/comments"
    },
    {
      "number": 104188,
      "title": "Reduce dependencies on `SearchTransportService`",
      "state": "closed",
      "created_at": "2024-01-10T09:43:53Z",
      "updated_at": "2024-06-17T06:17:33Z",
      "closed_at": "2024-01-10T16:59:45Z",
      "merged_at": "2024-01-10T16:59:45Z",
      "author": "DaveCTurner",
      "labels": [
        ">non-issue",
        ":Search/Search",
        "Team:Search",
        "auto-merge-without-approval",
        "v8.13.0"
      ],
      "comments_count": 1,
      "review_comments_count": 0,
      "additions": 3,
      "deletions": 10,
      "changed_files": 2,
      "url": "https://github.com/elastic/elasticsearch/pull/104188",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104188",
      "commits": [
        {
          "sha": "d8fd4f939c1db8c08276b45d6fca437127c927a5",
          "message": "Reduce dependencies on `SearchTransportService`\n\nNo need to depend on the `SearchTransportService` in these cases, the\nbasic `TransportService` exposes the `RemoteClusterService` already."
        },
        {
          "sha": "a573c77538b1c5eedc434b46b656be49ec5dc49c",
          "message": "Merge branch 'main' into 2024/01/10/SearchTransportService-deps"
        },
        {
          "sha": "1779f1dc4cb093b1e044b7e4f95df42fd7cb6187",
          "message": "Merge branch 'main' into 2024/01/10/SearchTransportService-deps"
        }
      ],
      "comments": [],
      "body": "No need to depend on the `SearchTransportService` in these cases, the\r\nbasic `TransportService` exposes the `RemoteClusterService` already.",
      "base_ref": "main",
      "head_ref": "2024/01/10/SearchTransportService-deps",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104188/comments"
    },
    {
      "number": 104183,
      "title": "[POC] Enhancement/metrics for search latencies",
      "state": "closed",
      "created_at": "2024-01-10T05:29:07Z",
      "updated_at": "2024-02-01T21:34:59Z",
      "closed_at": "2024-02-01T21:34:59Z",
      "merged_at": null,
      "author": "JVerwolf",
      "labels": [
        "v8.13.0"
      ],
      "comments_count": 0,
      "review_comments_count": 4,
      "additions": 236,
      "deletions": 36,
      "changed_files": 23,
      "url": "https://github.com/elastic/elasticsearch/pull/104183",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104183",
      "commits": [
        {
          "sha": "e9dfe16f1ecd804d27fb3fefe469026c17070ac8",
          "message": "Wip"
        },
        {
          "sha": "1d80af23134c0c233e8368b1f15b88a801215bef",
          "message": "spotless"
        }
      ],
      "comments": [
        {
          "user": "JVerwolf",
          "body": "These comments are just for my own tracing through the code."
        },
        {
          "user": "JVerwolf",
          "body": "These comments are just for my own tracing through the code."
        },
        {
          "user": "JVerwolf",
          "body": "These comments are just for my own tracing through the code."
        },
        {
          "user": "JVerwolf",
          "body": "I'm not sure how to thread the `searchRestMetrics` here...  How are these classes instantiated?  It seems like it's done via config?"
        }
      ],
      "body": "This is a POC of an approach to instrument the \"took\" metrics reported in by Rest responses.  This approach uses the REST layer, as opposed to the transport layer approach located here: https://github.com/elastic/elasticsearch/pull/104292\r\n\r\nDue to issues with threading dependencies into plugins, I've decided to not move forward with this approach, and to instead focus on the transport layer.",
      "base_ref": "main",
      "head_ref": "enhancement/metrics-for-search-latencies",
      "mergeable": false,
      "mergeable_state": "dirty",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104183/comments"
    },
    {
      "number": 104182,
      "title": "x-pack/plugin/apm-data: fix `@custom` component templates",
      "state": "closed",
      "created_at": "2024-01-10T04:08:24Z",
      "updated_at": "2024-01-17T01:14:37Z",
      "closed_at": "2024-01-17T01:14:14Z",
      "merged_at": "2024-01-17T01:14:14Z",
      "author": "axw",
      "labels": [
        ">bug",
        ":Data Management/Data streams",
        "Team:Data Management",
        "external-contributor",
        "auto-merge-without-approval",
        "v8.13.0"
      ],
      "comments_count": 6,
      "review_comments_count": 0,
      "additions": 189,
      "deletions": 64,
      "changed_files": 22,
      "url": "https://github.com/elastic/elasticsearch/pull/104182",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104182",
      "commits": [
        {
          "sha": "8c8b0b9112f0eb1e6b618f430523bc4319834c1f",
          "message": "apm-data: fix `@custom` component templates\n\nUse `<data_stream.type>@custom` instead of `apm@custom`.\nThis is an enhancement over what Fleet sets up; it is\nan additive improvement in the direction of\nhttps://github.com/elastic/elasticsearch/issues/97664.\n\nThe rollup data streams' `@custom` component templates\nnow include the duration, like what Fleet sets up.\n\nAdd a YAML REST test, and a unit test ensuring consistency\nacross the index templates."
        },
        {
          "sha": "a13b30ebce4e01f9a92c89033b20c316b81e28b6",
          "message": "Update docs/changelog/104182.yaml"
        },
        {
          "sha": "03e91115d9642e0d652b06db653aeb6ae2f23104",
          "message": "Merge branch 'main' into apmdata-custom-component-templates"
        }
      ],
      "comments": [],
      "body": "Use `<data_stream.type>@custom` instead of `apm@custom`. This is an enhancement over what Fleet sets up; it is an additive improvement in the direction of https://github.com/elastic/elasticsearch/issues/97664.\r\n\r\nThe rollup data streams' `@custom` component templates now include the duration, like what Fleet sets up.\r\n\r\nAdd a YAML REST test, and a unit test ensuring consistency across the index templates.",
      "base_ref": "main",
      "head_ref": "apmdata-custom-component-templates",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104182/comments"
    },
    {
      "number": 104181,
      "title": "Lazily setup constants in DomainSplitFunction to save ~1M of memory",
      "state": "closed",
      "created_at": "2024-01-10T02:01:56Z",
      "updated_at": "2024-11-30T10:08:13Z",
      "closed_at": "2024-01-10T10:07:34Z",
      "merged_at": "2024-01-10T10:07:34Z",
      "author": "original-brownbear",
      "labels": [
        ">non-issue",
        ":ml",
        "Team:ML",
        "auto-merge-without-approval",
        "v8.13.0"
      ],
      "comments_count": 1,
      "review_comments_count": 0,
      "additions": 76,
      "deletions": 71,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104181",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104181",
      "commits": [
        {
          "sha": "a817b05d3cf91a189fd9f2995e85033be5789f1c",
          "message": "Lazily setup constants in DomainSplitFunction to save ~1M of memory\n\nIt seems the utilities in this class are only used from Painless.\nWe should avoid eager loading these constants (and can make one of them\nfar cheaper by string interning) since they cost almost 1M in mostly\nunused memory."
        },
        {
          "sha": "996a5d43f19106aa8203798b1d7d8918a7d6be80",
          "message": "fix"
        }
      ],
      "comments": [],
      "body": "It seems the utilities in this class are only used from Painless. We should avoid eager loading these constants (and can make one of them far cheaper by string interning) since they cost almost 1M in mostly unused memory.\r\n",
      "base_ref": "main",
      "head_ref": "lighter-domain-split-function",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104181/comments"
    },
    {
      "number": 104180,
      "title": "Update privileges.asciidoc",
      "state": "open",
      "created_at": "2024-01-10T00:38:22Z",
      "updated_at": "2024-01-12T14:17:15Z",
      "closed_at": null,
      "merged_at": null,
      "author": "jmaran19",
      "labels": [
        ":Security/Authorization",
        "Team:Security",
        "external-contributor",
        "v8.11.5"
      ],
      "comments_count": 4,
      "review_comments_count": 0,
      "additions": 1,
      "deletions": 1,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104180",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104180",
      "commits": [
        {
          "sha": "22ce301e14cf074d867bcf7293f94e2aadc16fd1",
          "message": "Update privileges.asciidoc\n\nTypo. \"informations\" -> \"Information\""
        }
      ],
      "comments": [],
      "body": "Typo. \"informations\" -> \"Information\"\r\n\r\n<!--\r\nThank you for your interest in and contributing to Elasticsearch! There\r\nare a few simple things to check before submitting your pull request\r\nthat can help with the review process. You should delete these items\r\nfrom your submission, but they are here to help bring them to your\r\nattention.\r\n-->\r\n\r\n- Have you signed the [contributor license agreement](https://www.elastic.co/contributor-agreement)?\r\n- Have you followed the [contributor guidelines](https://github.com/elastic/elasticsearch/blob/main/CONTRIBUTING.md)?\r\n- If submitting code, have you built your formula locally prior to submission with `gradle check`?\r\n- If submitting code, is your pull request against main? Unless there is a good reason otherwise, we prefer pull requests against main and will backport as needed.\r\n- If submitting code, have you checked that your submission is for an [OS and architecture that we support](https://www.elastic.co/support/matrix#show_os)?\r\n- If you are submitting this code for a class then read our [policy](https://github.com/elastic/elasticsearch/blob/main/CONTRIBUTING.md#contributing-as-part-of-a-class) for that.\r\n",
      "base_ref": "8.11",
      "head_ref": "patch-2",
      "mergeable": true,
      "mergeable_state": "blocked",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104180/comments"
    },
    {
      "number": 104179,
      "title": "Fix discovery-gce when run in FIPS mode",
      "state": "closed",
      "created_at": "2024-01-10T00:08:54Z",
      "updated_at": "2024-01-10T14:51:52Z",
      "closed_at": "2024-01-10T14:51:30Z",
      "merged_at": "2024-01-10T14:51:30Z",
      "author": "jakelandis",
      "labels": [
        ">non-issue",
        "backport",
        "Team:Security",
        ":Security/FIPS",
        "auto-merge-without-approval",
        "v7.17.17"
      ],
      "comments_count": 0,
      "review_comments_count": 1,
      "additions": 11,
      "deletions": 3,
      "changed_files": 2,
      "url": "https://github.com/elastic/elasticsearch/pull/104179",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104179",
      "commits": [
        {
          "sha": "b2de467dad97577d99e151ebd2706a39fba4be38",
          "message": "Fix discovery-gce when run in FIPS mode"
        },
        {
          "sha": "ad1be2dd4ff9c2e34372c9d930bbe644ff774945",
          "message": "dummy commit to re-kick off build"
        },
        {
          "sha": "9c6bb8bf5c49328b091d79e520b6d1d25b455e04",
          "message": "spotless"
        }
      ],
      "comments": [
        {
          "user": "arteam",
          "body": "Seems to be an unrelated whitespace change"
        }
      ],
      "body": "backport of https://github.com/elastic/elasticsearch/pull/85817\r\nfixes https://github.com/elastic/elasticsearch/issues/104174\r\n",
      "base_ref": "7.17",
      "head_ref": "7x_gce_with_fips",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104179/comments"
    },
    {
      "number": 104178,
      "title": "[7.17] Tag individual CI job name axis in build scans (#104168)",
      "state": "closed",
      "created_at": "2024-01-09T23:31:13Z",
      "updated_at": "2024-01-10T00:24:38Z",
      "closed_at": "2024-01-10T00:24:15Z",
      "merged_at": "2024-01-10T00:24:15Z",
      "author": "mark-vieira",
      "labels": [
        "backport",
        "auto-merge-without-approval",
        "v7.17.17"
      ],
      "comments_count": 0,
      "review_comments_count": 0,
      "additions": 16,
      "deletions": 6,
      "changed_files": 3,
      "url": "https://github.com/elastic/elasticsearch/pull/104178",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104178",
      "commits": [
        {
          "sha": "6bff18c6d0944c0c256ed10c4a2190d830d2cc4b",
          "message": "Tag individual CI job name axis in build scans (#104168)\n\n# Conflicts:\n#\t.buildkite/pipelines/periodic.template.yml"
        }
      ],
      "comments": [],
      "body": "Backports the following commits to 7.17:\n - Tag individual CI job name axis in build scans (#104168)",
      "base_ref": "7.17",
      "head_ref": "backport/7.17/pr-104168",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104178/comments"
    },
    {
      "number": 104177,
      "title": "[8.11] Tag individual CI job name axis in build scans (#104168)",
      "state": "closed",
      "created_at": "2024-01-09T23:30:05Z",
      "updated_at": "2024-01-10T00:21:34Z",
      "closed_at": "2024-01-10T00:21:11Z",
      "merged_at": "2024-01-10T00:21:11Z",
      "author": "mark-vieira",
      "labels": [
        "backport",
        "auto-merge-without-approval"
      ],
      "comments_count": 0,
      "review_comments_count": 0,
      "additions": 16,
      "deletions": 6,
      "changed_files": 3,
      "url": "https://github.com/elastic/elasticsearch/pull/104177",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104177",
      "commits": [
        {
          "sha": "62629fbb5f7f094e56002d6b4a82c41a5200a9bf",
          "message": "Tag individual CI job name axis in build scans (#104168)\n\n# Conflicts:\n#\t.buildkite/pipelines/periodic.template.yml"
        }
      ],
      "comments": [],
      "body": "Backports the following commits to 8.11:\n - Tag individual CI job name axis in build scans (#104168)",
      "base_ref": "8.11",
      "head_ref": "backport/8.11/pr-104168",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104177/comments"
    },
    {
      "number": 104176,
      "title": "[8.12] Tag individual CI job name axis in build scans (#104168)",
      "state": "closed",
      "created_at": "2024-01-09T23:29:20Z",
      "updated_at": "2024-01-10T00:25:50Z",
      "closed_at": "2024-01-10T00:25:28Z",
      "merged_at": "2024-01-10T00:25:28Z",
      "author": "mark-vieira",
      "labels": [
        "backport",
        "auto-merge-without-approval",
        "v8.12.1"
      ],
      "comments_count": 0,
      "review_comments_count": 0,
      "additions": 16,
      "deletions": 6,
      "changed_files": 3,
      "url": "https://github.com/elastic/elasticsearch/pull/104176",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104176",
      "commits": [
        {
          "sha": "c826e5ee65d570d29c50919da320fc31335834d4",
          "message": "Tag individual CI job name axis in build scans (#104168)\n\n# Conflicts:\n#\t.buildkite/pipelines/periodic.template.yml"
        }
      ],
      "comments": [],
      "body": "Backports the following commits to 8.12:\n - Tag individual CI job name axis in build scans (#104168)",
      "base_ref": "8.12",
      "head_ref": "backport/8.12/pr-104168",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104176/comments"
    },
    {
      "number": 104173,
      "title": "[8.11] Reduce concurrency of execution for x-pack full cluster restart tests (#104166)",
      "state": "closed",
      "created_at": "2024-01-09T22:31:42Z",
      "updated_at": "2024-01-09T23:07:48Z",
      "closed_at": "2024-01-09T23:07:25Z",
      "merged_at": "2024-01-09T23:07:25Z",
      "author": "mark-vieira",
      "labels": [
        ">test",
        ":Delivery/Build",
        "backport",
        "Team:Delivery",
        "auto-merge-without-approval",
        "v8.11.5"
      ],
      "comments_count": 0,
      "review_comments_count": 0,
      "additions": 1,
      "deletions": 0,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104173",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104173",
      "commits": [
        {
          "sha": "9332f3c8b4b374d1d4c845a51e1d0053410a79c9",
          "message": "Reduce concurrency of execution for x-pack full cluster restart tests (#104166)"
        }
      ],
      "comments": [],
      "body": "Backports the following commits to 8.11:\n - Reduce concurrency of execution for x-pack full cluster restart tests (#104166)",
      "base_ref": "8.11",
      "head_ref": "backport/8.11/pr-104166",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104173/comments"
    },
    {
      "number": 104172,
      "title": "[8.12] Reduce concurrency of execution for x-pack full cluster restart tests (#104166)",
      "state": "closed",
      "created_at": "2024-01-09T22:31:23Z",
      "updated_at": "2024-01-09T23:11:49Z",
      "closed_at": "2024-01-09T23:11:26Z",
      "merged_at": "2024-01-09T23:11:26Z",
      "author": "mark-vieira",
      "labels": [
        ">test",
        ":Delivery/Build",
        "backport",
        "Team:Delivery",
        "auto-merge-without-approval",
        "v8.12.1"
      ],
      "comments_count": 0,
      "review_comments_count": 0,
      "additions": 1,
      "deletions": 0,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104172",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104172",
      "commits": [
        {
          "sha": "562925c442915b2dc9875a75c1bb47526cc0aa2e",
          "message": "Reduce concurrency of execution for x-pack full cluster restart tests (#104166)"
        }
      ],
      "comments": [],
      "body": "Backports the following commits to 8.12:\n - Reduce concurrency of execution for x-pack full cluster restart tests (#104166)",
      "base_ref": "8.12",
      "head_ref": "backport/8.12/pr-104166",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104172/comments"
    },
    {
      "number": 104171,
      "title": "[7x] bump dependency in discovery azure classic plugin",
      "state": "closed",
      "created_at": "2024-01-09T22:17:15Z",
      "updated_at": "2024-01-11T15:49:46Z",
      "closed_at": "2024-01-11T15:49:45Z",
      "merged_at": "2024-01-11T15:49:45Z",
      "author": "jakelandis",
      "labels": [
        ">upgrade",
        ":Distributed Coordination/Discovery-Plugins",
        "Team:Distributed (Obsolete)",
        "v7.17.17"
      ],
      "comments_count": 2,
      "review_comments_count": 0,
      "additions": 11,
      "deletions": 1,
      "changed_files": 3,
      "url": "https://github.com/elastic/elasticsearch/pull/104171",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104171",
      "commits": [
        {
          "sha": "6c46c984f4c907c9db2a8a7e9248ae13872708bb",
          "message": "[7x] bump dependency in discovery azure classic plugin"
        },
        {
          "sha": "0c059544edc25f0fbb002de76e4c2c2611754969",
          "message": "Update docs/changelog/104171.yaml"
        }
      ],
      "comments": [],
      "body": "This commit bumps commons-io from 2.4 -> 2.7",
      "base_ref": "7.17",
      "head_ref": "7x_discovery_azure_classic_dependency_bump",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104171/comments"
    },
    {
      "number": 104170,
      "title": "Move ParsedTopHits to test code",
      "state": "closed",
      "created_at": "2024-01-09T22:06:35Z",
      "updated_at": "2024-11-30T10:08:10Z",
      "closed_at": "2024-01-10T00:18:35Z",
      "merged_at": "2024-01-10T00:18:35Z",
      "author": "original-brownbear",
      "labels": [
        ">non-issue",
        ":Analytics/Aggregations",
        "Team:Analytics",
        "v8.13.0"
      ],
      "comments_count": 3,
      "review_comments_count": 0,
      "additions": 45,
      "deletions": 60,
      "changed_files": 2,
      "url": "https://github.com/elastic/elasticsearch/pull/104170",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104170",
      "commits": [
        {
          "sha": "a8800c839fa7c1521a8dc59602520569d897484b",
          "message": "Move ParsedTopHits to test code\n\nThis is only used in InternalAggregationTestCase and one of its\nchildren, no need for it to live in prod code."
        }
      ],
      "comments": [],
      "body": "This is only used in InternalAggregationTestCase and one of its children, no need for it to live in prod code.\r\n",
      "base_ref": "main",
      "head_ref": "move-parsed-top-hits",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104170/comments"
    },
    {
      "number": 104169,
      "title": "[7x] ingest attachment dependency version bumps",
      "state": "closed",
      "created_at": "2024-01-09T22:02:09Z",
      "updated_at": "2024-01-10T22:01:33Z",
      "closed_at": "2024-01-10T22:01:30Z",
      "merged_at": "2024-01-10T22:01:30Z",
      "author": "jakelandis",
      "labels": [
        ">upgrade",
        ":Data Management/Ingest Node",
        "Team:Data Management",
        "v7.17.17"
      ],
      "comments_count": 2,
      "review_comments_count": 0,
      "additions": 57,
      "deletions": 42,
      "changed_files": 21,
      "url": "https://github.com/elastic/elasticsearch/pull/104169",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104169",
      "commits": [
        {
          "sha": "456d417c8e6075704e0400728b991129778c2669",
          "message": "[7x] ingest attachment dependency version bumps"
        },
        {
          "sha": "3f1c412ac86b696623a96aacbee2c3609024f1eb",
          "message": "Update docs/changelog/104169.yaml"
        },
        {
          "sha": "2b9a09df4bfdb1de1701eebf9d6adb5e91f49af6",
          "message": "sync with dependencies listed in POM"
        },
        {
          "sha": "e0ba57a23c8a9cafe12bf52026841b36e13df188",
          "message": "update sha1 hashes"
        },
        {
          "sha": "ab65dbee58169a3c2c3cc0fde7cf85c7b778f468",
          "message": "update xmlbeans"
        }
      ],
      "comments": [],
      "body": "This commit bumps the follow dependency version for the ingest attachment plugin:\r\n\r\ntika-core 1.27 -> 1.28.5\r\ntika-parsers 1.27 -> 1.28.5\r\ncommons-io 2.6 -> 2.11\r\nfontbox 2.0.24 -> 2.0.26\r\npoi 4.1.2 -> 5.2.2\r\npoi-ooxml 4.1.2 -> 5.2.2\r\nand poi-/ooxml-schemas is now poi-ooxml-lite and is using 5.2.2 \r\n(see https://poi.apache.org/changes.html)\r\nxmlbeans 3.0.1 -> 5.0.3\r\n\r\nThese versions were chosen from one of the following POM files:\r\nhttps://repo1.maven.org/maven2/org/apache/tika/tika-parent/1.28.5/tika-parent-1.28.5.pom\r\nhttps://repo1.maven.org/maven2/org/apache/tika/tika-parsers/1.28.5/tika-parsers-1.28.5.pom\r\nhttps://repo1.maven.org/maven2/org/apache/tika/tika-core/1.28.5/tika-core-1.28.5.pom\r\nhttps://repo1.maven.org/maven2/org/apache/poi/poi-ooxml-lite/5.2.2/poi-ooxml-lite-5.2.2.pom",
      "base_ref": "7.17",
      "head_ref": "upgrade_ingest_attachment",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104169/comments"
    },
    {
      "number": 104168,
      "title": "Tag individual CI job name axis in build scans",
      "state": "closed",
      "created_at": "2024-01-09T21:58:29Z",
      "updated_at": "2024-01-09T23:31:13Z",
      "closed_at": "2024-01-09T23:25:05Z",
      "merged_at": "2024-01-09T23:25:05Z",
      "author": "mark-vieira",
      "labels": [
        ">non-issue",
        ":Delivery/Build",
        "Team:Delivery",
        "v7.17.17",
        "v8.12.1",
        "v8.13.0",
        "v8.11.5"
      ],
      "comments_count": 2,
      "review_comments_count": 7,
      "additions": 15,
      "deletions": 5,
      "changed_files": 3,
      "url": "https://github.com/elastic/elasticsearch/pull/104168",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104168",
      "commits": [
        {
          "sha": "3de098cfa1b30552f22210afcd32d7b789b8381e",
          "message": "Tag individual CI job name axis in build scans"
        },
        {
          "sha": "bbacce2608af65d007b593a2c3117e0c748837f6",
          "message": "Handle complex job labels better"
        },
        {
          "sha": "517b445ac497cef43ac99d63cb4738b36ca2134f",
          "message": "Allow periods in these names since it makes filtering versions easier"
        }
      ],
      "comments": [
        {
          "user": "brianseeders",
          "body": "Did you happen to look at a list of job names somewhere to ensure this isn't going to generate a bunch of garbage?\r\n\r\nMaybe at least add a `.findAll { it }` to filter out empty strings?"
        },
        {
          "user": "brianseeders",
          "body": "(`something__like_this` would generate an empty string)"
        },
        {
          "user": "mark-vieira",
          "body": "Hmm. The only exceptions to this are jobs with spaces in the names. Those look to only be the \"Check branch protections\" and \"Check branch consistency\" jobs. I'm apt to rename them to match the naming conventions we use everywhere else which is kebab case. Objections?"
        },
        {
          "user": "brianseeders",
          "body": "Nope, go ahead"
        },
        {
          "user": "mark-vieira",
          "body": "Hmm. We use spaces in a lot of serverless builds. How do you feel about splitting based on `/` since that's the character used for matrix jobs?"
        },
        {
          "user": "brianseeders",
          "body": "Seems fine, you'll just have to split before doing the cleanup, since the slashes get replaced"
        },
        {
          "user": "mark-vieira",
          "body": "Yep, take a look at my latest changes."
        }
      ],
      "body": "When tagging build scans with the CI job name, additionally split based on axis and add each as an individual tag. This will mean tags like `openjdk22_checkrestcompat_java-matrix` will additionally add three more tags: `openjdk22`, `checkrestcompat` and `java-matrix`. This simply makes filtering by individual matrix job axis easier.\t",
      "base_ref": "main",
      "head_ref": "build-scan-tag-axis",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104168/comments"
    },
    {
      "number": 104166,
      "title": "Reduce concurrency of execution for x-pack full cluster restart tests",
      "state": "closed",
      "created_at": "2024-01-09T21:41:51Z",
      "updated_at": "2024-01-09T22:31:54Z",
      "closed_at": "2024-01-09T22:29:33Z",
      "merged_at": "2024-01-09T22:29:33Z",
      "author": "mark-vieira",
      "labels": [
        ">test",
        ":Delivery/Build",
        "Team:Delivery",
        "v8.12.1",
        "v8.13.0",
        "v8.11.5"
      ],
      "comments_count": 2,
      "review_comments_count": 0,
      "additions": 1,
      "deletions": 0,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104166",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104166",
      "commits": [
        {
          "sha": "c48bc6217c530cf15ba74cd08999f450b7db2801",
          "message": "Reduce concurrency of execution for x-pack full cluster restart tests"
        }
      ],
      "comments": [],
      "body": "This suite has a number of tests, each spins up a 2 node cluster, and we often see timeouts here. This is likely due to resource contention of too many parallel nodes running. Let's just reduce the concurrency here until we have a better solution for shared clusters in upgrade tests. This is going to extend test execution but should improve stability.",
      "base_ref": "main",
      "head_ref": "reduce-xpack-bwc-parallelization",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104166/comments"
    },
    {
      "number": 104165,
      "title": "Relax incorrect assertion in SnapshotShutdownIT",
      "state": "closed",
      "created_at": "2024-01-09T21:36:55Z",
      "updated_at": "2024-06-17T06:17:30Z",
      "closed_at": "2024-01-10T07:57:10Z",
      "merged_at": "2024-01-10T07:57:10Z",
      "author": "DaveCTurner",
      "labels": [
        ">test",
        ":Distributed Coordination/Snapshot/Restore",
        "Team:Distributed (Obsolete)",
        "v8.13.0"
      ],
      "comments_count": 3,
      "review_comments_count": 0,
      "additions": 5,
      "deletions": 0,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104165",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104165",
      "commits": [
        {
          "sha": "2057488ab57710d98ff67659f8d9257cac4d4869",
          "message": "Relax incorrect assertion in SnapshotShutdownIT\n\nIt's (just about) possible for the data node to apply the initial\nsnapshot state, start on the first shard snapshot, and hit the IO block,\nbefore the master even applies this cluster state, so we cannot assert\nthat the snapshot has started when creating the snapshot-paused\nlistener. This commit fixes the problem by retrying when encountering\nthat state.\n\nRelates #101717"
        }
      ],
      "comments": [],
      "body": "It's (just about) possible for the data node to apply the initial\r\nsnapshot state, start on the first shard snapshot, and hit the IO block,\r\nbefore the master even applies this cluster state, so we cannot assert\r\nthat the snapshot has started when creating the snapshot-paused\r\nlistener. This commit fixes the problem by retrying when encountering\r\nthat state.\r\n\r\nRelates #101717",
      "base_ref": "main",
      "head_ref": "2024/01/09/SnapshotShutdownIT-snapshot-paused-listener-before-snapshot-start",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104165/comments"
    },
    {
      "number": 104163,
      "title": "Muting testBlockLoader tests for TextFieldMapperTests",
      "state": "closed",
      "created_at": "2024-01-09T21:13:08Z",
      "updated_at": "2024-01-09T21:34:02Z",
      "closed_at": "2024-01-09T21:33:38Z",
      "merged_at": "2024-01-09T21:33:38Z",
      "author": "benwtrent",
      "labels": [
        ":Search Foundations/Mapping",
        ">test-mute",
        "Team:Search",
        "Team:Analytics",
        "auto-merge-without-approval",
        ":Analytics/ES|QL",
        "v8.13.0"
      ],
      "comments_count": 2,
      "review_comments_count": 0,
      "additions": 31,
      "deletions": 3,
      "changed_files": 2,
      "url": "https://github.com/elastic/elasticsearch/pull/104163",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104163",
      "commits": [
        {
          "sha": "a8463aebbbeaff38183c5848084a641d6734c434",
          "message": "Muting testBlockLoader tests for TextFieldMapperTests"
        }
      ],
      "comments": [],
      "body": "Muted all the testBlockLoader tests for TextFieldMapperTests. These methods should be returned to `final`. I didn't want to mute the entire `TextFieldMapperTests` as that blast radius was too high.\r\n\r\nrelated to: https://github.com/elastic/elasticsearch/issues/104152",
      "base_ref": "main",
      "head_ref": "test-mute/104152",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104163/comments"
    },
    {
      "number": 104159,
      "title": "Over account ram usage of array-based vectors",
      "state": "closed",
      "created_at": "2024-01-09T19:18:29Z",
      "updated_at": "2024-01-10T09:08:27Z",
      "closed_at": "2024-01-09T23:17:13Z",
      "merged_at": "2024-01-09T23:17:13Z",
      "author": "dnhatn",
      "labels": [
        ">non-issue",
        "Team:Analytics",
        ":Analytics/ES|QL",
        "v8.13.0"
      ],
      "comments_count": 2,
      "review_comments_count": 0,
      "additions": 58,
      "deletions": 19,
      "changed_files": 7,
      "url": "https://github.com/elastic/elasticsearch/pull/104159",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104159",
      "commits": [
        {
          "sha": "cbea9d174457d7c39acfb03b3539e05eba49b28e",
          "message": "Over account ram usage of array-based vectors"
        }
      ],
      "comments": [],
      "body": "This is part of the effort to enable heap attack tests.\r\n\r\nCurrently, when creating Blocks from Vectors, we don't account for the extra bytes used by VectorBlock alongside the Vector. In heap attack tests, the unaccounted memory can be significant, as seen in the manyEval test, where the unaccounted bytes is 40, while the vector is just 128 bytes, resulting in an OOM instead of triggering the circuit breaker.\r\n\r\nIdeally, `Vector#asBlock` should adjust the breaker, and callers should release the returned block. While I tried to implement this, there are many places in our tests where we use `Vector#asBlock` without releasing the block. This is possible because `Vector#asBlock` doesn't increase the reference to the vector. In the long run, I think we should remove `Vector#asBlock` and force that callers use `newBlockFromVector` from the BlockFactory. This would provide clearer semantics and enable proper tracking of blocks in assertions.\r\n\r\nThis PR adds the extra bytes used by VectorBlock to ArrayVector, allowing us to run heap-attack tests.",
      "base_ref": "main",
      "head_ref": "over-estimate",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104159/comments"
    },
    {
      "number": 104157,
      "title": "ESQL: Add ESQL to RBAC's async auth actions",
      "state": "closed",
      "created_at": "2024-01-09T18:30:34Z",
      "updated_at": "2024-01-09T18:38:12Z",
      "closed_at": "2024-01-09T18:38:12Z",
      "merged_at": null,
      "author": "bpintea",
      "labels": [
        ">non-issue",
        "Team:Analytics",
        ":Analytics/ES|QL",
        "v8.13.0"
      ],
      "comments_count": 2,
      "review_comments_count": 0,
      "additions": 18,
      "deletions": 1,
      "changed_files": 2,
      "url": "https://github.com/elastic/elasticsearch/pull/104157",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104157",
      "commits": [
        {
          "sha": "30d0f8dd83e120223a417dd616f7e667132862c2",
          "message": "Add ESQL to RBAC's async auth actions\n\nThis adds ESQL to RBAC's allowed async actions."
        }
      ],
      "comments": [],
      "body": "This adds ESQL to RBAC's allowed async actions.\r\n",
      "base_ref": "main",
      "head_ref": "esql/rbac_get_async_auth",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104157/comments"
    },
    {
      "number": 104156,
      "title": "Decouple API key version from node version",
      "state": "closed",
      "created_at": "2024-01-09T18:12:53Z",
      "updated_at": "2024-04-29T19:26:13Z",
      "closed_at": "2024-04-29T19:25:48Z",
      "merged_at": "2024-04-29T19:25:48Z",
      "author": "gwbrown",
      "labels": [
        ">non-issue",
        ":Security/Authentication",
        "Team:Security",
        "auto-merge-without-approval",
        "v8.15.0"
      ],
      "comments_count": 7,
      "review_comments_count": 1,
      "additions": 47,
      "deletions": 20,
      "changed_files": 6,
      "url": "https://github.com/elastic/elasticsearch/pull/104156",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104156",
      "commits": [
        {
          "sha": "06140b5944b512f836b4da4ac72bd89982b5c59e",
          "message": "Decouple API key version from node version\n\nThis commit decouples the version stored in API key documents from the node version, as\npart of the broader effort to stop relying on node version for product logic. The actual\ndata format does not change - the version is stored as an integer before and after this\ncommit, it's just determined by a manually set `ApiKey.Version` class rather than being\nderived from the node version."
        },
        {
          "sha": "2cd1809d06601badb96f45373602ffc1ca607a38",
          "message": "Merge branch 'main' into version/api-key\n\n# Conflicts:\n#\tx-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/ApiKeyServiceTests.java"
        },
        {
          "sha": "cae2bcf0fc0f853f76ed80c582c2c5063f74f275",
          "message": "Integrate with infrastructure per review"
        },
        {
          "sha": "e7f14f918415c447ef5259d1bd485b55e4547d0f",
          "message": "Merge remote-tracking branch 'origin/main' into version/api-key"
        },
        {
          "sha": "eb4dfc0cbd418475edc0ca71334c4c8fa6223c1a",
          "message": "Fix typo in test"
        },
        {
          "sha": "06c5118bbe92b604c62582341ae24b140226d7b9",
          "message": "Merge remote-tracking branch 'origin/main' into version/api-key"
        },
        {
          "sha": "1a62ef642eeec268648605973a7d863809418de7",
          "message": "Merge branch 'main' into version/api-key"
        }
      ],
      "comments": [
        {
          "user": "thecoop",
          "body": "Not sure if implementing `VersionId` would be helpful here. Maybe as a marker?"
        }
      ],
      "body": "This commit decouples the version stored in API key documents from the node version, as part of the broader effort to stop relying on node version for product logic. The actual data format does not change - the version is stored as an integer before and after this commit, it's just determined by a manually set `ApiKey.Version` class rather than being derived from the node version.\r\n",
      "base_ref": "main",
      "head_ref": "version/api-key",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104156/comments"
    },
    {
      "number": 104155,
      "title": "Updated missingTrainedModel message to include: you may need to create it",
      "state": "closed",
      "created_at": "2024-01-09T18:08:24Z",
      "updated_at": "2024-01-11T16:56:32Z",
      "closed_at": "2024-01-11T16:56:30Z",
      "merged_at": "2024-01-11T16:56:30Z",
      "author": "maxhniebergall",
      "labels": [
        ">enhancement",
        ":ml",
        "Team:ML",
        "v8.13.0"
      ],
      "comments_count": 6,
      "review_comments_count": 2,
      "additions": 52,
      "deletions": 17,
      "changed_files": 3,
      "url": "https://github.com/elastic/elasticsearch/pull/104155",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104155",
      "commits": [
        {
          "sha": "381b008cc99794a17f69e140af5404d5bad94f75",
          "message": "Updated missingTrainedModel message to include: you may need to create it"
        },
        {
          "sha": "229de3d73d89e7e59a0b9806af3acf3acc282de1",
          "message": "Update docs/changelog/104155.yaml"
        },
        {
          "sha": "9463bcde9f76d7eca5cf0559f92799a0d12baed3",
          "message": "Added special exception message for ELSER"
        },
        {
          "sha": "8aeb129d95bc597002c150ad1d717d14fe7c6e65",
          "message": "Merge branch 'updateMissingTrainedModelMessage' of https://github.com/elastic/elasticsearch into updateMissingTrainedModelMessage"
        },
        {
          "sha": "b2d4d5a61d68c241f9af2b77f8580bbd41aa27dc",
          "message": "Use ExceptionsHelper.unwrapCause instead of instanceof\n\nCo-authored-by: David Kyle <david.kyle@elastic.co>"
        },
        {
          "sha": "93836cfb89c1d32daf95961d0bce2365be19707a",
          "message": "Added missing import"
        },
        {
          "sha": "1f320618afe7bbdee5f65af993f4ff75cd8bd764",
          "message": "Merge branch 'main' into updateMissingTrainedModelMessage"
        }
      ],
      "comments": [
        {
          "user": "maxhniebergall",
          "body": "this refactor wasn't necessary for this PR, but I had done it to try to display the required model variant, discovered I wasn't able to do that, and left in this refactor because it seems good anyway."
        },
        {
          "user": "davidkyle",
          "body": "`StartTrainedModelDeploymentAction` is a master node action which means the request will most likely be executed on a different node, in which case root cause may be wrapped in another exception. \r\n\r\n```suggestion\r\n                if (ExceptionsHelper.unwrapCause(e) instanceof ResourceNotFoundException) {\r\n```"
        }
      ],
      "body": "Updated the error message for missing trained models to account for the case where the model needs to be created (or downloaded, in the case of internal models).\r\n",
      "base_ref": "main",
      "head_ref": "updateMissingTrainedModelMessage",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104155/comments"
    },
    {
      "number": 104154,
      "title": "Update nested knn search documentation about inner-hits",
      "state": "closed",
      "created_at": "2024-01-09T17:52:17Z",
      "updated_at": "2024-01-10T12:49:10Z",
      "closed_at": "2024-01-10T12:46:42Z",
      "merged_at": "2024-01-10T12:46:42Z",
      "author": "benwtrent",
      "labels": [
        ">docs",
        "Team:Docs",
        "Team:Search",
        "auto-merge-without-approval",
        ":Search Relevance/Vectors",
        "v8.12.1",
        "v8.13.0",
        "v8.11.5"
      ],
      "comments_count": 5,
      "review_comments_count": 0,
      "additions": 7,
      "deletions": 0,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104154",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104154",
      "commits": [
        {
          "sha": "199e7c5fc82c5141a343d8919af20ddae7c1991b",
          "message": "Update nested knn search documentation about inner-hits"
        },
        {
          "sha": "c1f78f928e072beb69d24d3de1d429a6de66db47",
          "message": "Merge branch 'main' into docs/update-nested-knn-search-docs"
        }
      ],
      "comments": [],
      "body": "Adding a link tag for inner hits behavior and kNN search. Additionally adding a note that if you are using multiple knn clauses, that the inner hit name should be provided.",
      "base_ref": "main",
      "head_ref": "docs/update-nested-knn-search-docs",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104154/comments"
    },
    {
      "number": 104153,
      "title": "[ML] Adding internal inference input type field",
      "state": "closed",
      "created_at": "2024-01-09T17:49:04Z",
      "updated_at": "2024-01-10T14:02:32Z",
      "closed_at": "2024-01-10T14:02:28Z",
      "merged_at": "2024-01-10T14:02:28Z",
      "author": "jonathan-buttner",
      "labels": [
        ">non-issue",
        ":ml",
        "Team:ML",
        "v8.13.0"
      ],
      "comments_count": 2,
      "review_comments_count": 0,
      "additions": 265,
      "deletions": 39,
      "changed_files": 9,
      "url": "https://github.com/elastic/elasticsearch/pull/104153",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104153",
      "commits": [
        {
          "sha": "e5959ef20f955c692e1d00256f58b0d6d9beb9f1",
          "message": "Adding input type"
        },
        {
          "sha": "642fb9e040bed3e689fc7539ebaced39e8fe1dda",
          "message": "Working tests"
        },
        {
          "sha": "e831fcbf15db6ec2b92b5b0a33654567ae8750c4",
          "message": "Merge branch 'main' of github.com:elastic/elasticsearch into ml-input-type"
        }
      ],
      "comments": [],
      "body": "This PR adds the new field `inputType` to the `InferenceAction`. This field is internal and is not exposed over REST. This field will be used by the cohere text embedding integration to determine whether we send `search_document` (for ingest requests) or `search_query` (for search requests).\r\n\r\nhttps://docs.cohere.com/reference/embed",
      "base_ref": "main",
      "head_ref": "ml-input-type",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104153/comments"
    },
    {
      "number": 104151,
      "title": "Wait for async actions in AsyncOperator tests",
      "state": "closed",
      "created_at": "2024-01-09T17:31:59Z",
      "updated_at": "2024-01-09T18:32:20Z",
      "closed_at": "2024-01-09T18:32:19Z",
      "merged_at": "2024-01-09T18:32:19Z",
      "author": "dnhatn",
      "labels": [
        ">test",
        "Team:Analytics",
        ":Analytics/ES|QL",
        "v8.13.0"
      ],
      "comments_count": 2,
      "review_comments_count": 0,
      "additions": 4,
      "deletions": 0,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104151",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104151",
      "commits": [
        {
          "sha": "d63d43b8f1cf3d77aab633c191acd1f8b0e4ee3e",
          "message": "Wait for async actions in AsyncOperator tests"
        }
      ],
      "comments": [],
      "body": "We must wait for the async lookups in AsyncOperator to complete before ending the test to ensure that all blocks are released.\r\n\r\nCloses #104130",
      "base_ref": "main",
      "head_ref": "fix-async-leak",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104151/comments"
    },
    {
      "number": 104150,
      "title": "Correct profiled rewrite time for knn with a pre-filter",
      "state": "closed",
      "created_at": "2024-01-09T17:27:27Z",
      "updated_at": "2024-01-10T19:17:59Z",
      "closed_at": "2024-01-10T19:17:35Z",
      "merged_at": "2024-01-10T19:17:35Z",
      "author": "benwtrent",
      "labels": [
        ">bug",
        ":Search/Search",
        "Team:Search",
        "auto-merge-without-approval",
        "v8.13.0"
      ],
      "comments_count": 4,
      "review_comments_count": 0,
      "additions": 42,
      "deletions": 33,
      "changed_files": 5,
      "url": "https://github.com/elastic/elasticsearch/pull/104150",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104150",
      "commits": [
        {
          "sha": "5942da5f99fc2e2fc239cf2874102026c5e5570c",
          "message": "Correct rewrite time for knn with a prefilter"
        },
        {
          "sha": "32c27eb00fd69d211a3ff3fca44d0e1470f31328",
          "message": "Update docs/changelog/104150.yaml"
        },
        {
          "sha": "1ca6be65369e74025ab0a61d79c8b9230da1dfe2",
          "message": "Merge branch 'main' into feature/fix-knn-prefilter-profiling-1"
        },
        {
          "sha": "69cb3d2aaafbcfc2d70e1f5a4047993456bd09f7",
          "message": "Merge branch 'main' into feature/fix-knn-prefilter-profiling-1"
        }
      ],
      "comments": [],
      "body": "kNN profiling will fire multiple rewrite actions in a row without stopping a previous one. Right now, this means in production, the rewrite times are inaccurate for knn with a prefilter as we inaccurately calculate the total time (prefilter rewrite & knn rewrite). \r\n\r\nThis adjusts the interface for rewriting timing to allow concurrent rewriters which then each can update the total rewrite time that we return to the user. \r\n\r\nRelates to: https://github.com/elastic/elasticsearch/issues/104131",
      "base_ref": "main",
      "head_ref": "feature/fix-knn-prefilter-profiling-1",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104150/comments"
    },
    {
      "number": 104149,
      "title": "Consistent configuration of APM agent default settings in APMJvmOptions.",
      "state": "closed",
      "created_at": "2024-01-09T17:12:26Z",
      "updated_at": "2024-04-30T06:48:40Z",
      "closed_at": "2024-01-10T07:39:18Z",
      "merged_at": null,
      "author": "mosche",
      "labels": [
        ">non-issue",
        ":Core/Infra/Core",
        "Team:Core/Infra",
        "v8.13.0"
      ],
      "comments_count": 2,
      "review_comments_count": 0,
      "additions": 5,
      "deletions": 59,
      "changed_files": 3,
      "url": "https://github.com/elastic/elasticsearch/pull/104149",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104149",
      "commits": [
        {
          "sha": "ec84205e6ee8e021d3c07e2a956aa11ef3b58ff0",
          "message": "Consistent configuration of APM agent default settings in APMJvmOptions.\n\nMove configuration defaults from APMAgentSettings to APMJvmOptions to consistently apply these in one location only."
        },
        {
          "sha": "533fcb9c6f62976646d397706faca8fc826eb81e",
          "message": "fix checkstyle"
        }
      ],
      "comments": [],
      "body": "Move configuration defaults from `APMAgentSettings` to `APMJvmOptions` to consistently apply these in one location only.",
      "base_ref": "main",
      "head_ref": "apm_agent_fix_redundant_defaults",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104149/comments"
    },
    {
      "number": 104148,
      "title": "Fetch single region in cache",
      "state": "closed",
      "created_at": "2024-01-09T17:02:49Z",
      "updated_at": "2024-01-18T09:11:38Z",
      "closed_at": "2024-01-18T09:11:24Z",
      "merged_at": "2024-01-18T09:11:24Z",
      "author": "tlrx",
      "labels": [
        ">non-issue",
        ":Distributed Coordination/Snapshot/Restore",
        "Team:Distributed (Obsolete)",
        "v8.13.0"
      ],
      "comments_count": 3,
      "review_comments_count": 22,
      "additions": 485,
      "deletions": 50,
      "changed_files": 3,
      "url": "https://github.com/elastic/elasticsearch/pull/104148",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104148",
      "commits": [
        {
          "sha": "7d47f182b8e6ea7f8d9fd7e8a206a5e13f97c7e0",
          "message": "Fetch single region in cache"
        },
        {
          "sha": "454dee02a820a8a4d18f456d97c2dd57204584e9",
          "message": "Merge commit '4d7e0ec1ef1' into 2024/01/09/prewarm-indexing-shard-recoveries"
        },
        {
          "sha": "af4e00daa1753449ad729c7ec6ae70b7f29f1252",
          "message": "add tests"
        },
        {
          "sha": "4512411d888493c53239d69f5c59b21168a7c23f",
          "message": "Merge commit 'a0cf690be8a' into 2024/01/09/prewarm-indexing-shard-recoveries"
        },
        {
          "sha": "195ea528bcfd95422d1e90ec63ad29d7c2b282e6",
          "message": "freq=1"
        },
        {
          "sha": "36629cccc62e3e3ba39f577fd6d79746d03c374d",
          "message": "fillGapRunnable"
        },
        {
          "sha": "42195f2ebd16986621f73d8d00c437c66f7522e9",
          "message": "future"
        },
        {
          "sha": "b9a9b095df432ba43548e9d4e1f3220867fa5d85",
          "message": "Merge commit '59e8aa887f5' into 2024/01/09/prewarm-indexing-shard-recoveries"
        },
        {
          "sha": "54f582b5a018ee6f7161c85e0f6fad8bf3dbefc9",
          "message": "feedback"
        },
        {
          "sha": "85c059287230a5c1f746d70b563048b7930a5e3d",
          "message": "nits"
        },
        {
          "sha": "7b1b80e9d08c82a9d7981e79b2bdc546a8fcce03",
          "message": "Merge branch 'main' into 2024/01/09/prewarm-indexing-shard-recoveries"
        }
      ],
      "comments": [
        {
          "user": "henningandersen",
          "body": "I wonder if we should consider both free regions and regions at level 0 as free here?\r\n\r\nI believe we'll never eagerly evict data just because it is unused. So here we might have data in cache that has not been used for many hours but still do no eager fetching."
        },
        {
          "user": "tlrx",
          "body": "Yes, I think it makes sense to also consider regions that are infrequently used, as long as they spent a bit of time in the cache to avoid evicting newly created cache entries.\r\n\r\nI gave it a try in the latest changes by introducing a `maybeEvictLeastUsed` that takes both frequency and last access time. Let me know what you think."
        },
        {
          "user": "henningandersen",
          "body": "I wonder if we should add new data in the cache at frequency 1 instead of this condition? I worry that we could need to iterate a lot of entries here. I think that also better matches that we are not counting freq 0 evictions towards eviction stats."
        },
        {
          "user": "henningandersen",
          "body": "It would be nice to name the variable and method \"runnable\" here:\r\n\r\n```suggestion\r\n                            var fillGapRunnable = fillGapRunnable(cacheFileRegion, writer, gap);\r\n```"
        },
        {
          "user": "henningandersen",
          "body": "I'd like to still verify the listener is invoked."
        },
        {
          "user": "henningandersen",
          "body": "I am not sure this is true with how `populate` works, since if someone else is downloading the data, `populate` invokes the listener immediately."
        },
        {
          "user": "henningandersen",
          "body": "Why do we invoke the listener immediately when some other thread is already downloading data? You probably think of something in the consumer but I failed to figure out why."
        },
        {
          "user": "tlrx",
          "body": "I introduced this method to only start the fetching of a range (\"populate only\") and not fetch, write then read a range (\"populate and read\"). It does not have to read data back, so it can return immediately if another thread will fetch that range. Note that if opening the shard require to read in the range, it will wait anyway too."
        },
        {
          "user": "henningandersen",
          "body": "That means that if we have two requests happening \"at the same time\", one listener will be invoked after the download, another will be invoked immediately. I am not sure I understand why?\r\n\r\nI wonder if we should make `maybeFetchRegion` fire and forget completely instead? Waiting for the download of the full region may be counter productive to recovery since it may be able to start with just the first few kbs of the region."
        },
        {
          "user": "tlrx",
          "body": "Yes, I think it makes sense to add new cache entries with a `freq=1` for the reasons you mentioned. I gave it a try in 195ea528bcfd95422d1e90ec63ad29d7c2b282e6"
        },
        {
          "user": "tlrx",
          "body": "Sure, I pushed 36629cccc62e3e3ba39f577fd6d79746d03c374d"
        },
        {
          "user": "tlrx",
          "body": "Makes sense, I pushed 42195f2ebd16986621f73d8d00c437c66f7522e9"
        },
        {
          "user": "tlrx",
          "body": "> That means that if we have two requests happening \"at the same time\", one listener will be invoked after the download, another will be invoked immediately. I am not sure I understand why?\r\n\r\nI see how it can be confusing now. \r\n\r\nThe main goal of this behavior is to skip fetching a region if it is already pending download, ie recovery is already reading that region of the blob. We also want to bound the number of concurrent regions to be fetched here, hence a listener is requested to know when a download if completed to start the next one.\r\n\r\nWould returning a Future<Void> indicating when fetching the region is done makes more sense?"
        },
        {
          "user": "henningandersen",
          "body": "We discussed this and one option is to make the listener have a Boolean argument indicating whether the download has been done or not and explaining in javadoc that false means something else is downloading the region."
        },
        {
          "user": "tlrx",
          "body": "Henning and discussed this via another channel. We'll keep the current listener, maybe complete it with a boolean indicating if the range to write has been fetched by the current thread or will be fetched some time in the future by a competing thread. I'll try to improve doc too."
        },
        {
          "user": "tlrx",
          "body": "I pushed 54f582b5a018ee6f7161c85e0f6fad8bf3dbefc9"
        },
        {
          "user": "henningandersen",
          "body": "Can we add that when it is triggered with true, the data is already available."
        },
        {
          "user": "henningandersen",
          "body": "Should we do this before calling `get` to validate that the listener is called immediately?"
        },
        {
          "user": "henningandersen",
          "body": "Can we also assert that `future1.isDone()` is false?"
        },
        {
          "user": "tlrx",
          "body": "I pushed /85c059287230a5c1f746d70b563048b7930a5e3d"
        },
        {
          "user": "tlrx",
          "body": "Yes, thanks for spotting this. I pushed 85c059287230a5c1f746d70b563048b7930a5e3d"
        },
        {
          "user": "tlrx",
          "body": "Done in 85c059287230a5c1f746d70b563048b7930a5e3d"
        }
      ],
      "body": "Adds methods to fully populate a region at once in the cache.",
      "base_ref": "main",
      "head_ref": "2024/01/09/prewarm-indexing-shard-recoveries",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104148/comments"
    },
    {
      "number": 104147,
      "title": "POC: Cap shard failure lists to a fixed small size",
      "state": "closed",
      "created_at": "2024-01-09T16:56:58Z",
      "updated_at": "2025-01-15T15:20:29Z",
      "closed_at": "2025-01-15T14:48:10Z",
      "merged_at": null,
      "author": "quux00",
      "labels": [
        "Team:Search",
        ":Search Foundations/Search"
      ],
      "comments_count": 0,
      "review_comments_count": 0,
      "additions": 252,
      "deletions": 35,
      "changed_files": 10,
      "url": "https://github.com/elastic/elasticsearch/pull/104147",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104147",
      "commits": [
        {
          "sha": "8b774fd46729a12e788f1d5f9d9e07f5923b1db5",
          "message": "Added int shardFailures to SearchResponse; added to serialization, but no otherwise used yet. Tests passing\n\nNew SearchResponse ctor added with explicit field for shardFailure count but not yet used"
        },
        {
          "sha": "bce09810a47120cfcebd9061503eb388ecb0bc01",
          "message": "AbstractSearchAsyncAction now passes ShardSearchFailures to SearchResponse - tests passing"
        },
        {
          "sha": "319382fc42ebc4867de70a381cd42313d0a71008",
          "message": "AbstractSearchAsyncAction.buildShardSearchFailures now attempts deduplication with existing ExcsHelper.groupBy\n\nAll tests tried pass."
        },
        {
          "sha": "d482ce1c449f7b2ec160db34818fdc069040e406",
          "message": "SearchResponseMerger now also limits the total number of shard failures\n\nso that the _shards section of the final results is limited. This makes\nCCS MRT=true more like MRT=true.\n\nHowever CCSDuelIT.testShardFailures is still failing. I haven't looked\ncarefully, but my guess is that which failures get kept is random between\nMRT=true and MRT=false ??\n\nAlso the _cluster/details/failures section of MRT=false is NOT being\ntruncated to MAX_FAILURES - so I need to track that part of the code\ndown still, but MRT=true looks like it is behaving correctly.\n\nAdded ExceptionsHelper.groupBy(failures, max, aggressive) and using it in\nAbstractSearchAsyncAction.buildShardSearchFailures\n\nSearchResponseMergerTests was adjusted."
        }
      ],
      "comments": [],
      "body": "This is a POC exploratory coding attempt to address https://github.com/elastic/elasticsearch/issues/103708 and https://github.com/elastic/elasticsearch/issues/99220\r\n\r\nAfter some earlier exploratory code, I decided not to change the AtomicAtomic of ShardSearchFailures in `AbstractSearchAsyncAction`. Changing it really messes up the lock-free thread safety model of that class. In addition, other classes keep AtomicArray's of all shard results, so this is not the only offender.\r\n\r\nInstead, I focused on reducing the number of failures reported in the SearchResponse. The SearchResponse does not track failed shard count independent of the ShardSearchFailure array, so that new field had to be added.\r\n\r\nMost tests are passing, but need to do further work on those. Also CCS MRT=false is not yet truncating the number of failures in the _cluster/details/failures section so I need to track down where that occurs.",
      "base_ref": "main",
      "head_ref": "search/limit-shard-failures",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104147/comments"
    },
    {
      "number": 104145,
      "title": "Fix _alias/<alias> returning non-matching data streams",
      "state": "closed",
      "created_at": "2024-01-09T16:27:17Z",
      "updated_at": "2024-01-29T21:23:31Z",
      "closed_at": "2024-01-29T21:22:02Z",
      "merged_at": "2024-01-29T21:22:02Z",
      "author": "mattc58",
      "labels": [
        ">bug",
        ":Data Management/Data streams",
        "Team:Data Management",
        "v8.12.1",
        "v8.13.0"
      ],
      "comments_count": 6,
      "review_comments_count": 7,
      "additions": 267,
      "deletions": 33,
      "changed_files": 9,
      "url": "https://github.com/elastic/elasticsearch/pull/104145",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104145",
      "commits": [
        {
          "sha": "8840d5b20ded5eacad2e74fe494a47136c859a4b",
          "message": "Add test that fails on current code"
        },
        {
          "sha": "48dc55da07b66144210ca7651dcab41e78d7587e",
          "message": "Change the way data streams are found when getting aliases"
        },
        {
          "sha": "ddad4d5240b67fb79d1880c50830a445ae79bd04",
          "message": "Change optimistic GA notice to \"was available\" in tests"
        },
        {
          "sha": "67ba64825b1cf5928e29d457e731163650f8e986",
          "message": "Update docs/changelog/104145.yaml"
        },
        {
          "sha": "a0394c6cda3f0838a8e019053d5e8fb0705f3431",
          "message": "Apply spotless fixes"
        },
        {
          "sha": "6c2f36b7eaaa1100a656e6bcaae0d5d3d4e1532a",
          "message": "Update docs/changelog/104145.yaml"
        },
        {
          "sha": "ad527e7939d37c361cd9ca16e8633f37f6e8ef13",
          "message": "Refactor Metadata.findAliases to work with both AliasMetadata and DataStreamAlias"
        },
        {
          "sha": "8e4899f0215cca1a994727cd8f7f0f2ff327a47e",
          "message": "Merge remote-tracking branch 'origin/fix-96589-alias-datastreams' into fix-96589-alias-datastreams"
        },
        {
          "sha": "997ed076f3690bdf56ce5edfab9a1a2402709ac7",
          "message": "Merge remote-tracking branch 'upstream/main' into fix-96589-alias-datastreams"
        },
        {
          "sha": "cdb5715681014f8f972a5c2a5e61b2f876abe21c",
          "message": "Remove debugging code"
        },
        {
          "sha": "b8a3b5f91ef9f8ae95d32b681fcbd1711ada091e",
          "message": "Use a map of data stream aliases by data stream name"
        },
        {
          "sha": "7e0dd21db0ff5d89d12b4730ded92bac601c2734",
          "message": "Add tests for alias exclusion and new function dataStreamAliasesByDataStream"
        },
        {
          "sha": "3ba3a55367188f2e38b06dfad9230e97cffb6d14",
          "message": "Merge remote-tracking branch 'upstream/main' into fix-96589-alias-datastreams"
        },
        {
          "sha": "ab9a20e18cfa6c10f5061afbc09e4eb7f7e5a2a9",
          "message": "Merge remote-tracking branch 'upstream/main' into fix-96589-alias-datastreams"
        },
        {
          "sha": "f06f842e2911fbfa1deac9697cbcfa51e1388964",
          "message": "Add PR feedback"
        }
      ],
      "comments": [
        {
          "user": "masseyke",
          "body": "Should we have a test in here that covers the exclusions case (like `testFindAliasWithExclusion` but for findDataStreamAliases? I don't know that we even claim to support it, but we get it virtually for free with what you've done."
        },
        {
          "user": "masseyke",
          "body": "I think that this check is redundant now, right? In Metadata, the setter only puts things in the map that's returned if they are the things you passed in as the second argument to `findDataStreamAliases`."
        },
        {
          "user": "masseyke",
          "body": "That is, can you just return the result of `findDataStreamAliases` from this method?"
        },
        {
          "user": "masseyke",
          "body": "I'm wondering if at some point we'll need to start computing this outside of this method if users have a _lot_ of data stream aliases. But doing it once per request doesn't seem all that bad."
        },
        {
          "user": "masseyke",
          "body": "This is currently pointed at main (8.13.0) and the PR isn't labeled with 8.12.1. We'll need to make sure to remember backport it, or change this version if this doesn't get backported in time for 8.12.1"
        },
        {
          "user": "mattc58",
          "body": "I wonder if doing the analysis and guidelines suggested in https://github.com/elastic/elasticsearch/issues/104456 would help guide us here. Maybe we could store aliases differently in cluster state."
        }
      ],
      "body": "This fixes a bug where `GET _alias/<alias>` would return non-matching data streams. This happens when security is enabled and when the index pattern is changed to `[\"*',\"-*\"]` and the data streams don't properly process that.\r\n\r\nFixes #96589.",
      "base_ref": "main",
      "head_ref": "fix-96589-alias-datastreams",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104145/comments"
    },
    {
      "number": 104143,
      "title": "[8.12] Minor doc fixes for PKI realm (#103831)",
      "state": "closed",
      "created_at": "2024-01-09T15:52:12Z",
      "updated_at": "2024-01-09T16:12:12Z",
      "closed_at": "2024-01-09T16:11:48Z",
      "merged_at": "2024-01-09T16:11:48Z",
      "author": "jakelandis",
      "labels": [
        ">docs",
        ":Security/Security",
        "backport",
        "Team:Docs",
        "Team:Security",
        "auto-merge-without-approval",
        "v8.12.1"
      ],
      "comments_count": 1,
      "review_comments_count": 0,
      "additions": 6,
      "deletions": 8,
      "changed_files": 2,
      "url": "https://github.com/elastic/elasticsearch/pull/104143",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104143",
      "commits": [
        {
          "sha": "2c4ce8c2e0a5e020bda6c917b8a7a0b7c635209f",
          "message": "Minor doc fixes for PKI realm (#103831)\n\nRemove the reference to the transport client and clarify the usage of username_pattern"
        }
      ],
      "comments": [],
      "body": "Backports the following commits to 8.12:\n - Minor doc fixes for PKI realm (#103831)",
      "base_ref": "8.12",
      "head_ref": "backport/8.12/pr-103831",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104143/comments"
    },
    {
      "number": 104142,
      "title": "Expose token authentication metrics",
      "state": "closed",
      "created_at": "2024-01-09T15:39:21Z",
      "updated_at": "2024-01-10T22:11:18Z",
      "closed_at": "2024-01-10T22:11:18Z",
      "merged_at": "2024-01-10T22:11:18Z",
      "author": "slobodanadamovic",
      "labels": [
        ">enhancement",
        ":Security/Authentication",
        "Team:Security",
        "v8.13.0"
      ],
      "comments_count": 2,
      "review_comments_count": 5,
      "additions": 191,
      "deletions": 3,
      "changed_files": 6,
      "url": "https://github.com/elastic/elasticsearch/pull/104142",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104142",
      "commits": [
        {
          "sha": "c5bc478faa3ac3abaffdfd4af1918a5bb4397de2",
          "message": "Record API key authentication metrics\n\nThis PR adds metrics for recording successful and failed authentications\nfor API keys. Exposed metrics are:\n\n- `es.security.authc.api_keys.success.count`\n- `es.security.authc.api_keys.failures.count`\n\nEach of the metric is exposed at node level and includes\nadditional API key information through these attributes:\n\n- `es.security.api_key_id` - unique API key identifier\n- `es.security.api_key_type` - API key type (`rest` or `cross_cluster`)\n- `es.security.authc_failure_reason` - failure message"
        },
        {
          "sha": "599320e2d59fa8767a04bd1371ef3af4195919cc",
          "message": "Merge branch 'main' of github.com:elastic/elasticsearch into sa-add-api-key-authc-metrics"
        },
        {
          "sha": "ea674f33b958e7b834eec12dd9f78de480615636",
          "message": "Update docs/changelog/103178.yaml"
        },
        {
          "sha": "0846b967cac6bba860f01e1cc839244735a86b0a",
          "message": "nit: add api_key_ prefix to the failure reason attribute"
        },
        {
          "sha": "97f6a682110a9e9a861d19b53b9103699981d031",
          "message": "Introduce MetricsRecordingAuthenticator to simplify future implementations"
        },
        {
          "sha": "efe91aca8d7533cc84334ffc84f99841b6a32fb3",
          "message": "Change to singular prefix to be more aligned with existing api_key setting naming"
        },
        {
          "sha": "d030b141c192abd40922d7e9283c434ad0e8dc88",
          "message": "Changing approach to listener wrapping and adding authc time histogram"
        },
        {
          "sha": "f7bb8911aca2e6935fbfd4a77793a43d77ec8c80",
          "message": "Merge branch 'main' of github.com:elastic/elasticsearch into sa-add-api-key-authc-metrics"
        },
        {
          "sha": "adb5f7b52bf64b6c3ea7e1fdec382b067b338a5f",
          "message": "Merge branch 'main' of github.com:elastic/elasticsearch into sa-add-api-key-authc-metrics"
        },
        {
          "sha": "224df150eacbbb86c4b9e4c086926ce69c9d4a69",
          "message": "Merge branch 'main' of github.com:elastic/elasticsearch into sa-add-api-key-authc-metrics"
        },
        {
          "sha": "7e4d6c30f9be7dd2417d4126e811344ca59bbef1",
          "message": "Refactor metric collection to better separate static logic from state"
        },
        {
          "sha": "615b12cf710879f0b5b17bb301f735a7f10c4158",
          "message": "Merge branch 'main' of github.com:elastic/elasticsearch into sa-add-api-key-authc-metrics"
        },
        {
          "sha": "f5abfc18771396ed43664498e5249d29dd24a4a1",
          "message": "Merge branch 'main' of github.com:elastic/elasticsearch into sa-add-api-key-authc-metrics"
        },
        {
          "sha": "d85d141f1d5347a6dbd64923d9e370861c5ba9f8",
          "message": "This PR adds metrics for recording successful and failed\nauthentications for service accounts. Exposed metrics are:\n\n- `es.security.authc.service_account.success.count`\n- `es.security.authc.service_account.failures.count`\n\nEach of the metric is exposed at node level and includes\nadditional service account information with these attributes:\n\n- `es.security.service_account_id` - unique service account identifier (principal)\n- `es.security.service_account_token_name`\n- `es.security.service_account_authc_failure_reason`\n\nNote: This change builds on top of abstractions introduced in #103178.\n\nRelates: ES-7469"
        },
        {
          "sha": "120a897c662bdff1b4c95178d6f358e02c764b00",
          "message": "Update docs/changelog/104043.yaml"
        },
        {
          "sha": "94f6ce78fc3b0b3c0d9c88fecbb88a968de9e3db",
          "message": "Cleanup"
        },
        {
          "sha": "e993a9648c37cd38cca0909cb0e6eea847103063",
          "message": "Merge branch 'sa-add-service-account-authentication-metrics' of github.com:slobodanadamovic/elasticsearch into sa-add-service-account-authentication-metrics"
        },
        {
          "sha": "d6d27b02b06e927e669b6e9d340b84fd069b7962",
          "message": "Merge branch 'main' of github.com:elastic/elasticsearch into sa-add-service-account-authentication-metrics\n\n# Conflicts:\n#\tx-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/metric/SecurityMetricType.java\n#\tx-pack/plugin/security/src/test/java/org/elasticsearch/xpack/security/authc/ApiKeyAuthenticatorTests.java"
        },
        {
          "sha": "0dc0be50a2132d9fed2da3eef8c1da0a053c50fb",
          "message": "This PR adds metrics for recording successful and failed\nauthentications for OAuth2 tokens. Exposed metrics are:\n\n- `es.security.authc.token.success.total`\n- `es.security.authc.token.failures.total`"
        },
        {
          "sha": "388c475ab972237d3026707836370c77517645f8",
          "message": "Merge branch 'main' of github.com:elastic/elasticsearch into sa-add-service-account-authentication-metrics"
        },
        {
          "sha": "967fd85f28c4364640bea0d92cc47b4d9c94f167",
          "message": "Change metric names to conform to naming convention"
        },
        {
          "sha": "349fda0e482f7efc5ab2df53a1476258cce2726a",
          "message": "Merge branch 'sa-add-service-account-authentication-metrics' of github.com:slobodanadamovic/elasticsearch into sa-add-oauth-token-authentication-metrics"
        },
        {
          "sha": "7e0658837c3bfa03bf71ad39a68058c76189a010",
          "message": "Remove final modifier and fix OAuth2 authenticator tests"
        },
        {
          "sha": "82f45a298b56ac149e4274c35b65aaa352f02f46",
          "message": "Update docs/changelog/104142.yaml"
        },
        {
          "sha": "2ac5b369a265eb03d6016d200eaef1b94021a592",
          "message": "Merge branch 'main' of github.com:elastic/elasticsearch into sa-add-oauth-token-authentication-metrics\n\n# Conflicts:\n#\tx-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/AuthenticationService.java\n#\tx-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/ServiceAccountAuthenticator.java\n#\tx-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/metric/SecurityMetricType.java"
        },
        {
          "sha": "173be76483efff33599596c0fbeeee2f1e53cb41",
          "message": "Switch from using static import to be more consistent"
        }
      ],
      "comments": [
        {
          "user": "slobodanadamovic",
          "body": "Removed `final` modifier in order to be able to unit test `OAuth2TokenAuthenticator` without the need for instantiation of the `TokenService` and complex mocking of its dependencies. I think this is justifiable given that the initial design around token service has changed over time with the introduction of authenticator chain."
        },
        {
          "user": "slobodanadamovic",
          "body": "There is no really any attribute that we can attach to the collected token metrics that isn't considered sensitive. Hence we only attach failure reason if provided."
        },
        {
          "user": "jfreden",
          "body": "nit: Since we refer to this as oauth token everywhere, should it be reflected in the metric name too? So `es.security.authc.oauth.token.*`?"
        },
        {
          "user": "jfreden",
          "body": "Looks like a lot of the existing services are not `final`. I _think_ it's justified for the same reasons you do. "
        },
        {
          "user": "slobodanadamovic",
          "body": "Good question. In both [Elasticsearch](https://www.elastic.co/guide/en/elasticsearch/reference/current/security-settings.html#token-service-settings) and [Kibana](https://www.elastic.co/guide/en/kibana/current/kibana-authentication.html#token-authentication) settings it's referred only as a `security.authc.token`. So my intention was to keep the same naming conventions to avoid potential confusions."
        }
      ],
      "body": "This PR adds metrics for recording successful and failed\r\nauthentications for OAuth2 tokens. Exposed metrics are:\r\n\r\n- `es.security.authc.token.success.total`\r\n- `es.security.authc.token.failures.total`\r\n- `es.security.authc.token.time`",
      "base_ref": "main",
      "head_ref": "sa-add-oauth-token-authentication-metrics",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104142/comments"
    },
    {
      "number": 104141,
      "title": "Use allow-list for APM agent settings",
      "state": "closed",
      "created_at": "2024-01-09T15:38:40Z",
      "updated_at": "2024-01-12T09:30:08Z",
      "closed_at": "2024-01-12T09:30:04Z",
      "merged_at": "2024-01-12T09:30:04Z",
      "author": "mosche",
      "labels": [
        ">non-issue",
        ":Core/Infra/Core",
        "Team:Core/Infra",
        "v8.13.0"
      ],
      "comments_count": 2,
      "review_comments_count": 19,
      "additions": 145,
      "deletions": 69,
      "changed_files": 4,
      "url": "https://github.com/elastic/elasticsearch/pull/104141",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104141",
      "commits": [
        {
          "sha": "8d0cac165af560bf4518a5fea4b4416768cf4cad",
          "message": "Use allow-list for APM agent settings (ES-6916)\n\nPrevent invalid and miss-configuration of APM agent using an explicit allow-list of setting keys.\n\n(Closes ES-6916)"
        },
        {
          "sha": "ec84205e6ee8e021d3c07e2a956aa11ef3b58ff0",
          "message": "Consistent configuration of APM agent default settings in APMJvmOptions.\n\nMove configuration defaults from APMAgentSettings to APMJvmOptions to consistently apply these in one location only."
        },
        {
          "sha": "533fcb9c6f62976646d397706faca8fc826eb81e",
          "message": "fix checkstyle"
        },
        {
          "sha": "b3f81bbce1994541e12b62aae9b201aa5659c28e",
          "message": "Consistent configuration of APM agent default settings in APMJvmOptions.\n\nMove configuration defaults from APMAgentSettings to APMJvmOptions to consistently apply these in one location only."
        },
        {
          "sha": "b3be18d7de9412b4466438a4511e342ea756eb07",
          "message": "feedback"
        },
        {
          "sha": "c4e09f2c5227331657b4568da269429630741a06",
          "message": "Test that forbidden / unknown settings are rejected"
        },
        {
          "sha": "1b26666327a00e113039af9ba363e3e77e489710",
          "message": "Fix test names"
        },
        {
          "sha": "093320590eeb7fff6acf292199af6c7036ea720c",
          "message": "Merge branch 'main' into ES-6916_apm_agent_settings_whitelist"
        }
      ],
      "comments": [
        {
          "user": "mosche",
          "body": "I'm not sure this should be part of the allow list, though there's some inconsistencies:\r\n\r\nThis is enabled in `APMJvmOptions.STATIC_CONFIG`, mentioning:\r\n```\r\nContains agent configuration that must always be applied, and cannot be overridden.\r\n```\r\n\r\nHowever, via `APMAgentSettings.APM_AGENT_DEFAULT_SETTINGS` this is also copied into `APMAgentSettings.APM_AGENT_SETTINGS`.\r\n\r\nI'm generally wondering about APM_AGENT_DEFAULT_SETTINGS, this seems redundant having `APMJvmOptions.CONFIG_DEFAULTS`. Can / Should it be removed to have a consistent way of defining defaults?\r\n\r\n"
        },
        {
          "user": "mosche",
          "body": "Not sure about this one, could it impact usage of / conflict with `config_file`? I suppose not since the config file contains static configuration only."
        },
        {
          "user": "mosche",
          "body": "A default for this is configured by `APMJvmOptions`, allow overwrites?"
        },
        {
          "user": "mosche",
          "body": "Here's another PR to apply defaults in a single consistent location:\r\nhttps://github.com/elastic/elasticsearch/pull/104149/"
        },
        {
          "user": "stu-elastic",
          "body": "Yeah it looks like `APM_AGENT_DEFAULT_SETTINGS` should be nuked."
        },
        {
          "user": "stu-elastic",
          "body": "Let's remove this one as it impacts `config_file`."
        },
        {
          "user": "stu-elastic",
          "body": "We can allow it for now."
        },
        {
          "user": "stu-elastic",
          "body": "I think the `_na_` had to do with `Setting.affixKeySetting`'s `delegateFactory` which is used via `Setting.prefixKeySetting` by `APM_AGENT_SETTINGS`.  Are you sure it's ok to remove this check?"
        },
        {
          "user": "mosche",
          "body": "Moving from deny to allow list, I had to explicitly allow `_na_`. As you mentioned the `delegateFactory` is always invoked once with `_na_`, which obviously shouldn't fail."
        },
        {
          "user": "mosche",
          "body": "👍 I dropped `APM_AGENT_DEFAULT_SETTINGS` and removed `enable_experimental_instrumentations` from the allow list."
        },
        {
          "user": "mosche",
          "body": "👍 "
        },
        {
          "user": "mosche",
          "body": "👍 "
        },
        {
          "user": "pgomulka",
          "body": "I understand that those methods are following the method convention in this test.\r\nbut we don't follow this method convention anywhere else.\r\nDo you think we could rename those test methods?"
        },
        {
          "user": "pgomulka",
          "body": "I know this is preventing code duplication, but I found it really confusing now to figure out what prefix we are using (tracing.apm vs tracing.apm.agent)\r\nperhaps we should inline it?"
        },
        {
          "user": "pgomulka",
          "body": "turns out this is not an affix seting and we could deprecate it and use 'telemetry.tracing.enabled' right?"
        },
        {
          "user": "mosche",
          "body": "Yes, I noticed that when talking to Stu, I'll work on that next 👍 "
        },
        {
          "user": "mosche",
          "body": "Sure, those are simple enough to fix asap 👍 "
        },
        {
          "user": "mosche",
          "body": "Can we postpone that for a later PR when cleaning up metric names? Likely that will touch all of this anyways."
        },
        {
          "user": "mosche",
          "body": "Done"
        }
      ],
      "body": "Prevent invalid and miss-configuration of APM agent using an explicit allow-list of setting keys.\r\nAdditionally this removes the redundant `APM_AGENT_DEFAULT_SETTINGS` in favor of a single definition of defaults in `APMJvmOptions`.\r\n(Closes ES-6916)",
      "base_ref": "main",
      "head_ref": "ES-6916_apm_agent_settings_whitelist",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104141/comments"
    },
    {
      "number": 104140,
      "title": "YAML test framework: separate `skip` and `requires` sections ",
      "state": "closed",
      "created_at": "2024-01-09T15:32:30Z",
      "updated_at": "2024-01-15T13:48:40Z",
      "closed_at": "2024-01-15T13:48:36Z",
      "merged_at": "2024-01-15T13:48:36Z",
      "author": "ldematte",
      "labels": [
        ">test",
        ":Core/Infra/Core",
        ">refactoring",
        "Team:Core/Infra",
        "v8.13.0"
      ],
      "comments_count": 3,
      "review_comments_count": 11,
      "additions": 1280,
      "deletions": 719,
      "changed_files": 17,
      "url": "https://github.com/elastic/elasticsearch/pull/104140",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104140",
      "commits": [
        {
          "sha": "9561c7fdac1f8133efc637d43d6600015465605f",
          "message": "Introduce SkipVersionContext and consolidate skip() methods"
        },
        {
          "sha": "45483d9de9ab59bca0cfbd606d042af9cfc04a64",
          "message": "Merge remote-tracking branch 'upstream/main' into refactoring-yaml-skipsection"
        },
        {
          "sha": "1be2797d808a12203acaab126b9180d138b3d6ae",
          "message": "Intermediate step: moved section construction to a builder"
        },
        {
          "sha": "ecf247e7ba67d7195e488f988860757586348c25",
          "message": "Introduce SkipCriteria for modular skip decisions\n\n- Refined SkipSectionContext to uniform boolean tests on the cluster properties\n- Removed accessors to specific criteria from SkipSection (used only on tests), adjusted test assertions\n- Version range checks commented out, as they have been already addressed in a pending PR (#103311)"
        },
        {
          "sha": "b47f1b445dfb4ffa01fb646c9cd03458f1e8d6f7",
          "message": "spotless"
        },
        {
          "sha": "a84602c5896a68f64fe566c1a3a5ce69a3cd6d29",
          "message": "Refactoring tests\n\n- moving and adding VersionRange tests\n- adding specific version and os skip tests\n- modified parse/validate/build to make SkipSection more unit-testable"
        },
        {
          "sha": "724d563ec4e87ae3b2748c159ab78f9d944df882",
          "message": "spotless"
        },
        {
          "sha": "bc206b98b83d46e64f1faf506aae144c3579fab2",
          "message": "Update external parse tests"
        },
        {
          "sha": "0235c0b93459f70fec62e554d8467c693a94132b",
          "message": "Separate and refine skip tests"
        },
        {
          "sha": "35d638b85dd56d0bdecb9828442bcb4c11d5f677",
          "message": "Merge remote-tracking branch 'upstream/main' into refactoring-yaml-skipsection"
        },
        {
          "sha": "91def96c06cc7b1783f5f4fe1a6d80c43e15aaba",
          "message": "spotless"
        },
        {
          "sha": "e31989e583799a507da401d967459d8678dbe3d6",
          "message": "Merge remote-tracking branch 'upstream/main' into refactoring-yaml-skipsection"
        },
        {
          "sha": "f5fcbb72fc7dc6c9a3c8183ce5ceb2e41bde2e3a",
          "message": "Simplify\n\n- Remove SkipSectionContext\n- Replace SkipCriteria interface with Predicate + factory\n- Moved Features check (YAML test runner features) to SkipSection build time"
        },
        {
          "sha": "3f8881401aa51af9ef29fa641254c350b6995f52",
          "message": "Merge remote-tracking branch 'upstream/main' into refactoring-yaml-skipsection"
        },
        {
          "sha": "d7ced4cfa10daee9c918566eb36164bccf3132de",
          "message": "Separated check for xpack/no_xpack\n\nCheck for xpack is cluster-configuration (modules installed) dependent, while Features are meant to be \"static\" test-runner capabilities. We separate them so checks on one (test-runner features) can be run before and separately from the other."
        },
        {
          "sha": "7259664cf866422c494c42eed534a48cd8c54bb4",
          "message": "Merge remote-tracking branch 'upstream/main' into refactoring-yaml-skipsection"
        },
        {
          "sha": "3d307b329dfe420c964e708c8e936b8075025c84",
          "message": "Fix Version/Strings nodeVersions mismatch after merge"
        },
        {
          "sha": "0573d2021ec42663a1beeb4c464f39ef2bcb28af",
          "message": "Addressing comments\n\n- removed not-so-helpful toString for Version SkipCriteria\n- renaming\n- removed un-needed file"
        },
        {
          "sha": "f0c64ee50f70e3494c22289a2a6a7f59e672b5c3",
          "message": "Merge remote-tracking branch 'upstream/main' into refactoring-yaml-skipsection"
        },
        {
          "sha": "ce3e2eb8e8f978c8feadfb52d3333127475757f0",
          "message": "Adding cluster feature-based skip criteria"
        },
        {
          "sha": "0d4ceec79a3042f7e479c50942ab6a08c9c24b0a",
          "message": "remove final"
        },
        {
          "sha": "9ec34e8a8b08e1581af405f6985072e86c73ba05",
          "message": "Renaming"
        },
        {
          "sha": "d97c7fcda2329e5bb5f56b2b10e061d8b899152b",
          "message": "More renaming"
        },
        {
          "sha": "47709fb226736bbbf8d38b3f0680607754777e03",
          "message": "Merge remote-tracking branch 'upstream/main' into add-features-yaml-skipsection"
        },
        {
          "sha": "fb7c5b92c2c5d3c5562eba1133a8b606424465eb",
          "message": "Using set intersection function"
        },
        {
          "sha": "1ed9d7b6882bd9464ee61cb256f6485756124a7a",
          "message": "Merge branch 'main' into add-features-yaml-skipsection"
        },
        {
          "sha": "d82bcf1ee8e4649e78b9fb7f15600214b2ec967e",
          "message": "Change parser signature and rename"
        },
        {
          "sha": "215da960f1a09bfa4d35b64976adebd069cb9166",
          "message": "Divide require and skip predicates"
        },
        {
          "sha": "eb88128193c67879f863db24fd46d73b8751d1b2",
          "message": "Divide requires and skip parsing (distinct sections)"
        },
        {
          "sha": "f0094b3bc8413d6f5ffcf883db8aadde3f1e7449",
          "message": "Merge remote-tracking branch 'upstream/main' into add-features-yaml-skipsection"
        }
      ],
      "comments": [
        {
          "user": "mosche",
          "body": "Very optional nit, feel free to ignore, for consistency these could be:\r\n- `[forbidden|skipped]Version`\r\n- `[forbidden|skipped]OperatingSystems`\r\n- `[forbidden|skipped]ClusterFeatures`"
        },
        {
          "user": "mosche",
          "body": "nit, maybe `yamlRunnerRequiresFeature` is easier to understand?"
        },
        {
          "user": "mosche",
          "body": "Should this be renamed? `hasYamlRunnerFeature` or similar"
        },
        {
          "user": "mosche",
          "body": "Should we log a warning here and let people know how to migrate? "
        },
        {
          "user": "mosche",
          "body": "Same as above, log a warning?"
        },
        {
          "user": "mosche",
          "body": "require`s`Criteria vs requireCriteria, not sure if that is intended"
        },
        {
          "user": "mosche",
          "body": "👍 "
        },
        {
          "user": "mosche",
          "body": "Just a thought, how about appending that to the `requiresReason` in the builder when required runner features are missing?"
        },
        {
          "user": "ldematte",
          "body": "For consistency with `ClientYamlTestSuite`, I have renamed all as `hasYamlRunnerFeature`"
        },
        {
          "user": "ldematte",
          "body": "Added"
        },
        {
          "user": "ldematte",
          "body": "It's a good idea, but I prefer to leave it as is for now, so the output message does not change too much."
        }
      ],
      "body": "This PR introduces a new `requires` field in parallel to the existing `skip` field; after trying out more elaborate alternatives, I choose to keep the change minimal wrt https://github.com/elastic/elasticsearch/pull/103909 and previous refactoring. Since renaming `SkipSection` to `PrerequisiteSection` (as it was strange to keep the name \"Skip\" when it contains both `skip` and `requires`) is making things muddier, this is what changed:\r\n- parseIfNext/parseInternal is now \"detecting\" both `skip` and `requires` (in any order)\r\n- parseInternal is split into (acutally, delegates) parseSkipSection and parseRequiresSection\r\n- parseSkipSection and parseRequiresSection are the same as before -- except each accepts and parses a sub-selection of fields.\r\n- the builder introduced previously is the same, and it is shared by parseSkipSection and parseRequiresSection; this keeps the change minimal but also make cross-field validation easier.\r\n\r\nIn a first iteration, I think about keeping `skip: features: ...` so we do not have to mix a monster change with this PR; I have added `requires: test_runner_features: ...` in parallel. We can migrate tests to that separately.\r\n\r\nSee `PrerequisiteSectionTests` for how it looks like. An example: \r\n\r\n```\r\nrequires:\r\n   test_runner_features:  some-runner feature\r\n   cluster_features:      needed-feature\r\n   reason:                test needs needed-feature to run\r\nskip:\r\n   cluster_features:      undesired-feature\r\n   reason:                test cannot run when undesired-feature are present\r\n```",
      "base_ref": "main",
      "head_ref": "add-features-yaml-requiresection",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104140/comments"
    },
    {
      "number": 104139,
      "title": "Improve dev docs for `ActionType`",
      "state": "closed",
      "created_at": "2024-01-09T15:18:46Z",
      "updated_at": "2024-06-17T06:17:09Z",
      "closed_at": "2024-01-10T09:32:01Z",
      "merged_at": "2024-01-10T09:32:01Z",
      "author": "DaveCTurner",
      "labels": [
        ">non-issue",
        ":Core/Infra/Transport API",
        "Team:Core/Infra",
        "auto-merge-without-approval",
        "v8.13.0"
      ],
      "comments_count": 1,
      "review_comments_count": 4,
      "additions": 35,
      "deletions": 3,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104139",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104139",
      "commits": [
        {
          "sha": "96b1553c8f379098dbc4837dea1c9a00bb4eb753",
          "message": "Improve dev docs for `ActionType`\n\nThe semantics of `ActionType` are somewhat confusing; this commit\nexpands its Javadocs a bit to try and clarify how to use it."
        },
        {
          "sha": "f0ae100959dc1dea22a22bd82d057c2ccf17a44c",
          "message": "Merge branch 'main' into 2024/01/09/ActionType-comment"
        },
        {
          "sha": "1b8526bb96599a27ec88549a4e46a58e9b3ab9cd",
          "message": "Less ambiguous?"
        },
        {
          "sha": "772b6893af59ea89eec7377c405a3133f44ab033",
          "message": "Merge branch 'main' into 2024/01/09/ActionType-comment"
        }
      ],
      "comments": [
        {
          "user": "joegallo",
          "body": "> A reader for the response type, which is only used by actions executed on a remote cluster.\r\n\r\nIs that a reader for the response from the action executed on the remote cluster? I'm trying to read the as-written words incorrectly and I feel like I can convince myself that those words say that it's the action executed on the remote cluster that uses the reader."
        },
        {
          "user": "DaveCTurner",
          "body": "Fair, I see the ambiguity. Let me rearrange the words, sec."
        },
        {
          "user": "DaveCTurner",
          "body": "1b8526bb9659 any better?"
        },
        {
          "user": "joegallo",
          "body": "SO MUCH BETTER. Thank you! I love it!"
        }
      ],
      "body": "The semantics of `ActionType` are somewhat confusing; this commit\r\nexpands its Javadocs a bit to try and clarify how to use it.",
      "base_ref": "main",
      "head_ref": "2024/01/09/ActionType-comment",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104139/comments"
    },
    {
      "number": 104138,
      "title": "ESQL: Remove the possibility of long literal in ToCartesianPoint and ToGeoPoint",
      "state": "closed",
      "created_at": "2024-01-09T15:11:46Z",
      "updated_at": "2024-01-10T11:11:19Z",
      "closed_at": "2024-01-10T11:11:14Z",
      "merged_at": "2024-01-10T11:11:14Z",
      "author": "iverase",
      "labels": [
        ">non-issue",
        "Team:Analytics",
        "auto-merge-without-approval",
        ":Analytics/ES|QL",
        "v8.13.0"
      ],
      "comments_count": 1,
      "review_comments_count": 2,
      "additions": 13,
      "deletions": 353,
      "changed_files": 9,
      "url": "https://github.com/elastic/elasticsearch/pull/104138",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104138",
      "commits": [
        {
          "sha": "722223763b366afcd5b4040e78dd25deb354c58c",
          "message": "ESQL: Remove the possibility of long literal in ToCartesianPoint and ToGeoPoint"
        },
        {
          "sha": "9f4ec2781c6e904e7bcf9d85df813a40060604ce",
          "message": "iter"
        },
        {
          "sha": "acb9612fbae2f79c50dd2d3a02bc92dea0d68924",
          "message": "iter"
        },
        {
          "sha": "4f7542325fb71532c2aa6609fe5f5eccca764469",
          "message": "Add test for 8.11"
        },
        {
          "sha": "2d287c011cb0a4326e5533692eb23e7ff8cb8c19",
          "message": "Merge remote-tracking branch 'upstream/main' into removeLongLiteral"
        }
      ],
      "comments": [
        {
          "user": "craigtaverner",
          "body": "We could create another test that works in older versions, like parsing WKT and then printing WKT, picking a value that matches 8.12 quantization so we get the same values in both 8.12 and 8.13."
        },
        {
          "user": "iverase",
          "body": "added"
        }
      ],
      "body": "It is currently possible in 8.12  to define spatial point literal as longs, although this is a hidden feature that it is not documented.  This long value represents how points are encoded in lucene which os something a user probably don't know and should not know. \r\n\r\nTherefore I propose in this PR to remove it as it is a hidden feature and geo ES|QL is in tech preview so it is very unlikely it will affect anybody. ",
      "base_ref": "main",
      "head_ref": "removeLongLiteral",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104138/comments"
    },
    {
      "number": 104137,
      "title": "Add ES|QL async security tests",
      "state": "closed",
      "created_at": "2024-01-09T15:05:32Z",
      "updated_at": "2024-01-10T12:15:22Z",
      "closed_at": "2024-01-10T12:15:19Z",
      "merged_at": "2024-01-10T12:15:19Z",
      "author": "ChrisHegarty",
      "labels": [
        ">refactoring",
        "Team:Analytics",
        ":Analytics/ES|QL",
        "v8.13.0"
      ],
      "comments_count": 3,
      "review_comments_count": 3,
      "additions": 195,
      "deletions": 32,
      "changed_files": 6,
      "url": "https://github.com/elastic/elasticsearch/pull/104137",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104137",
      "commits": [
        {
          "sha": "ca5f9477c213699cd4d6ada7ab226f9da21a9392",
          "message": "Add ESQL async security tests"
        },
        {
          "sha": "98f1912d568a4dbb08b7c47fe76ea56d3d06e035",
          "message": "fix snapshot check"
        },
        {
          "sha": "065993ef83e0cfc814a28afd57a06f634443d4fc",
          "message": "randomize timeout so that we can verify asycn get with a running task"
        },
        {
          "sha": "821f17fea6a46c636ff39abecb076e03f9a4c2f7",
          "message": "Merge branch 'main' into esql_async_sec"
        },
        {
          "sha": "3a7c2be26399518aef13217853b5d151b425d581",
          "message": "Merge branch 'main' into esql_async_sec"
        }
      ],
      "comments": [
        {
          "user": "ChrisHegarty",
          "body": "Looks like pragmas were never previously sent in this test. I fixed this for the non-async case as part of the test refactoring."
        },
        {
          "user": "nik9000",
          "body": "I imagine we have to skip this if we're running in a release build."
        },
        {
          "user": "ChrisHegarty",
          "body": "Oh yes. I inadvertently removed this. I’ll add it back. Thanks."
        }
      ],
      "body": "This commit expands the current ESQL security tests to cover async.\r\n\r\nrelates #102455",
      "base_ref": "main",
      "head_ref": "esql_async_sec",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104137/comments"
    },
    {
      "number": 104136,
      "title": "[8.12] [DOCS] Expands inference API docs (#104047)",
      "state": "closed",
      "created_at": "2024-01-09T14:48:49Z",
      "updated_at": "2024-01-09T15:20:34Z",
      "closed_at": "2024-01-09T15:20:30Z",
      "merged_at": "2024-01-09T15:20:30Z",
      "author": "szabosteve",
      "labels": [
        ">docs",
        "backport",
        "Team:Docs",
        "v8.12.1"
      ],
      "comments_count": 1,
      "review_comments_count": 0,
      "additions": 33,
      "deletions": 2,
      "changed_files": 5,
      "url": "https://github.com/elastic/elasticsearch/pull/104136",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104136",
      "commits": [
        {
          "sha": "05758401d81f47393cbe595a8f91e3e2ac987141",
          "message": "[DOCS] Expands inference API docs (#104047)\n\nCo-authored-by: David Kyle <david.kyle@elastic.co>"
        }
      ],
      "comments": [],
      "body": "Backports the following commits to 8.12:\n - [DOCS] Expands inference API docs (#104047)",
      "base_ref": "8.12",
      "head_ref": "backport/8.12/pr-104047",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104136/comments"
    },
    {
      "number": 104135,
      "title": "[s3-repository] Refresh Web Identity Credentials when Web Identity token changes",
      "state": "closed",
      "created_at": "2024-01-09T14:48:32Z",
      "updated_at": "2024-04-09T15:26:51Z",
      "closed_at": "2024-01-17T14:55:16Z",
      "merged_at": "2024-01-17T14:55:16Z",
      "author": "arteam",
      "labels": [
        ">enhancement",
        ":Distributed Coordination/Snapshot/Restore",
        "v8.13.0"
      ],
      "comments_count": 8,
      "review_comments_count": 3,
      "additions": 162,
      "deletions": 32,
      "changed_files": 8,
      "url": "https://github.com/elastic/elasticsearch/pull/104135",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104135",
      "commits": [
        {
          "sha": "31673138a8b7efaca68546bc4a08972fe538c483",
          "message": "[s3-repository[ Refresh Web Identity Credentials in background\n\n`STSAssumeRoleWithWebIdentitySessionCredentialsProvider` is supposed to automatically\nrefresh credential when the current credentials expire and pick up a new web identity\ntoken if it has been rotated, but there have been reports from the field that doesn't work\nreliably.\n\nTo make it more reliable, let's create a background task that explicitly refresh\ncredentials at a periodic interval.\n\nIt defaults to 1 hour which is default TTL of `AssumeRoleWithWebIdentity` credentials."
        },
        {
          "sha": "7fd9de7a5462da0212439afad18d96ac56f06832",
          "message": "Update docs/changelog/104135.yaml"
        },
        {
          "sha": "6be96c54b517b1853cfbe435d696d498c8480de5",
          "message": "Update docs/changelog/104135.yaml"
        },
        {
          "sha": "4727258b6a1a5d541110efca08fd5ab851141ec5",
          "message": "Delete docs/changelog/104135.yaml"
        },
        {
          "sha": "eb927d373be70e0a9a095badd34639d52d5d9b7e",
          "message": "Add a test that we refresh credentials with a new service account"
        },
        {
          "sha": "fb4f4d1bf60afc038574b05c2baa299128056912",
          "message": "Add comments"
        },
        {
          "sha": "e59801514532dc4eb4d024ea796b95b2a3faabed",
          "message": "Fix checkstyle"
        },
        {
          "sha": "007159f8b127803ba7b8e5df17eab36ed9f6242e",
          "message": "Merge branch 'main' into refresh-web-idenity-token-credentials-background"
        },
        {
          "sha": "038c2f1c1f31865e8d8461c466a52eeac6d10221",
          "message": "Merge remote-tracking branch 'origin/main' into refresh-web-idenity-token-credentials-background"
        },
        {
          "sha": "b330add10369ba85b527b919650fd1a070634c32",
          "message": "Run spotless"
        },
        {
          "sha": "ace0e3ed59e324708def2adb0970d512aa7c2886",
          "message": "Merge remote-tracking branch 'origin/main' into refresh-web-idenity-token-credentials-background"
        },
        {
          "sha": "18fd4b50136255e80c1908d96bf4af47639547e8",
          "message": "Merge remote-tracking branch 'origin/main' into refresh-web-idenity-token-credentials-background"
        },
        {
          "sha": "abd56303fd89c755ffa30b0633c43b2821f2e10c",
          "message": "Use file watcher for updating credentials"
        },
        {
          "sha": "34742bc9a07d20fb9319a3690be6517d59e9c0b5",
          "message": "Update test name"
        },
        {
          "sha": "7408592b6aa313a7f4eb96a4c378123a3d3b8022",
          "message": "Update modules/repository-s3/src/main/java/org/elasticsearch/repositories/s3/S3Service.java\n\nCo-authored-by: Yang Wang <ywangd@gmail.com>"
        },
        {
          "sha": "7aea33cbdd935b05c573fff99ba65405a1e8441a",
          "message": "Run spotless"
        },
        {
          "sha": "01d4e6c6fcd15f4a4a530d4d2e6469d8cdcddac5",
          "message": "Start latch before updating the token"
        },
        {
          "sha": "a76a81205231adee2df28737cb3cb0b2bd0d92ef",
          "message": "Add debug log on changed file"
        }
      ],
      "comments": [
        {
          "user": "ywangd",
          "body": "```suggestion\r\n                    throw new ElasticsearchException(\"failed to start watching AWS web identity token file [{}]\", e, webIdentityTokenFileSymlink);\r\n```"
        },
        {
          "user": "ywangd",
          "body": "This needs to be placed before updating the token file. There is a chance that the refresh process gets triggered and completes before this block of code can run."
        },
        {
          "user": "ywangd",
          "body": "1. Can we have a debug log here?\r\n2. A deletion plus re-creation is basically an update as well. Therefore I think we should handle `onFileCreated` as well. We can skip `onFileDeleted` if we do not want to actively destroy the session. Or maybe we could just log a message for it."
        }
      ],
      "body": "`STSAssumeRoleWithWebIdentitySessionCredentialsProvider` is supposed to automatically refresh credential when the current credentials expire and pick up a new web identity token if it has been rotated, but there have been reports from the field that doesn't work reliably. To make sure that the credentials get refreshed, let's create a file watcher that explicitly refresh the credentials when the web identity token changes\r\n\r\nResolves #101828",
      "base_ref": "main",
      "head_ref": "refresh-web-idenity-token-credentials-background",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104135/comments"
    },
    {
      "number": 104134,
      "title": "Check for invalid cartesian long encoded values",
      "state": "closed",
      "created_at": "2024-01-09T14:42:03Z",
      "updated_at": "2024-01-09T15:36:30Z",
      "closed_at": "2024-01-09T15:30:51Z",
      "merged_at": "2024-01-09T15:30:51Z",
      "author": "iverase",
      "labels": [
        ">non-issue",
        "Team:Analytics",
        ":Analytics/ES|QL",
        "v8.13.0"
      ],
      "comments_count": 2,
      "review_comments_count": 0,
      "additions": 14,
      "deletions": 3,
      "changed_files": 2,
      "url": "https://github.com/elastic/elasticsearch/pull/104134",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104134",
      "commits": [
        {
          "sha": "335bbe02dbdfea5970acfd1b9f08d1072e83b1aa",
          "message": "Check for invalid cartesian long encoded values"
        }
      ],
      "comments": [],
      "body": "In Cartesian, not all integer values are valid so we need to check that the provided encoded value is in bounds, otherwise we throw an exception.\r\n\r\nfixes https://github.com/elastic/elasticsearch/issues/104127",
      "base_ref": "main",
      "head_ref": "fix104127",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104134/comments"
    },
    {
      "number": 104133,
      "title": "ESQL: Update some QA suites to allow running in Serverless",
      "state": "closed",
      "created_at": "2024-01-09T14:17:35Z",
      "updated_at": "2024-01-09T16:25:26Z",
      "closed_at": "2024-01-09T16:25:24Z",
      "merged_at": "2024-01-09T16:25:24Z",
      "author": "bpintea",
      "labels": [
        ">test",
        "Team:Analytics",
        ":Analytics/ES|QL",
        "v8.13.0"
      ],
      "comments_count": 2,
      "review_comments_count": 2,
      "additions": 4,
      "deletions": 3,
      "changed_files": 5,
      "url": "https://github.com/elastic/elasticsearch/pull/104133",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104133",
      "commits": [
        {
          "sha": "517fcf7c7b76a2245a47e57aeec58a3805a3d599",
          "message": "Update some QA suites to run in Serverless\n\nThis applies the changes needed to have single-node and heap-atack\nsuites run in Serverless."
        }
      ],
      "comments": [
        {
          "user": "bpintea",
          "body": "Setting node count isn't supported in Serverless.\r\nConsidering that `1` is the default, I think the easiest is to just remove the setting. This would be preferred IMO to \"detecting\" the environment."
        },
        {
          "user": "mark-vieira",
          "body": "👍 "
        }
      ],
      "body": "This applies the changes needed to have `single-node` and `heap-atack` suites run in Serverless.\r\n",
      "base_ref": "main",
      "head_ref": "esql/qa_sn_ha_serverless",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104133/comments"
    },
    {
      "number": 104132,
      "title": "Add support for the `simple_query_string` to the Query API Key API",
      "state": "closed",
      "created_at": "2024-01-09T14:10:23Z",
      "updated_at": "2024-01-19T12:51:16Z",
      "closed_at": "2024-01-19T12:51:13Z",
      "merged_at": "2024-01-19T12:51:12Z",
      "author": "albertzaharovits",
      "labels": [
        ">enhancement",
        ":Security/Authentication",
        "Team:Security",
        "v8.13.0"
      ],
      "comments_count": 9,
      "review_comments_count": 21,
      "additions": 606,
      "deletions": 32,
      "changed_files": 7,
      "url": "https://github.com/elastic/elasticsearch/pull/104132",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104132",
      "commits": [
        {
          "sha": "624c7b9c62dedb6c88eab59dcf06381962764490",
          "message": "Simple query string"
        },
        {
          "sha": "4c623147444699d1b286be82aab125b7311b447f",
          "message": "simplest test"
        },
        {
          "sha": "34e27d535cf6fd2865720bb2119c2ab81dbb66a2",
          "message": "Merge branch 'main' into query-string-support-for-api-key-querying"
        },
        {
          "sha": "39d534b5062a82eb28a8244f65a9162bdac9fbfe",
          "message": "Merge branch 'main' into query-string-support-for-api-key-querying"
        },
        {
          "sha": "7586af2c3d740966a7f0100f5e53739faee45f01",
          "message": "Field name pattern that doesn't match"
        },
        {
          "sha": "b547a42a05143867696064998680f4daf3325f0c",
          "message": "Extend the IT tests"
        },
        {
          "sha": "3723c223c8183995f5de6a8fac8ff7bbe8aa055d",
          "message": "even more ITs"
        },
        {
          "sha": "0e53356c1bdaadd5a239b3aab85fab8764c64ca6",
          "message": "even more ITs"
        },
        {
          "sha": "d479d05f5ef0c94063c343ce47e63ff5e07a09dc",
          "message": "More tests"
        },
        {
          "sha": "3169f3a8494126cdfec9fa8ffb01c8eedfaebd03",
          "message": "Merge branch 'main' into query-string-support-for-api-key-querying"
        },
        {
          "sha": "74a5098ecd61c5d6475c28c6b92e265bb1e23e19",
          "message": "ApiKeyBoolQueryBuilderTests"
        },
        {
          "sha": "724c8daa9290a19b80aa479770fc68cb70c690e4",
          "message": "Last tests, docs and nits"
        },
        {
          "sha": "3d7c1e320f5d41152322b89d925b92cfc2d8bdc5",
          "message": "Update docs/changelog/104132.yaml"
        },
        {
          "sha": "464c69f65926685a0c84b3bb6cc338662b6275c8",
          "message": "Merge branch 'main' into query-string-support-for-api-key-querying"
        },
        {
          "sha": "0cf9977d133de2919c8a5f29944396c5e3a147c5",
          "message": "Merge branch 'main' into query-string-support-for-api-key-querying"
        },
        {
          "sha": "b06b26a8fb4e35523fe9bad6324c415770c32377",
          "message": "Merge branch 'main' into query-string-support-for-api-key-querying"
        },
        {
          "sha": "b73a13d660d858edbafb2d41c2450706d5fc14ca",
          "message": "Comment on the reason for the field name pattern placeholder"
        },
        {
          "sha": "f542fc504a86e3111ea8987de06c92a566bba760",
          "message": "Ignore unknown field type"
        },
        {
          "sha": "18e999342ef3b81f26c0bd375a0a7a42129709eb",
          "message": "Docs explaining metadata"
        },
        {
          "sha": "df75dd89ada9b6a250d2cb3d017550b21101285f",
          "message": "Nit"
        },
        {
          "sha": "2a29d7d50ba0944f7709037b4d6fd8552fa694f3",
          "message": "Merge branch 'main' into query-string-support-for-api-key-querying"
        },
        {
          "sha": "faee38ad2bede4e825259bae4580e7d3c4b29a25",
          "message": "Merge branch 'main' into query-string-support-for-api-key-querying"
        },
        {
          "sha": "554af9f8ee5cf304bb154d3095b436dc7166e76b",
          "message": "Shorten docs"
        },
        {
          "sha": "701e2c1939bb5d6adeffab4e3a8baa359f45558b",
          "message": "assertThat(apiKeys, is(empty()))"
        },
        {
          "sha": "0a7b76e8bbeb382e1dca0aee9c7ce9af3c197315",
          "message": "new MatchNoneQueryBuilder()"
        },
        {
          "sha": "e14bcf9f6b85e8d274d9ac547d43570c18274ab4",
          "message": "Merge branch 'main' into query-string-support-for-api-key-querying"
        },
        {
          "sha": "f50ff1395be1345e6d02492050abc11ff342e22f",
          "message": "Merge branch 'main' into query-string-support-for-api-key-querying"
        },
        {
          "sha": "5afe0cc8467c3feda6813e74148babd935193de2",
          "message": "Merge branch 'main' into query-string-support-for-api-key-querying"
        },
        {
          "sha": "4e7c80a8c3424d91d53d430d6dde00f9d28ac2e9",
          "message": "Merge branch 'main' into query-string-support-for-api-key-querying"
        },
        {
          "sha": "f25c173557993c66d23edadc1ddc6686e5c6eb5d",
          "message": "Merge branch 'main' into query-string-support-for-api-key-querying"
        }
      ],
      "comments": [
        {
          "user": "jfreden",
          "body": "Is this for testing purposes only? "
        },
        {
          "user": "jfreden",
          "body": "Should this result in an error or just be ignored? Based on [this](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-simple-query-string-query.html#query-dsl-simple-query-string-query) it looks like it shouldn't even be checked for correct syntax. "
        },
        {
          "user": "jfreden",
          "body": "I found this a little confusing. Sorry if my question doesn't make sense! \r\n\r\nSo, this means that we don't support wildcards for metadata attribute field selection, right? It has to be the exact name of the attribute to match? So we can't have `metadata.something_a` and `metadata.something_b` and select them for search with `\"fields\": [\"metadata.something*\"]`. Is it possible to document that part, so the part where the result of this `return false` is that we can't match on a simple match pattern when selecting metadata attributes, it's either all attributes or a list of specific attributes. "
        },
        {
          "user": "albertzaharovits",
          "body": "No, it's not for test only.\r\nI forgot to comment in the code...\r\nIf we let the `SimpleQueryStringBuilder#fields()` be empty here, it's eventually going to be interpreted as `*` https://github.com/elastic/elasticsearch/blob/293d0302fb5a32d2947e57cbfe54251c6f61a1a5/server/src/main/java/org/elasticsearch/index/query/SimpleQueryStringBuilder.java#L414 This means it's going to search on the other fields in the `.security` index, including the disallowed ones. This conspicuous pattern (a non-pattern should work too for this query type) is put in here in order to avoid this."
        },
        {
          "user": "albertzaharovits",
          "body": "Hmmm, now that you're mentioning it....\r\nI verified that the `simple_query_string` for the regular `_search` endpoints just ignores unrecognized fields (if querying on a unrecognized field, no matches are returned) - and there's no parameter to change this behavior.\r\nSo, I believe that you're right that it would probably be more appropriate to also ignore unrecognized fields for `simple_query_string`s for the `/_security/_query/api_key` endpoint, even if all the other allowed query types complain about it.\r\n@n1v0lg Do you have preference here?"
        },
        {
          "user": "albertzaharovits",
          "body": "It's indeed confusing. I'll jot something in the docs to explain it.\r\n\r\n>So, this means that we don't support wildcards for metadata attribute field selection, right?\r\n\r\nThat's exactly right!\r\n\r\nThe root limitation actually comes from the way the [flattened field type](https://www.elastic.co/guide/en/elasticsearch/reference/current/flattened.html) works (the API key `metadata_flattened` field is mapped as such).\r\nAs you say, it's not possible to access a subset of the `metadata_flattened.*` fields via wildcards. It's either all of them, via `metadata_flattened`, or specific (non-wildcard) ones in a list.\r\n\r\nBecause the limitation comes from the Simple Query String processing, we could drop the processing here, i.e. which prohibits the `metadata.x*` -> `metadata_flattened.x*` translation, and it would still work identically (because `metadata_flattened.x*` is going to be implicitly ignored). But I think it's clearer to keep it (and test for it).\r\n\r\n--------\r\n\r\nInterestingly, if the sub-field is a wildcard, e.g. `metadata_flattened.wild*` exists as a field, then this field cannot be accessed in the `field` parameter of the `simple_query_string`."
        },
        {
          "user": "jfreden",
          "body": "Ah yes, because the default is `*`, that makes sense. Thanks for clarifying! "
        },
        {
          "user": "albertzaharovits",
          "body": "Pushed [b73a13d](https://github.com/elastic/elasticsearch/pull/104132/commits/b73a13d660d858edbafb2d41c2450706d5fc14ca) to add a comment explaining it."
        },
        {
          "user": "albertzaharovits",
          "body": "Pushed [f542fc5](https://github.com/elastic/elasticsearch/pull/104132/commits/f542fc504a86e3111ea8987de06c92a566bba760) to make the SimpleQueryString preprocessing ignore unknown field names, analogously to the the core's processing of the same query type.\r\nThe result of it is that a simple query string issued to the `POST /_security/_query/api_key` endpoint behaves identical to when issued to the regular `_search` endpoints (ignores unknown fields).\r\n@n1v0lg If you're leaning towards the less lenient, original implementation, please pitch in, I can easily revert it. \r\n"
        },
        {
          "user": "n1v0lg",
          "body": "Sorry for the delay! I'm ++ on the consistent behavior with regular `_search`. I'll review the rest of the PR shortly.  "
        },
        {
          "user": "albertzaharovits",
          "body": "Pushed [18e9993](https://github.com/elastic/elasticsearch/pull/104132/commits/18e999342ef3b81f26c0bd375a0a7a42129709eb) to explain the above in the docs proper."
        },
        {
          "user": "n1v0lg",
          "body": "Nit: I'd keep this shorter, i.e., skip the because of technical limitations part. Something like:\r\n\r\n\"It's not possible to refer to a subset of metadata fields using wildcard\r\npatterns, e.g. `metadata.field*`, even for query types that support field name patterns\" \r\n\r\n"
        },
        {
          "user": "n1v0lg",
          "body": "Optional nit: \r\n```suggestion\r\n            apiKeys -> assertThat(apiKeys, is(empty()))\r\n```"
        },
        {
          "user": "n1v0lg",
          "body": "Just making sure I'm following:\r\n\r\nThis query applies to all supported fields and matches docs where there is field with `key*` value (matched by name) and `rest` value (matched by type), right?"
        },
        {
          "user": "n1v0lg",
          "body": "Nifty! I'm wondering if we can be more explicit by returning a `MatchNoneQueryBuilder` here instead (it also avoids \"pointless\" match work on a field we know doesn't exist). \r\n\r\n(Note: I may be overlooking something here!)"
        },
        {
          "user": "albertzaharovits",
          "body": "Yes, it's keys that have any keyword starting with `key` AND that have any `rest` keyword."
        },
        {
          "user": "albertzaharovits",
          "body": "In any of the allowed fields, that is (including `metadata`)."
        },
        {
          "user": "albertzaharovits",
          "body": "Good point! I'll try it, I think it should work! Thanks!"
        },
        {
          "user": "albertzaharovits",
          "body": "Pushed [554af9f](https://github.com/elastic/elasticsearch/pull/104132/commits/554af9f8ee5cf304bb154d3095b436dc7166e76b)"
        },
        {
          "user": "albertzaharovits",
          "body": "Pushed [701e2c1](https://github.com/elastic/elasticsearch/pull/104132/commits/701e2c1939bb5d6adeffab4e3a8baa359f45558b)"
        },
        {
          "user": "albertzaharovits",
          "body": "Pushed [0a7b76e](https://github.com/elastic/elasticsearch/pull/104132/commits/0a7b76e8bbeb382e1dca0aee9c7ce9af3c197315) , I think it will pass the tests."
        }
      ],
      "body": "This adds support for the `simple_query_string` query type to the [Query API key Information API](https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-query-api-key.html).\r\nIn addition, this also adds support for querying all the API Key `metadata` fields simultaneously,\r\nrather than requiring each to be specified, such as `metadata.x`, `metadata.y`, etc.\r\n\r\nRelates: https://github.com/elastic/elasticsearch/issues/101691",
      "base_ref": "main",
      "head_ref": "query-string-support-for-api-key-querying",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104132/comments"
    },
    {
      "number": 104129,
      "title": "mute ToCartesianPointTests",
      "state": "closed",
      "created_at": "2024-01-09T12:58:56Z",
      "updated_at": "2024-01-09T14:35:39Z",
      "closed_at": "2024-01-09T14:35:15Z",
      "merged_at": "2024-01-09T14:35:15Z",
      "author": "iverase",
      "labels": [
        ">test-mute",
        "Team:Analytics",
        "auto-merge-without-approval",
        ":Analytics/ES|QL",
        "v8.13.0"
      ],
      "comments_count": 9,
      "review_comments_count": 0,
      "additions": 2,
      "deletions": 0,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104129",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104129",
      "commits": [
        {
          "sha": "effd1654d208be8b7f2e5732bc1618366c93f73e",
          "message": "mute ToCartesianPointTests"
        },
        {
          "sha": "2bb7d4b57667a73eae1fa4541aa96c1cac3c3709",
          "message": "Merge branch 'main' into muteToCartesianPointTests"
        },
        {
          "sha": "1c352f0b965146fe38fd6bd38aba10d980758ddb",
          "message": "Merge branch 'main' into muteToCartesianPointTests"
        },
        {
          "sha": "499b762e8bf6c73af1e67dc1d53653ab4217308e",
          "message": "Merge branch 'main' into muteToCartesianPointTests"
        },
        {
          "sha": "ea65f4d99c02968cc74e50671239e59fb4bd97d7",
          "message": "Merge branch 'main' into muteToCartesianPointTests"
        }
      ],
      "comments": [],
      "body": "relates https://github.com/elastic/elasticsearch/issues/104127",
      "base_ref": "main",
      "head_ref": "muteToCartesianPointTests",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104129/comments"
    },
    {
      "number": 104128,
      "title": "Make AsyncSearchResponse ref-counted",
      "state": "closed",
      "created_at": "2024-01-09T12:46:15Z",
      "updated_at": "2024-11-30T10:08:15Z",
      "closed_at": "2024-01-09T20:35:25Z",
      "merged_at": "2024-01-09T20:35:25Z",
      "author": "original-brownbear",
      "labels": [
        ">non-issue",
        ":Search/Search",
        "Team:Search",
        "auto-merge-without-approval",
        "v8.13.0"
      ],
      "comments_count": 7,
      "review_comments_count": 2,
      "additions": 482,
      "deletions": 263,
      "changed_files": 10,
      "url": "https://github.com/elastic/elasticsearch/pull/104128",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104128",
      "commits": [
        {
          "sha": "f642ef606001ccdd39fd19e444f2da6fcd7883df",
          "message": "Make AsyncSearchResponse ref-counted\n\nIt's in the title, this class references `SearchResponse`, so it itself\nmust become ref-counted."
        },
        {
          "sha": "e56594ac8800483f3a9bdaec87a47fa81a11f82a",
          "message": "fixes"
        },
        {
          "sha": "32b194837ccaa5b25e54f17000e0e731ead4a639",
          "message": "Merge branch 'main' into ref-count-async"
        },
        {
          "sha": "22e94cf97e59ea7a0b6ad2c7509aa5b742c60c51",
          "message": "Merge remote-tracking branch 'elastic/main' into ref-count-async"
        },
        {
          "sha": "e5a874436053684e6d27c8a8c7c4d756c09a6db5",
          "message": "fix unnecessary nesting"
        },
        {
          "sha": "90889cfdc302dce2e7c7ccd8f4eeea03d177d64a",
          "message": "Merge branch 'ref-count-async' of github.com:original-brownbear/elasticsearch into ref-count-async"
        }
      ],
      "comments": [
        {
          "user": "quux00",
          "body": "This double nesting of try/finally blocks seems unnecessary - I don't think you've had to do it in other tests. What if you cache the response.getId() like elsewhere and then `response.decRef` before you start the second try/finally?"
        },
        {
          "user": "original-brownbear",
          "body": "++ indeed, that was just me getting tired I think. Much better this way, thanks for spotting!"
        }
      ],
      "body": "It's in the title, this class references `SearchResponse`, so it itself must become ref-counted.\r\n",
      "base_ref": "main",
      "head_ref": "ref-count-async",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104128/comments"
    },
    {
      "number": 104126,
      "title": "remove accidentally added file",
      "state": "closed",
      "created_at": "2024-01-09T12:29:52Z",
      "updated_at": "2024-10-29T11:54:29Z",
      "closed_at": "2024-01-09T12:30:49Z",
      "merged_at": "2024-01-09T12:30:49Z",
      "author": "pgomulka",
      "labels": [
        ">non-issue",
        ":Core/Infra/Core",
        "Team:Core/Infra",
        "v8.13.0"
      ],
      "comments_count": 1,
      "review_comments_count": 0,
      "additions": 0,
      "deletions": 320,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104126",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104126",
      "commits": [
        {
          "sha": "841dc8409d6d8d6d6fcd59e4c2948334eb687c8b",
          "message": "remove accidentaly added file"
        }
      ],
      "comments": [],
      "body": "<!--\r\nThank you for your interest in and contributing to Elasticsearch! There\r\nare a few simple things to check before submitting your pull request\r\nthat can help with the review process. You should delete these items\r\nfrom your submission, but they are here to help bring them to your\r\nattention.\r\n-->\r\n\r\n- Have you signed the [contributor license agreement](https://www.elastic.co/contributor-agreement)?\r\n- Have you followed the [contributor guidelines](https://github.com/elastic/elasticsearch/blob/main/CONTRIBUTING.md)?\r\n- If submitting code, have you built your formula locally prior to submission with `gradle check`?\r\n- If submitting code, is your pull request against main? Unless there is a good reason otherwise, we prefer pull requests against main and will backport as needed.\r\n- If submitting code, have you checked that your submission is for an [OS and architecture that we support](https://www.elastic.co/support/matrix#show_os)?\r\n- If you are submitting this code for a class then read our [policy](https://github.com/elastic/elasticsearch/blob/main/CONTRIBUTING.md#contributing-as-part-of-a-class) for that.\r\n",
      "base_ref": "main",
      "head_ref": "remove_file_x",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104126/comments"
    },
    {
      "number": 104125,
      "title": "[ML] Disable machine learning on macOS x86_64",
      "state": "closed",
      "created_at": "2024-01-09T12:09:30Z",
      "updated_at": "2024-12-10T18:12:58Z",
      "closed_at": "2024-11-29T02:19:49Z",
      "merged_at": "2024-11-29T02:19:49Z",
      "author": "droberts195",
      "labels": [
        ">breaking",
        ":ml",
        "Team:ML",
        "v9.0.0",
        "v8.18.0"
      ],
      "comments_count": 3,
      "review_comments_count": 0,
      "additions": 38,
      "deletions": 13,
      "changed_files": 3,
      "url": "https://github.com/elastic/elasticsearch/pull/104125",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104125",
      "commits": [
        {
          "sha": "2a67722565be4da70e0ef5e60aa792d31e223462",
          "message": "[ML] Disable machine learning on macOS x86_64\n\nAs previously advised in #104087, machine learning functionality\nwill no longer be available on macOS x86_64.\n\nMachine learning functionality _is_ still available on macOS by\nusing an arm64 machine (Apple silicon). It is also possible to\nrun Elasticsearch with machine learning functionality within a\nDocker container on macOS x86_64."
        },
        {
          "sha": "c46251922ffa9b98c8c485c714e010aecbe511ae",
          "message": "Update docs/changelog/104125.yaml"
        },
        {
          "sha": "c05fe71edcb42cd1b2a4bffcee0add7eff6da7dc",
          "message": "Complete changelog"
        },
        {
          "sha": "1248ca31e00d87c63b453d9828fdc1349f45cf17",
          "message": "Merge branch 'main' into disable_ml_on_macos_x86_64"
        },
        {
          "sha": "24d09bee240adc0d5faab45d798ff4ba0b676b25",
          "message": "Change area"
        },
        {
          "sha": "f479aa1f144f5dc4dc52922638adde4bda893a79",
          "message": "Only the \"breaking\" section has restricted areas"
        },
        {
          "sha": "e965efd14a8b831bff111ee79c01dbe79de23df0",
          "message": "Merge branch 'main' into disable_ml_on_macos_x86_64"
        },
        {
          "sha": "4c8ae24907e25db7441cb0cfd0e4834be4b32698",
          "message": "Merge branch 'main' into disable_ml_on_macos_x86_64"
        },
        {
          "sha": "400d8f52d01dad74b167b99a061e3c5c5f386b0d",
          "message": "Merge branch 'main' of github.com:elastic/elasticsearch into disable_ml_on_macos_x86_64"
        },
        {
          "sha": "b1b7ef512e148a2603ac6904447a189284504b50",
          "message": "Merge branch 'main' into disable_ml_on_macos_x86_64"
        },
        {
          "sha": "833b0986bcbea51ed8967fda421c4cb9366aab55",
          "message": "Merge branch 'main' of github.com:elastic/elasticsearch into disable_ml_on_macos_x86_64"
        },
        {
          "sha": "de8f11c03c1686c56b1e505d81ee016c888c213d",
          "message": "Remove obsolete deprecation warning"
        },
        {
          "sha": "5a61b7bf045cc821821e2139aa23326de2e9488c",
          "message": "Merge branch 'disable_ml_on_macos_x86_64' of github.com:droberts195/elasticsearch into disable_ml_on_macos_x86_64"
        },
        {
          "sha": "a2e969d5b0713ccc23fb2dcda24e311f3812ceab",
          "message": "Merge branch 'main' into disable_ml_on_macos_x86_64"
        },
        {
          "sha": "acf19764a48baf25d291f70957bb423348331afa",
          "message": "Merge branch 'main' into disable_ml_on_macos_x86_64"
        },
        {
          "sha": "bc21cf347daf320b2444f41c83914683cf8b2f6e",
          "message": "Fix checkstyle violations"
        },
        {
          "sha": "8c047e35f37fb7633c7a8e7a5a42cc0abc5906cc",
          "message": "Merge branch 'main' of github.com:elastic/elasticsearch into disable_ml_on_macos_x86_64"
        }
      ],
      "comments": [],
      "body": "As previously advised in #104087, machine learning functionality will no longer be available on macOS x86_64.\r\n\r\nMachine learning functionality _is_ still available on macOS by using an arm64 machine (Apple silicon). It is also possible to run Elasticsearch with machine learning functionality within a Docker container on macOS x86_64.",
      "base_ref": "main",
      "head_ref": "disable_ml_on_macos_x86_64",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104125/comments"
    },
    {
      "number": 104123,
      "title": "Expand uses of matchers for Optionals",
      "state": "closed",
      "created_at": "2024-01-09T11:03:26Z",
      "updated_at": "2024-01-09T12:55:52Z",
      "closed_at": "2024-01-09T12:55:30Z",
      "merged_at": "2024-01-09T12:55:30Z",
      "author": "thecoop",
      "labels": [
        ">test",
        ":Core/Infra/Core",
        ">refactoring",
        "Team:Core/Infra",
        "v8.13.0"
      ],
      "comments_count": 2,
      "review_comments_count": 0,
      "additions": 231,
      "deletions": 153,
      "changed_files": 24,
      "url": "https://github.com/elastic/elasticsearch/pull/104123",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104123",
      "commits": [
        {
          "sha": "c1d5fbc5751bc5d553bf5759d90fbdbf5328def9",
          "message": "Expand uses of OptionalMatchers"
        },
        {
          "sha": "cc8c4f4e4af897c266b0cc0a6847ee30710fa61f",
          "message": "Add tests for OptionalMatchers"
        },
        {
          "sha": "60f84141891f9ec9155a79e2a01c15d65fa055ac",
          "message": "Remove superfluous check"
        }
      ],
      "comments": [],
      "body": "We already have `OptionalMatchers` - expand the uses of this class, and create new methods to assert specific optional values",
      "base_ref": "main",
      "head_ref": "optional-matchers",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104123/comments"
    },
    {
      "number": 104122,
      "title": "Consider old version map in IndexBufferRAMBytesUsed",
      "state": "closed",
      "created_at": "2024-01-09T10:58:53Z",
      "updated_at": "2024-01-15T00:26:37Z",
      "closed_at": "2024-01-12T13:37:29Z",
      "merged_at": "2024-01-12T13:37:29Z",
      "author": "pxsalehi",
      "labels": [
        ">bug",
        ":Distributed Indexing/Engine",
        "Team:Distributed (Obsolete)",
        "auto-merge-without-approval",
        "v8.13.0"
      ],
      "comments_count": 5,
      "review_comments_count": 8,
      "additions": 40,
      "deletions": 5,
      "changed_files": 5,
      "url": "https://github.com/elastic/elasticsearch/pull/104122",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104122",
      "commits": [
        {
          "sha": "d0b14d26cd43e25affe643c732082969b92883aa",
          "message": "change"
        },
        {
          "sha": "67d8943f2ada0cc62a2c32aa196fd6195851e958",
          "message": "test"
        },
        {
          "sha": "22313d67470e8da835976f395030b233e59f4aa7",
          "message": "naming"
        },
        {
          "sha": "7286e08f7b6870890c069d454e3dd91286afc281",
          "message": "Merge remote-tracking branch 'upstream/main' into ps240109-considerOldMapIndexBufferRAMBytesUsed"
        },
        {
          "sha": "ea0aaf57cec715c1993fc79eb94a5fcab2a17b5f",
          "message": "Update docs/changelog/104122.yaml"
        },
        {
          "sha": "48c5bdd145802b3044fc6092ac3b0f845ccdcb51",
          "message": "better changelog"
        },
        {
          "sha": "4026e1b5d144f7b9d4ded7f7308bbee52f469b75",
          "message": "Merge remote-tracking branch 'upstream/main' into ps240109-considerOldMapIndexBufferRAMBytesUsed"
        }
      ],
      "comments": [
        {
          "user": "pxsalehi",
          "body": "This did not seem to be an accurate description and I've changed to be similar to what is mentioned in [IndexShard#getIndexBufferRAMBytesUsed](https://github.com/elastic/elasticsearch/blob/main/server/src/main/java/org/elasticsearch/index/shard/IndexShard.java#L2286) which is the only place using this value."
        },
        {
          "user": "henningandersen",
          "body": "I wonder if we should keep both wordings? I think the intention is that this amount of bytes would be freed by a refresh, that is the assumption of the indexing memory controller. Whereas with the new wording, it could be (mis) interpreted to also contain any static memory used by the index buffer."
        },
        {
          "user": "henningandersen",
          "body": "I like the reclaimable wording used further down in this PR too."
        },
        {
          "user": "henningandersen",
          "body": "I think we should not make this change, unless you have good arguments for it.\r\n\r\nThe indexing memory controller uses this to figure out whether to flush data and also the order of shards to flush. But the data in `old` is not relevant here, it is memory that is in the process of being released already."
        },
        {
          "user": "ywangd",
          "body": "On a second thought, I wonder whether we should stick to existing terminology and call this `refreshableRamBytes` instead of introducing a new term. We already have `getRefreshingBytes()`. "
        },
        {
          "user": "pxsalehi",
          "body": "`refreshableRamBytes` just by its own might be a bit vague, but what about `reclaimableRefreshRamBytes`?"
        },
        {
          "user": "pxsalehi",
          "body": "I have kept the original comment and just added some detail to it, to indicate that this includes memory being released as well, which is what the PR is adding."
        },
        {
          "user": "pxsalehi",
          "body": "@henningandersen this has been answered in the PR. Please take a look."
        }
      ],
      "body": "Separated from https://github.com/elastic/elasticsearch/pull/103979. Currently, `InternalEngine#getIndexBufferRAMBytesUsed` considers `versionMap.ramBytesUsedForRefresh()` as the refresh-related memory usage of the version map. However, `versionMap.ramBytesUsedForRefresh()` only considers the `current` map. This value (as part of `shard.getIndexBufferRAMBytesUsed()`) is used in the `IndexingMemoryController` as the current usage and then the amount of heap currently being freed (which for version map is the `old` map) is [subtracted from it](https://github.com/elastic/elasticsearch/blob/main/server/src/main/java/org/elasticsearch/indices/IndexingMemoryController.java#L372). I think, we should consider both `old` and `current` in `getIndexBufferRAMBytesUsed`.",
      "base_ref": "main",
      "head_ref": "ps240109-considerOldMapIndexBufferRAMBytesUsed",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104122/comments"
    },
    {
      "number": 104121,
      "title": "[ML] Rename ML memory metrics",
      "state": "closed",
      "created_at": "2024-01-09T10:41:04Z",
      "updated_at": "2024-01-09T13:25:55Z",
      "closed_at": "2024-01-09T13:25:52Z",
      "merged_at": "2024-01-09T13:25:51Z",
      "author": "droberts195",
      "labels": [
        ">non-issue",
        ":ml",
        "Team:ML",
        "v8.13.0"
      ],
      "comments_count": 1,
      "review_comments_count": 0,
      "additions": 4,
      "deletions": 4,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104121",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104121",
      "commits": [
        {
          "sha": "83cf5af9f4612f9dd77820790f430735876cbba8",
          "message": "[ML] Rename ML memory metrics\n\nThe way the ML memory metrics were renamed in #103388 does not\nmake sense. This PR adjusts the names to better options that\nstill pass the naming validation rules."
        },
        {
          "sha": "e22f824e9a7053324fa77580dde94470e9623fc2",
          "message": "Merge branch 'main' into rename_ml_metrics"
        }
      ],
      "comments": [],
      "body": "The way the ML memory metrics were renamed in #103388 does not make sense. This PR adjusts the names to better options that still pass the naming validation rules.",
      "base_ref": "main",
      "head_ref": "rename_ml_metrics",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104121/comments"
    },
    {
      "number": 104120,
      "title": "ESQL: Use Point geometry in tests",
      "state": "closed",
      "created_at": "2024-01-09T10:26:54Z",
      "updated_at": "2024-01-09T11:45:40Z",
      "closed_at": "2024-01-09T11:45:36Z",
      "merged_at": "2024-01-09T11:45:36Z",
      "author": "iverase",
      "labels": [
        ":Analytics/Geo",
        ">refactoring",
        "Team:Analytics",
        "v8.13.0"
      ],
      "comments_count": 1,
      "review_comments_count": 5,
      "additions": 64,
      "deletions": 161,
      "changed_files": 13,
      "url": "https://github.com/elastic/elasticsearch/pull/104120",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104120",
      "commits": [
        {
          "sha": "9562e4d53f9fbd5f4f4d2bf91a2e6336f7294e80",
          "message": "ESQL: Use Point geometry in tests"
        },
        {
          "sha": "be8dc8d195caa6b5a1cea24044d2ae7154a36c5d",
          "message": "Merge branch 'main' into isPointGeometry"
        }
      ],
      "comments": [
        {
          "user": "craigtaverner",
          "body": "I had intended to use these to replace a number of cases in Elasticsearch test code where we generate random GeoPoint (and cartesian Point), but was going to do that as a separate PR later. However, I can probably do that anyway, at low priority."
        },
        {
          "user": "craigtaverner",
          "body": "This is much nicer!"
        },
        {
          "user": "craigtaverner",
          "body": "I seem to remember that this exception wrapping was needed for some correct ESQL conversion of errors to null plus warnings. We needed explicitly to use IllegalArgumentException for that. Hopefully there are tests that will fail if this is not correctly done."
        },
        {
          "user": "iverase",
          "body": "I don't think we should have geo specific code in this class."
        },
        {
          "user": "iverase",
          "body": "If there is no test, there is no issue :)"
        }
      ],
      "body": "We are currently use the SpatialPoint abstraction on ES|QL geo test which makes it difficult to integrate with geo_shape. Therefore this PR changes the implementation to use Point geometries.",
      "base_ref": "main",
      "head_ref": "isPointGeometry",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104120/comments"
    },
    {
      "number": 104119,
      "title": "Fix security apm metric names",
      "state": "closed",
      "created_at": "2024-01-09T10:22:11Z",
      "updated_at": "2024-10-29T11:54:28Z",
      "closed_at": "2024-01-09T10:25:19Z",
      "merged_at": "2024-01-09T10:25:19Z",
      "author": "pgomulka",
      "labels": [
        ">non-issue",
        ":Core/Infra/Core",
        ":Security/Security",
        "Team:Core/Infra",
        "Team:Security",
        "v8.13.0"
      ],
      "comments_count": 2,
      "review_comments_count": 0,
      "additions": 2,
      "deletions": 2,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104119",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104119",
      "commits": [
        {
          "sha": "50a70eca7075207ea0326e45ddb5321a23a9d738",
          "message": "Fix security apm metric names"
        }
      ],
      "comments": [],
      "body": "fix the metric names not adhering to the validation rules",
      "base_ref": "main",
      "head_ref": "fix_metric_names",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104119/comments"
    },
    {
      "number": 104118,
      "title": "ESQL: add date_diff function",
      "state": "closed",
      "created_at": "2024-01-09T10:09:15Z",
      "updated_at": "2024-01-09T12:04:22Z",
      "closed_at": "2024-01-09T12:03:59Z",
      "merged_at": "2024-01-09T12:03:59Z",
      "author": "luigidellaquila",
      "labels": [
        ">enhancement",
        "Team:Analytics",
        "auto-merge-without-approval",
        ":Analytics/ES|QL",
        "v8.13.0"
      ],
      "comments_count": 4,
      "review_comments_count": 0,
      "additions": 924,
      "deletions": 2,
      "changed_files": 13,
      "url": "https://github.com/elastic/elasticsearch/pull/104118",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104118",
      "commits": [
        {
          "sha": "1753fcb3ad09c4143b9aac9eb26f8da050ce2a80",
          "message": "ESQL: add date_diff function"
        },
        {
          "sha": "d906a7c4c563eb4b6ee7aab332bc04b1b732eb99",
          "message": "Update docs/changelog/104118.yaml"
        },
        {
          "sha": "2c7f0a1625f1545ed5b3522dd802e9e32fca3783",
          "message": "Remove old changelog file"
        },
        {
          "sha": "e494db848e639e87a8a46881b184db894ad1ae07",
          "message": "Update docs/changelog/104118.yaml"
        },
        {
          "sha": "9821dd93e309a59132fee3dd4a6678aab2761009",
          "message": "Fix BWC tests"
        },
        {
          "sha": "0d663fc12c982e4b009b6bf85a991d27c8317616",
          "message": "Merge remote-tracking branch 'luigidellaquila/esql/date_diff' into esql/date_diff"
        },
        {
          "sha": "844e202c024e152bbaacc63ac884448bdc962417",
          "message": "BWC tests"
        }
      ],
      "comments": [],
      "body": "Same as https://github.com/elastic/elasticsearch/pull/103208\r\n\r\nFixes #101942\r\n\r\nWe had to revert it after a Checkstyle failure (strange it didn't pop up in the CI before merging)",
      "base_ref": "main",
      "head_ref": "esql/date_diff",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104118/comments"
    },
    {
      "number": 104117,
      "title": "remove unnecessary getters",
      "state": "closed",
      "created_at": "2024-01-09T10:01:27Z",
      "updated_at": "2024-01-18T10:13:03Z",
      "closed_at": "2024-01-18T10:12:59Z",
      "merged_at": "2024-01-18T10:12:59Z",
      "author": "idegtiarenko",
      "labels": [
        ">non-issue",
        ":Distributed Coordination/Allocation",
        "Team:Distributed (Obsolete)",
        "v8.13.0"
      ],
      "comments_count": 1,
      "review_comments_count": 0,
      "additions": 113,
      "deletions": 134,
      "changed_files": 18,
      "url": "https://github.com/elastic/elasticsearch/pull/104117",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104117",
      "commits": [
        {
          "sha": "ff437c71bab16e660ff44420e5c075ea9720f225",
          "message": "remove unnecessary getters"
        },
        {
          "sha": "b53c66dcd563a189c55ee4a26f1d6f9641974540",
          "message": "format"
        },
        {
          "sha": "3185a724ef3f4813b3a97ffac34b46922f76a31a",
          "message": "Merge branch 'main' into remove_unnecessary_getters\n\n# Conflicts:\n#\tserver/src/main/java/org/elasticsearch/cluster/routing/allocation/DiskThresholdMonitor.java"
        },
        {
          "sha": "f4f79b6c37b5ac45df0f86e7de2148611d03daf3",
          "message": "Merge branch 'main' into remove_unnecessary_getters"
        }
      ],
      "comments": [],
      "body": "This removes unnecessary getters from DiskUsage as they duplicated by record functionality.",
      "base_ref": "main",
      "head_ref": "remove_unnecessary_getters",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104117/comments"
    },
    {
      "number": 104116,
      "title": "[Test] Ensure indices are healthy enough before closing (#101023)",
      "state": "closed",
      "created_at": "2024-01-09T09:40:06Z",
      "updated_at": "2024-06-17T06:17:30Z",
      "closed_at": "2024-01-09T10:18:04Z",
      "merged_at": "2024-01-09T10:18:04Z",
      "author": "DaveCTurner",
      "labels": [
        ">test",
        ":Distributed Coordination/Snapshot/Restore",
        "backport",
        "auto-merge-without-approval",
        "v8.11.5"
      ],
      "comments_count": 0,
      "review_comments_count": 0,
      "additions": 24,
      "deletions": 9,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104116",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104116",
      "commits": [
        {
          "sha": "21c89f3a9310f4eea95ae643e43421566690d932",
          "message": "[Test] Ensure indices are healthy enough before closing (#101023)\n\nClosing unassigned indices is not cleanly handled. This change avoids\r\ndoing so in the test.\r\n\r\nResolves: #99516"
        }
      ],
      "comments": [],
      "body": "Closing unassigned indices is not cleanly handled. This change avoids\r\ndoing so in the test.\r\n\r\nBackport of #101023 to 8.11\r\nRelates #99516\r\nCloses #104072",
      "base_ref": "8.11",
      "head_ref": "2024/01/09/backport-101023-8.11",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104116/comments"
    },
    {
      "number": 104115,
      "title": "Remove `SLMGetExpiredSnapshotsAction extends ActionType`",
      "state": "closed",
      "created_at": "2024-01-09T09:35:41Z",
      "updated_at": "2024-06-17T06:17:39Z",
      "closed_at": "2024-01-09T16:08:54Z",
      "merged_at": "2024-01-09T16:08:54Z",
      "author": "DaveCTurner",
      "labels": [
        ">refactoring",
        ":Data Management/ILM+SLM",
        "Team:Data Management",
        "auto-merge-without-approval",
        "v8.13.0"
      ],
      "comments_count": 3,
      "review_comments_count": 0,
      "additions": 116,
      "deletions": 98,
      "changed_files": 5,
      "url": "https://github.com/elastic/elasticsearch/pull/104115",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104115",
      "commits": [
        {
          "sha": "393277652e44e63e20e2a9c9cf0cefeb74337867",
          "message": "Remove `SLMGetExpiredSnapshotsAction extends ActionType`\n\nAnother unnecessary `ActionType` subclass that can just be a plain\ninstance."
        },
        {
          "sha": "e38a8ce696b98dae9ac804b34c615ff129bf7e5e",
          "message": "Merge branch 'main' into 2024/01/09/SLMGetExpiredSnapshotsAction-extends-ActionType"
        },
        {
          "sha": "46b4c95ec051f69b57e72e1ab6b7ea7f5139912d",
          "message": "Rename"
        },
        {
          "sha": "0073d070b9fb37d4059d03cc1292c0bb3dd6b32f",
          "message": "Merge branch 'main' into 2024/01/09/SLMGetExpiredSnapshotsAction-extends-ActionType"
        }
      ],
      "comments": [],
      "body": "Another unnecessary `ActionType` subclass that can just be a plain\r\ninstance.",
      "base_ref": "main",
      "head_ref": "2024/01/09/SLMGetExpiredSnapshotsAction-extends-ActionType",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104115/comments"
    },
    {
      "number": 104114,
      "title": "Log rejection in SLMGetExpiredSnapshotsAction",
      "state": "closed",
      "created_at": "2024-01-09T09:27:11Z",
      "updated_at": "2024-06-17T06:16:42Z",
      "closed_at": "2024-01-09T12:29:04Z",
      "merged_at": "2024-01-09T12:29:04Z",
      "author": "DaveCTurner",
      "labels": [
        ">non-issue",
        ":Data Management/ILM+SLM",
        "Team:Data Management",
        "v8.13.0"
      ],
      "comments_count": 1,
      "review_comments_count": 1,
      "additions": 31,
      "deletions": 33,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104114",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104114",
      "commits": [
        {
          "sha": "242df4d1cf839f284d77eeb97330572814511216",
          "message": "Log rejection in SLMGetExpiredSnapshotsAction\n\nWe log failures encountered while computing the expired snapshots, but\nin principle we could fail to even execute that computation. This commit\nmoves the exception handling to the listener wrapped by the\n`ActionRunnable` so that we get a log message on all failure paths."
        },
        {
          "sha": "e3b556de776a726ba4abebe51c30ba93871d5364",
          "message": "Iter"
        }
      ],
      "comments": [
        {
          "user": "joegallo",
          "body": "Nice."
        }
      ],
      "body": "We log failures encountered while computing the expired snapshots, but\r\nin principle we could fail to even execute that computation. This commit\r\nmoves the exception handling to the listener wrapped by the\r\n`ActionRunnable` so that we get a log message on all failure paths.",
      "base_ref": "main",
      "head_ref": "2024/01/09/SLMGetExpiredSnapshotsAction-log-rejection",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104114/comments"
    },
    {
      "number": 104113,
      "title": "x-pack/plugin/apm-data: fix `@custom` pipeline support",
      "state": "closed",
      "created_at": "2024-01-09T08:28:59Z",
      "updated_at": "2024-01-10T08:52:22Z",
      "closed_at": "2024-01-10T08:51:59Z",
      "merged_at": "2024-01-10T08:51:59Z",
      "author": "axw",
      "labels": [
        ">bug",
        ":Data Management/Ingest Node",
        "Team:Data Management",
        "external-contributor",
        "auto-merge-without-approval",
        "v8.13.0"
      ],
      "comments_count": 3,
      "review_comments_count": 2,
      "additions": 159,
      "deletions": 3,
      "changed_files": 5,
      "url": "https://github.com/elastic/elasticsearch/pull/104113",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104113",
      "commits": [
        {
          "sha": "002f55719c795d1460df5f225955fd02a9dbb7f1",
          "message": "apm-data: fix @custom pipeline support\n\nChanges to match what Fleet does:\n\n- Instead of apm@custom, invoke global@custom\n- For service-specific data streams, remove the\n  service name from the dataset to form the pipeline\n  name. i.e. always metrics-apm.app@custom, never\n  metrics-apm.app.<service.name>@custom.\n\nAlso, don't invoke <data_stream.type>-<data_stream.dataset>@custom\ntwice if the dataset is \"apm\"."
        },
        {
          "sha": "bc79218fadfdab8986e2d3a090f89287929f6c60",
          "message": "Update docs/changelog/104113.yaml"
        },
        {
          "sha": "507898529da975e5e31e9436c28bf30e8b123857",
          "message": "Merge branch 'main' into apmdata-custom-ingest"
        }
      ],
      "comments": [
        {
          "user": "simitt",
          "body": "Should there also be a `null` check here, as in the pipelines below, and in which case would the dataset ever only be `apm`? "
        },
        {
          "user": "axw",
          "body": "Nope, the null check below is because there's a method call. Here we can just rely on the `?.` operator, which will compare `null != 'apm'` and do the right thing in case there's no `data_stream.dataset` field."
        }
      ],
      "body": "Changes to match what Fleet does:\r\n\r\n- Instead of `apm@custom`, invoke `global@custom`\r\n- For service-specific data streams, remove the service name from the dataset to form the pipeline name. i.e. always `metrics-apm.app@custom`, never `metrics-apm.app.<service.name>@custom`.\r\n\r\nAlso, don't invoke `<data_stream.type>-<data_stream.dataset>@custom` twice if the dataset is \"apm\".",
      "base_ref": "main",
      "head_ref": "apmdata-custom-ingest",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104113/comments"
    },
    {
      "number": 104112,
      "title": "Unmute DownsampleActionIT.testTsdbDataStreams() test",
      "state": "closed",
      "created_at": "2024-01-09T08:28:39Z",
      "updated_at": "2024-01-10T09:30:10Z",
      "closed_at": "2024-01-10T09:30:10Z",
      "merged_at": "2024-01-10T09:30:10Z",
      "author": "martijnvg",
      "labels": [
        ">test",
        "needs:triage",
        ":StorageEngine/Downsampling",
        "v8.13.0"
      ],
      "comments_count": 0,
      "review_comments_count": 0,
      "additions": 1,
      "deletions": 1,
      "changed_files": 2,
      "url": "https://github.com/elastic/elasticsearch/pull/104112",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104112",
      "commits": [
        {
          "sha": "1f7cc5e0cfb6c6e5ad41bf424d3db1ceabc1f2c6",
          "message": "Unmute DownsampleActionIT.testTsdbDataStreams() test"
        }
      ],
      "comments": [],
      "body": "- More logging was added this should give more insight in the next failure.\r\n- Increased the `time_series.poll_interval` setting.  The time when the `index.time_series.end_time` index setting gets updated by `UpdateTimeSeriesRangeService` is the likely cause of the test failure.",
      "base_ref": "main",
      "head_ref": "downsample/unmute_testTsdbDataStreams",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104112/comments"
    },
    {
      "number": 104109,
      "title": "[Test] Disable rare actions in RepoAnalysisFailureIT",
      "state": "closed",
      "created_at": "2024-01-09T03:30:48Z",
      "updated_at": "2024-01-23T23:25:55Z",
      "closed_at": "2024-01-23T23:25:55Z",
      "merged_at": "2024-01-23T23:25:55Z",
      "author": "ywangd",
      "labels": [
        ">test",
        ":Distributed Coordination/Snapshot/Restore",
        "Team:Distributed (Obsolete)",
        "v8.13.0"
      ],
      "comments_count": 5,
      "review_comments_count": 13,
      "additions": 9,
      "deletions": 0,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104109",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104109",
      "commits": [
        {
          "sha": "1791217d8d3762bba5d23f3b8c0ed1e5ea5f2a1f",
          "message": "[Test] More robust disruption for blob read\n\nWhen it is time to interupt and the actual content is null, we now send\nback a random byte instead of null so that the disruption happens at all\ntime.\n\nResolves: #103791"
        },
        {
          "sha": "4df837d31dc04ed9e7f761ff2bbf36b50993f06a",
          "message": "Revert \"[Test] More robust disruption for blob read\"\n\nThis reverts commit 1791217d8d3762bba5d23f3b8c0ed1e5ea5f2a1f."
        },
        {
          "sha": "ff32a725887899a254fc4ae1a6254ffb308fca57",
          "message": "Merge remote-tracking branch 'origin/main' into es-103791-testFailsOnChecksumMismatch"
        },
        {
          "sha": "081857dab4a2e0fde59b6838e45d1ac67421728e",
          "message": "[CI] Disable rare actions in RepoAnalysisFailureIT\n\nRare actions are disabled to improve CI stability.\n\nResolves: #104109"
        },
        {
          "sha": "bb20b272c589bb295ac26efae036a175a72e500a",
          "message": "expand comment"
        },
        {
          "sha": "b31d1bfd0f3abb2b2841c342d416bcdb4e403bc1",
          "message": "tweak"
        },
        {
          "sha": "0362b1a115c6ff150fdd3ebdb89f5883898517e6",
          "message": "adjust comment"
        }
      ],
      "comments": [
        {
          "user": "ywangd",
          "body": "I did not reproduce the failure so that this is a best-effort attempt to fix. It seems plausible that in edge cases the `countDown` may not reach to 0 (hence no disruption) if there are many null `actualContents` or it happens towards the end of total read requests."
        },
        {
          "user": "idegtiarenko",
          "body": "I think it is worth moving to a dedicated assertion prior this one."
        },
        {
          "user": "idegtiarenko",
          "body": "Why `actualContents` might be null? Also can it be 0 length?"
        },
        {
          "user": "ywangd",
          "body": "I just noticed it can be `null` but I am actually not sure why. I guess it might related to early read (read before write completes)? @DaveCTurner could you please help out here?\r\n\r\nI don't think length can be `0`. Otherwise we will see assertion error from `randomLongBetween(0, length - 1)`."
        },
        {
          "user": "ywangd",
          "body": "I thought about that. But it is not possible to assert `countDown` without excuting the analysis. But once the analysis is executed we need to check the error it throws first. So there is an order issue."
        },
        {
          "user": "ywangd",
          "body": "I think this is no longer needed because rare action is disabled. I left it untouched in case it might be more informational (it might be disabled for different reasons?)"
        },
        {
          "user": "DaveCTurner",
          "body": "Could you make this more specific than just \"CI instability\", describing how overwrites causes the test failure? I don't think early-reads will be an issue here?"
        },
        {
          "user": "ywangd",
          "body": "IIUC, early-reads are the reason why we consider checksums of both \"write\" and \"overwrite\" contents to be correct. This lieniency is what allows the issue to happen. Normal reads should always return the \"overwrite\" content and not having this issue. I expanded the comment as suggested. Please let me know if it reads right to you. Thanks!"
        },
        {
          "user": "DaveCTurner",
          "body": "Ah not quite, the overwrite happens in the \"read phase\", reads that are concurrent with the overwrite do not count as early:\r\n\r\nhttps://github.com/elastic/elasticsearch/blob/3031595d6a234c31abe9f7da74a86a72d30d0652/x-pack/plugin/snapshot-repo-test-kit/src/main/java/org/elasticsearch/repositories/blobstore/testkit/BlobAnalyzeAction.java#L106-L117"
        },
        {
          "user": "ywangd",
          "body": "I could some help to understand the code. I don't quite get how Read phase starts before Overwrite. Is this the relevant code?\r\n\r\nhttps://github.com/elastic/elasticsearch/blob/3031595d6a234c31abe9f7da74a86a72d30d0652/x-pack/plugin/snapshot-repo-test-kit/src/main/java/org/elasticsearch/repositories/blobstore/testkit/BlobAnalyzeAction.java#L282-L286\r\n\r\nIt seems to me that Ovewrite starts first with `writeRandomBlob` and the Read starts right before the last byte of the new content is written?"
        },
        {
          "user": "DaveCTurner",
          "body": "That sounds about right, but this isn't an early read."
        },
        {
          "user": "ywangd",
          "body": "OK I think I understand your point now. This regular read can also possibly return the old content because the overwrite is still ongoing and may not complete before the read returns. So yeah, this read also needs the lenient checksum comparison. I have adjusted the comment accordingly. "
        },
        {
          "user": "DaveCTurner",
          "body": "Yep that's right LGTM"
        }
      ],
      "body": "Rare actions are disabled to improve CI stability.\r\n\r\nResolves: #103791\r\n",
      "base_ref": "main",
      "head_ref": "es-103791-testFailsOnChecksumMismatch",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104109/comments"
    },
    {
      "number": 104346,
      "title": "[7x] upgrade aws client depdencies",
      "state": "closed",
      "created_at": "2024-01-12T23:18:39Z",
      "updated_at": "2024-01-22T15:52:36Z",
      "closed_at": "2024-01-22T15:52:13Z",
      "merged_at": "2024-01-22T15:52:13Z",
      "author": "jakelandis",
      "labels": [
        ":Distributed Coordination/Snapshot/Restore",
        ">upgrade",
        "Team:Distributed (Obsolete)",
        "auto-merge-without-approval",
        "v7.17.17"
      ],
      "comments_count": 2,
      "review_comments_count": 0,
      "additions": 25,
      "deletions": 14,
      "changed_files": 5,
      "url": "https://github.com/elastic/elasticsearch/pull/104346",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104346",
      "commits": [
        {
          "sha": "dfc7a80726fe76fcb9283de425931abc7ff6d019",
          "message": "[7x] upgrade aws client depdencies"
        },
        {
          "sha": "ee3581e2a95796c5aed2a91e43a4d9126034e16f",
          "message": "Update docs/changelog/104346.yaml"
        },
        {
          "sha": "a45aa9659d518175be9eca7daffdaca1bee00ad8",
          "message": "Merge branch '7.17' into 7x_upgrade_aws_java_sdk_s3"
        }
      ],
      "comments": [],
      "body": "This commit bumps the aws client dependencies from from 1.11.749 to 1.12.270. \r\nThis aligns the versions used in 7.17.x with main. \r\n\r\n(partial) backport of https://github.com/elastic/elasticsearch/pull/88932 ",
      "base_ref": "7.17",
      "head_ref": "7x_upgrade_aws_java_sdk_s3",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104346/comments"
    },
    {
      "number": 104345,
      "title": "Metrics: Agent settings prefix telemetry.agent preferred over tracing.apm.agent",
      "state": "closed",
      "created_at": "2024-01-12T23:07:48Z",
      "updated_at": "2024-01-22T18:53:37Z",
      "closed_at": "2024-01-22T18:53:37Z",
      "merged_at": "2024-01-22T18:53:37Z",
      "author": "stu-elastic",
      "labels": [
        ">non-issue",
        ":Core/Infra/Core",
        "Team:Core/Infra",
        "v8.13.0"
      ],
      "comments_count": 3,
      "review_comments_count": 20,
      "additions": 292,
      "deletions": 80,
      "changed_files": 10,
      "url": "https://github.com/elastic/elasticsearch/pull/104345",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104345",
      "commits": [
        {
          "sha": "f1df1cbeba2e8a4eab85506e587703f0e82ce984",
          "message": "Metrics: Agent settings prefix telemetry.agent deprecates tracing.apm.agent\n\nPrefer the telemetry.agent prefix for APM agent settings.\n\nAdd a fallback prefix to Affix settings to migrating between an old prefix\nand a new prefix."
        },
        {
          "sha": "ddb73406e7ce4fc461ff91971c4ecf08c67c94a4",
          "message": "remove extra files"
        },
        {
          "sha": "1dd031c3d4f26ba99c94987bff614fcf1793007d",
          "message": "Add telemetry as preferred prefix in APMAgentSettings, test correct prefix for unknown settings in APMAgentSettingsTests.testRejectForbiddenOrUnknownSettings"
        },
        {
          "sha": "45b3fae68590b7351d17a6a932941d1c1b5c5ecb",
          "message": "error if telemetry labels use both prefixes"
        },
        {
          "sha": "71c23f2d66c2f2aef7ec0cf61ee9d3cd1f0829ce",
          "message": "spotless on APMJvmOptionsTests"
        },
        {
          "sha": "36cb3d4b7f32bedb61680ceb7543b3e2b1dd4c5f",
          "message": "deprecate fallback prefix in Affix settings"
        },
        {
          "sha": "d5b01136532654cb62f2c60c803a2c841ea30464",
          "message": "cleanup repeated settings"
        },
        {
          "sha": "58dbb029471fc9e6055a28cca58c37b452be0ff6",
          "message": "spotless"
        },
        {
          "sha": "e1efd97943bfe8586f63ad3b0e01bdcf87422724",
          "message": "update AffixKey hascode and equals, do not deduplicate affix settings"
        },
        {
          "sha": "e7946be33ecc8c538d849733f5732f0ad13137f2",
          "message": "tracingAgentPrefix -> deprecatedTelemetryAgentPrefix"
        },
        {
          "sha": "8cbd40e1a124c1c9f085b7f08da70571a3e90cba",
          "message": "use namespace delegate factory for fallback prefix affixsetting"
        },
        {
          "sha": "d7d6266cf4009d61ab0b2ff0cbf649ceb8e9eaab",
          "message": "APMJvmOptions global labels error"
        },
        {
          "sha": "0663cd8380b3aac762eb3b9237fc2750aabd508f",
          "message": "Merge branch 'main' of github.com:elastic/elasticsearch into telemetry-agent-fallback"
        },
        {
          "sha": "0094df21cb48f8c9ba81218c25631a4131a723d7",
          "message": "prefer primary prefix to fallback in AffixSetting.getAsMap"
        },
        {
          "sha": "bb036362b038b3f1a7bc28f3bbe525ebfcb4c306",
          "message": "deprecation is not backwards compatible, removed from this PR"
        },
        {
          "sha": "a3499bd3b71b7b308db2a6da459bd19df4d29d8a",
          "message": "update references from tracing.apm.agent. to telemetry.agent."
        }
      ],
      "comments": [
        {
          "user": "pgomulka",
          "body": "why not asserting about the exact entry?"
        },
        {
          "user": "pgomulka",
          "body": "should we call deprecation logger when a fallback prefix was used?"
        },
        {
          "user": "mosche",
          "body": "Due to the nested structure of `global_labels` there could be cases as follows:\r\n- `telemetry.agent.global_labels.label1`\r\n- `tracing.apm.agent.global_labels.label2`\r\n\r\nThese two wouldn't be captured as duplicate above, but we would silently ignore `label2`.\r\nI would prefer if we always extract labels for both the new and legacy prefix and then \r\n- either union them \r\n- or forbid defining labels using the legacy prefix if we already found some for the new prefix."
        },
        {
          "user": "mosche",
          "body": "@pgomulka See below\r\n```\r\nList<String> labels = Arrays.stream(extracted.get(\"global_labels\").split(\",\")).toList();\r\n\r\nassertThat(labels, hasSize(3));\r\nassertThat(labels, containsInAnyOrder(\"deployment_name=APM Tracing\", \"organization_id=456\", \"deployment_id=123\"));\r\n```"
        },
        {
          "user": "mosche",
          "body": "How about collapsing these cases into above settings? I was briefly confused why repeating the same thing. It could also be worth adding a short comment for each. Consider it optional, this hasn't changed."
        },
        {
          "user": "mosche",
          "body": "Actually just noticing, it looks like you haven't pushed `APMAgentSettings`. The new version with fallback is currently only used in tests, explaining test failures in APMAgentSettingsTests.\r\n\r\nWith respect to https://github.com/elastic/elasticsearch/pull/104324#issuecomment-1889625348 I'm wondering if it would be beneficial if this was using the \"namespaced\" `delegateFactory` (BiFunction). \r\nThough, to be honest, at the same time I'm a little surprised about the behavior of namespace. It looks like the relative key (with the prefix removed), rather than a namespace (which I would have expected to be the prefix). But In any case, that's exactly what we are struggling / failing to extract in a robust way [here](https://github.com/elastic/elasticsearch/pull/104324/files#diff-8e5ca1315006cc00c58ef42d4bfc14f50b30d11567a845f8e551ecf3e52c830bL226-L227):\r\n\r\n```Java\r\n(qualifiedKey) -> {\r\n   final String[] parts = qualifiedKey.split(\"\\\\.\");\r\n   final String key = parts[parts.length - 1];\r\n   ... \r\n}\r\n```\r\n\r\nUsing the \"namespaced\" `delegateFactory`, this would simply be the following if i'm not mistaken.\r\n\r\n```Java\r\n(key, qualifiedKey) -> {\r\n   ... \r\n}"
        },
        {
          "user": "stu-elastic",
          "body": "I took the latter option.  It errors on mixed prefixes for labels."
        },
        {
          "user": "stu-elastic",
          "body": "Added."
        },
        {
          "user": "stu-elastic",
          "body": "I've done a minor refactoring to highlight the parts being tested."
        },
        {
          "user": "stu-elastic",
          "body": "It looks like that would work.  Would you like me to make the change in this PR?"
        },
        {
          "user": "mosche",
          "body": "Yes, that would be great 👍 \r\nBut just to make sure, the \"namespaced\" delegateFactory is working as expected? I was surprised to see it provided the relative key rather than a namespace, but I suppose my expectation is just wrong."
        },
        {
          "user": "pgomulka",
          "body": "containsInAnyOrder with 3 args is implying the size 3. but I think it looks"
        },
        {
          "user": "pgomulka",
          "body": "i wonder if it would be readable by naming those two `telemetryAgentPrefix` and `deprecatedTelemetryAgentPrefix`\r\n\r\n"
        },
        {
          "user": "stu-elastic",
          "body": "Changed."
        },
        {
          "user": "stu-elastic",
          "body": "It's just poorly named and documented, it working as expected.   The namespace is the key without the prefix and suffix."
        },
        {
          "user": "stu-elastic",
          "body": "> Yes, that would be great 👍\r\n\r\nDone."
        },
        {
          "user": "mosche",
          "body": "Thanks @stu-elastic "
        },
        {
          "user": "mosche",
          "body": ">>we should prefer the new prefix over the old prefix in getAsMap.\r\n>\r\n> That was a bit much for the implementation in getAsMap, duplicate settings are applied in any order already so I removed that part of the test.\r\n\r\n```java\r\nmap = setting.getAsMap(Settings.builder().put(\"foo.bar\", \"false\").put(\"bar.bar\", \"true\").build());\r\nassertEquals(1, map.size());\r\nassertFalse(map.get(\"bar\"));\r\n```\r\n\r\nI'm a bit worried about this not working, you might end up using a fallback rather than the correct setting value without noticing. Wouldn't something like below work, I haven't tested it. But the idea is, if the map already contains a value for namespace, only ever overwrite it the key is prefixed with the default prefix and not the fallback one.\r\n\r\n```java\r\npublic Map<String, T> getAsMap(Settings settings) {\r\n    Map<String, T> map = new HashMap<>();\r\n    matchStream(settings).distinct().forEach(key -> {\r\n        String namespace = this.key.getNamespace(key);\r\n        if (map.containsKey(namespace) == false || key.startsWith(this.key.prefix)) {\r\n            Setting<T> concreteSetting = getConcreteSetting(namespace, key);\r\n            map.put(namespace, concreteSetting.get(settings));\r\n        }\r\n    });\r\n    return Collections.unmodifiableMap(map);\r\n}\r\n```"
        },
        {
          "user": "stu-elastic",
          "body": "I was under the mistaken impression that in normal settings the primary was not preferred, so it didn't make sense to add that behavior here.  I confirmed in the case of a primary setting and it's fallback, the primary is preferred.  Added a test to that effect.\r\n\r\nI've also made AffixSettings match that behavior and restored the quoted test case."
        },
        {
          "user": "stu-elastic",
          "body": "I'm moving this and related changes to another PR because it would be a backwards incompatible change."
        }
      ],
      "body": "Prefer the telemetry.agent prefix for APM agent settings.\r\n\r\nAdd a fallback prefix to Affix settings to migrating between an old prefix and a new prefix.",
      "base_ref": "main",
      "head_ref": "telemetry-agent-fallback",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104345/comments"
    },
    {
      "number": 104341,
      "title": "[8.12] Data streams fix failure store delete (#104281)",
      "state": "closed",
      "created_at": "2024-01-12T20:37:23Z",
      "updated_at": "2024-01-12T21:36:00Z",
      "closed_at": "2024-01-12T21:35:38Z",
      "merged_at": "2024-01-12T21:35:38Z",
      "author": "jbaiera",
      "labels": [
        "backport",
        "auto-merge-without-approval",
        "v8.12.1"
      ],
      "comments_count": 0,
      "review_comments_count": 0,
      "additions": 161,
      "deletions": 5,
      "changed_files": 6,
      "url": "https://github.com/elastic/elasticsearch/pull/104341",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104341",
      "commits": [
        {
          "sha": "53f12e3711f58c075b5141d4fbc3fb7d301cb1a7",
          "message": "Data streams fix failure store delete (#104281)\n\nThis PR adds the any failure store indices to the list of indices to be deleted when deleting a data stream.\n\n(cherry picked from commit 2a79d781eb13da6d132ca4c15f1edf6a38e21a93)"
        }
      ],
      "comments": [],
      "body": "# Backport\n\nThis will backport the following commits from `main` to `8.12`:\n - [Data streams fix failure store delete (#104281)](https://github.com/elastic/elasticsearch/pull/104281)\n\n<!--- Backport version: 8.4.2 -->\n\n### Questions ?\nPlease refer to the [Backport tool documentation](https://github.com/sqren/backport)",
      "base_ref": "8.12",
      "head_ref": "backport/8.12/pr-104281",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104341/comments"
    },
    {
      "number": 104340,
      "title": "ESQL: Fix error test on windows",
      "state": "closed",
      "created_at": "2024-01-12T19:52:46Z",
      "updated_at": "2024-01-12T20:36:37Z",
      "closed_at": "2024-01-12T20:36:14Z",
      "merged_at": "2024-01-12T20:36:14Z",
      "author": "nik9000",
      "labels": [
        ">test",
        "Team:Analytics",
        "auto-merge-without-approval",
        ":Analytics/ES|QL",
        "v8.13.0"
      ],
      "comments_count": 1,
      "review_comments_count": 0,
      "additions": 11,
      "deletions": 3,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104340",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104340",
      "commits": [
        {
          "sha": "7076056001beb347058c7f9d99350962d3d98013",
          "message": "ESQL: Fix error test on windows\n\nThis fixes a test on windows - the error message contains the platform\nlocal line endings because it comes from the jvm.\n\nCloses #104296"
        }
      ],
      "comments": [],
      "body": "This fixes a test on windows - the error message contains the platform local line endings because it comes from the jvm.\r\n\r\nCloses #104296\r\nCloses #104245\r\n",
      "base_ref": "main",
      "head_ref": "fix_windows_test",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104340/comments"
    },
    {
      "number": 104338,
      "title": "Move more XContent parser code that is test-only into test module",
      "state": "closed",
      "created_at": "2024-01-12T19:09:21Z",
      "updated_at": "2024-11-30T10:08:31Z",
      "closed_at": "2024-01-16T12:14:13Z",
      "merged_at": "2024-01-16T12:14:13Z",
      "author": "original-brownbear",
      "labels": [
        ">non-issue",
        ":Core/Infra/Core",
        "Team:Core/Infra",
        "v8.13.0"
      ],
      "comments_count": 2,
      "review_comments_count": 0,
      "additions": 403,
      "deletions": 438,
      "changed_files": 19,
      "url": "https://github.com/elastic/elasticsearch/pull/104338",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104338",
      "commits": [
        {
          "sha": "30f4ea4a0b1b0d8ac2ab10b5215929ef6145edb9",
          "message": "Move more XContent parser code that is test-only into test module\n\nJust another round of #104261"
        }
      ],
      "comments": [],
      "body": "Just another round of #104261\r\n",
      "base_ref": "main",
      "head_ref": "move-test-parsing-code-2",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104338/comments"
    },
    {
      "number": 104336,
      "title": "Fix request timeout in HeapAttack tests",
      "state": "closed",
      "created_at": "2024-01-12T18:42:35Z",
      "updated_at": "2024-01-22T19:27:41Z",
      "closed_at": "2024-01-22T19:27:40Z",
      "merged_at": "2024-01-22T19:27:40Z",
      "author": "dnhatn",
      "labels": [
        ">test",
        "Team:Analytics",
        ":Analytics/ES|QL",
        "v8.13.0"
      ],
      "comments_count": 3,
      "review_comments_count": 0,
      "additions": 5,
      "deletions": 1,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104336",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104336",
      "commits": [
        {
          "sha": "83181834ecf2ace279b4ab8ad277a621b65db906",
          "message": "Fix request timeout in HeapAttack tests"
        }
      ],
      "comments": [],
      "body": "I noticed we're using 5 minutes for both query timeout and triggering the out-of-memory action in heap attack tests. This means when we're generating the heap dump, and some ESQL tasks might get canceled because the connection was disconnected. This PR increases the query timeout to 6 minutes instead.",
      "base_ref": "main",
      "head_ref": "fix-timeout-heap-attack",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104336/comments"
    },
    {
      "number": 104335,
      "title": "Bump min target page size to 32",
      "state": "closed",
      "created_at": "2024-01-12T18:40:10Z",
      "updated_at": "2024-01-17T12:16:11Z",
      "closed_at": "2024-01-13T23:03:00Z",
      "merged_at": "2024-01-13T23:03:00Z",
      "author": "dnhatn",
      "labels": [
        ">non-issue",
        "Team:Analytics",
        ":Analytics/ES|QL",
        "v8.12.1",
        "v8.13.0"
      ],
      "comments_count": 4,
      "review_comments_count": 0,
      "additions": 1,
      "deletions": 1,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104335",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104335",
      "commits": [
        {
          "sha": "bd2ffd055e8dde61a00902561b3f5773e3acc258",
          "message": "Bump min target page size to 32"
        }
      ],
      "comments": [],
      "body": "The current MIN_TARGET_PAGE_SIZE is set to 10, which may be too low. I think most of the optimizations in ESQL are focused on processing rows rather than pages. The overhead of processing many pages can be significant in some cases. For instance, the execution time of `HeapAttackIT#testGroupOnManyLongs` decreased from 52 seconds to 28 seconds when I increased MIN_TARGET_PAGE_SIZE from 10 to 32. Therefore, I propose raising the MIN_TARGET_PAGE_SIZE to 32.",
      "base_ref": "main",
      "head_ref": "bump-min-target-page-size",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104335/comments"
    },
    {
      "number": 104334,
      "title": "[ML] Automatically download the ELSER model when PUT in _inference",
      "state": "closed",
      "created_at": "2024-01-12T17:58:45Z",
      "updated_at": "2024-01-15T15:06:28Z",
      "closed_at": "2024-01-15T15:06:27Z",
      "merged_at": "2024-01-15T15:06:26Z",
      "author": "maxhniebergall",
      "labels": [
        ">enhancement",
        ":ml",
        "Team:ML",
        "v8.13.0"
      ],
      "comments_count": 2,
      "review_comments_count": 6,
      "additions": 61,
      "deletions": 45,
      "changed_files": 6,
      "url": "https://github.com/elastic/elasticsearch/pull/104334",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104334",
      "commits": [
        {
          "sha": "3f87ec162fb876ba8ba3d938a083fa0d5c240b1c",
          "message": "Automatically download ELSER when PUT in _inference"
        },
        {
          "sha": "ebc04730f0e4eef28fb89ade532bb45110c7e693",
          "message": "Revert \"Disable elser download test case in inf IT (#104271)\"\n\nThis reverts commit 9bc579f942fad29b2136717a741476bddb36b995."
        },
        {
          "sha": "dad9f0ca236a3400d2b8279c3762ffd7353f59ee",
          "message": "cleanup todo"
        },
        {
          "sha": "de99f0da593adc234e0c6c75dda6614c6658b05f",
          "message": "add IT tests"
        },
        {
          "sha": "0ef827c0f6e6a9aaebea92bfa78be0224d258f2b",
          "message": "Update docs/changelog/104334.yaml"
        },
        {
          "sha": "0cb595be3502a310208fc06638c63f3648bb81ee",
          "message": "Switched to INFERENCE_ORIGIN"
        },
        {
          "sha": "971c49aca40ed4456b633c7e5de49fd713977441",
          "message": "disable IT"
        }
      ],
      "comments": [
        {
          "user": "maxhniebergall",
          "body": "Once this IT passes on this this build I am going to add another commit disabling this IT, to avoid causing excessive network traffic and cost in future CI builds."
        },
        {
          "user": "jonathan-buttner",
          "body": "Should we leverage the `start` method that's in this interface for downloading the model instead of adding a new one?"
        },
        {
          "user": "jonathan-buttner",
          "body": "Hmm I wonder if we should be using a new origin for inference instead of `ML_ORIGIN` 🤔 @davidkyle ? Or do we need this as `ML_ORIGIN` so it gets the permissions correct?"
        },
        {
          "user": "maxhniebergall",
          "body": "I didn't really consider using a different origin. I'll have to look into what the impact of the origin is. Thanks for pointing this out!"
        },
        {
          "user": "maxhniebergall",
          "body": "I think we could use `start`, although I am unsure about the benefit. I suppose it would decrease the complexity of the interface, and it is a bit weird that `startModel` in `TransportPutInferenceModelAction` calls two methods in the InferenceService. However, I think that this also represents the underlying business logic (that start is both starting an inference model and putting a trained model definition). I think that creating a second method in the interface has the benefit of splitting up these two objectives into separate methods in the `ElserMlNodeService` (and other `InferenceService`s), which represent the two API calls we are making to support the business logic. \r\n\r\nSo, I can't really imagine why it would be better to avoid creating another method in this interface, but please let me know if I missed it!"
        },
        {
          "user": "maxhniebergall",
          "body": "Looks like there is already an inference origin, so I switched to using that. Thanks @jonathan-buttner !"
        }
      ],
      "body": "Closes https://github.com/elastic/ml-team/issues/1098\r\n\r\nPreviously, to be able to use the ELSER model, there were two steps: 1. Put (download) ELSER using the trained models API; 2. Put the ELSER model using the _inference API.\r\n\r\nWith this change, these two steps are combined, so now to install ELSER in _inference, all one has to do is PUT the ELSER model using the _inference API.\r\n\r\nFor example, \r\n```\r\ncurl -X PUT \"localhost:9200/_inference/sparse_embedding/<model_id>\" \\\r\n-H 'Content-Type: application/json' -u <user>:<password> \\\r\n-d'  \r\n{\r\n  \"service\": \"elser\",\r\n  \"service_settings\": {\r\n    \"num_allocations\": 1,\r\n    \"num_threads\": 1\r\n  },\r\n  \"task_settings\": {}\r\n}\r\n'\r\n```",
      "base_ref": "main",
      "head_ref": "_infDownloadElserOnPut",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104334/comments"
    },
    {
      "number": 104333,
      "title": "ESQL: Fix old version tests",
      "state": "closed",
      "created_at": "2024-01-12T17:48:05Z",
      "updated_at": "2024-01-12T20:38:15Z",
      "closed_at": "2024-01-12T20:37:52Z",
      "merged_at": "2024-01-12T20:37:52Z",
      "author": "nik9000",
      "labels": [
        ">test",
        "Team:Analytics",
        "auto-merge-without-approval",
        "test-full-bwc",
        ":Analytics/ES|QL",
        "v8.13.0"
      ],
      "comments_count": 2,
      "review_comments_count": 0,
      "additions": 5,
      "deletions": 6,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104333",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104333",
      "commits": [
        {
          "sha": "c081909fb39fe5f1752bb67cf2d120b7d556b765",
          "message": "ESQL: Fix old version tests\n\nThis weakens an assertion in the ESQL tests rolling upgrade tests so\nthey'll pass against older versions of Elasticsearch. Apparently the\nwarning message changed. There isn't a good reason to be so strict about\nthe assertion anyway."
        },
        {
          "sha": "c34dbe87e61a91e135cdbe10be52d75f92e8b322",
          "message": "Checkstyle"
        }
      ],
      "comments": [],
      "body": "This weakens an assertion in the ESQL tests rolling upgrade tests so they'll pass against older versions of Elasticsearch. Apparently the warning message changed. There isn't a good reason to be so strict about the assertion anyway.\r\n\r\nCloses #104101",
      "base_ref": "main",
      "head_ref": "esql_weaken_assetion",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104333/comments"
    },
    {
      "number": 104332,
      "title": "Increase stateless refresh thread pool",
      "state": "closed",
      "created_at": "2024-01-12T17:12:53Z",
      "updated_at": "2024-01-13T11:50:02Z",
      "closed_at": "2024-01-13T11:49:40Z",
      "merged_at": "2024-01-13T11:49:40Z",
      "author": "henningandersen",
      "labels": [
        ">non-issue",
        ":Distributed Indexing/CRUD",
        "Team:Distributed (Obsolete)",
        "auto-merge-without-approval",
        "v8.13.0"
      ],
      "comments_count": 3,
      "review_comments_count": 0,
      "additions": 4,
      "deletions": 1,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104332",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104332",
      "commits": [
        {
          "sha": "956e1a5185ede36f6e1dd4241cb5ba769fe9dc83",
          "message": "Increase stateless refresh thread pool\n\nThe refresh thread pool is sized too aggressively low for current\nstate of stateless, so increasing it.\n\nRelates ES-7633 and ES-7631"
        },
        {
          "sha": "fcb4ef507e3c9f1626ca846cc7ac5d271c82d162",
          "message": "Merge branch 'main' into increase_stateless_refresh_thread_pool"
        }
      ],
      "comments": [],
      "body": "The refresh thread pool is sized too aggressively low for current state of stateless, so increasing it.\r\n\r\nRelates ES-7633 and ES-7631\r\n",
      "base_ref": "main",
      "head_ref": "increase_stateless_refresh_thread_pool",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104332/comments"
    },
    {
      "number": 104331,
      "title": "Simplify the int8_hnsw MIP yaml test",
      "state": "closed",
      "created_at": "2024-01-12T17:04:45Z",
      "updated_at": "2024-01-16T13:08:57Z",
      "closed_at": "2024-01-16T13:07:12Z",
      "merged_at": "2024-01-16T13:07:12Z",
      "author": "benwtrent",
      "labels": [
        ">test",
        "Team:Search",
        "auto-merge-without-approval",
        ":Search Relevance/Vectors",
        "v8.12.1",
        "v8.13.0"
      ],
      "comments_count": 3,
      "review_comments_count": 0,
      "additions": 5,
      "deletions": 5,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104331",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104331",
      "commits": [
        {
          "sha": "cceea441529e401d53ce678da6a289745ec439be",
          "message": "Simplify the int8_hnsw MIP yaml test"
        },
        {
          "sha": "73afb9f69e22c27a2a6bc096d416a7148a81daf0",
          "message": "Merge branch 'main' into test/simplify-byte-mip-test"
        }
      ],
      "comments": [],
      "body": "The test is unnecessarily complicated with its vectors. This simplifies the vectors and the test. We mainly care about extreme weirdness & server level failures.\r\n\r\ncloses: https://github.com/elastic/elasticsearch/issues/104297",
      "base_ref": "main",
      "head_ref": "test/simplify-byte-mip-test",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104331/comments"
    },
    {
      "number": 104330,
      "title": "ESQL: Run async tests more carefully",
      "state": "closed",
      "created_at": "2024-01-12T17:01:03Z",
      "updated_at": "2024-01-12T17:48:52Z",
      "closed_at": "2024-01-12T17:48:29Z",
      "merged_at": "2024-01-12T17:48:29Z",
      "author": "nik9000",
      "labels": [
        ">test",
        "Team:Analytics",
        "auto-merge-without-approval",
        ":Analytics/ES|QL",
        "v8.13.0"
      ],
      "comments_count": 2,
      "review_comments_count": 0,
      "additions": 133,
      "deletions": 79,
      "changed_files": 4,
      "url": "https://github.com/elastic/elasticsearch/pull/104330",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104330",
      "commits": [
        {
          "sha": "793c76f3e3a073399b4ed329cd0b351af60684c5",
          "message": "ESQL: Run async tests more carefully\n\nThe ESQL async tests run the ESQL yaml tests two extra time - once under\nthe async endpoint with the `wait_for_completion_timeout` set to a long\ntime and *again* with `wait_for_completion_timeout` set to a short time,\nexpecting to receive an `id` for the query.\n\nThat second way is tricky! Even with a `0ms` timeout sometimes the\nrequest will complete. That's great, but the tests didn't realize that\nwas possible. And it's tricky to get the warnings and `catch` sections\nworking properly with that. This reworks how we run these commands,\nbreaking apart the way we run a single API and running it as two, taking\ninto account that the \"start the query\" request could also complete the\nquery.\n\nCloses #104294"
        }
      ],
      "comments": [],
      "body": "The ESQL async tests run the ESQL yaml tests two extra time - once under the async endpoint with the `wait_for_completion_timeout` set to a long time and *again* with `wait_for_completion_timeout` set to a short time, expecting to receive an `id` for the query.\r\n\r\nThat second way is tricky! Even with a `0ms` timeout sometimes the request will complete. That's great, but the tests didn't realize that was possible. And it's tricky to get the warnings and `catch` sections working properly with that. This reworks how we run these commands, breaking apart the way we run a single API and running it as two, taking into account that the \"start the query\" request could also complete the query.\r\n\r\nCloses #104294\r\n",
      "base_ref": "main",
      "head_ref": "esql_asynk_run_harder",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104330/comments"
    },
    {
      "number": 104329,
      "title": "Re-enabling MultiNodesStatsTests.testMultipleNodes()",
      "state": "closed",
      "created_at": "2024-01-12T16:54:20Z",
      "updated_at": "2024-01-12T17:40:59Z",
      "closed_at": "2024-01-12T17:40:55Z",
      "merged_at": "2024-01-12T17:40:55Z",
      "author": "masseyke",
      "labels": [
        ">test",
        ":Data Management/Monitoring",
        "Team:Data Management",
        "v8.13.0"
      ],
      "comments_count": 1,
      "review_comments_count": 0,
      "additions": 0,
      "deletions": 1,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104329",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104329",
      "commits": [
        {
          "sha": "3ad57a3ba245306fc2bc6eba5cec41037234828c",
          "message": "Re-enabling MultiNodesStatsTests.testMultipleNodes()"
        }
      ],
      "comments": [],
      "body": "Re-enabling MultiNodesStatsTests.testMultipleNodes() to see if it is still broken.\r\nThis was reported broken in #96374.",
      "base_ref": "main",
      "head_ref": "re-enable-MultiNodesStatsTests",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104329/comments"
    },
    {
      "number": 104328,
      "title": "Fail fast on heap attack tests",
      "state": "closed",
      "created_at": "2024-01-12T16:42:41Z",
      "updated_at": "2024-01-12T17:39:33Z",
      "closed_at": "2024-01-12T17:39:32Z",
      "merged_at": "2024-01-12T17:39:32Z",
      "author": "dnhatn",
      "labels": [
        ">test",
        "Team:Analytics",
        ":Analytics/ES|QL",
        "v8.13.0"
      ],
      "comments_count": 2,
      "review_comments_count": 0,
      "additions": 8,
      "deletions": 1,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104328",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104328",
      "commits": [
        {
          "sha": "516d9fda504e6d43409e495328eae0d8b075a1b3",
          "message": "Fail fast on heap attack tests"
        }
      ],
      "comments": [],
      "body": "We can't use `assume` after a test fails.",
      "base_ref": "main",
      "head_ref": "heap-attack-abort",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104328/comments"
    },
    {
      "number": 104327,
      "title": "ES|QL Minor async query doc parameter clarification",
      "state": "closed",
      "created_at": "2024-01-12T16:29:12Z",
      "updated_at": "2024-01-12T16:50:18Z",
      "closed_at": "2024-01-12T16:50:00Z",
      "merged_at": "2024-01-12T16:50:00Z",
      "author": "ChrisHegarty",
      "labels": [
        ">docs",
        "Team:Docs",
        "Team:Analytics",
        "auto-merge-without-approval",
        ":Analytics/ES|QL",
        "v8.13.0"
      ],
      "comments_count": 3,
      "review_comments_count": 0,
      "additions": 3,
      "deletions": 2,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104327",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104327",
      "commits": [
        {
          "sha": "5f6ece8ecf042c4795cf001eced370087af58bbf",
          "message": "ES|QL Minor async query doc parameter clarification"
        }
      ],
      "comments": [],
      "body": "This commit adds a minor clarification to an ESQL async query doc parameter.",
      "base_ref": "main",
      "head_ref": "esql_async_doc_up",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104327/comments"
    },
    {
      "number": 104326,
      "title": "Add docs for v8.12.0 release",
      "state": "closed",
      "created_at": "2024-01-12T16:14:00Z",
      "updated_at": "2024-01-15T09:55:28Z",
      "closed_at": "2024-01-15T09:55:28Z",
      "merged_at": "2024-01-15T09:55:28Z",
      "author": "brianseeders",
      "labels": [
        ">docs",
        "Team:Docs",
        "v8.12.0",
        "v8.12.1"
      ],
      "comments_count": 2,
      "review_comments_count": 0,
      "additions": 464,
      "deletions": 7,
      "changed_files": 3,
      "url": "https://github.com/elastic/elasticsearch/pull/104326",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104326",
      "commits": [
        {
          "sha": "7a37756b862e9b06dde92a7cae09632b44e02b29",
          "message": "Add docs for v8.12.0 release"
        }
      ],
      "comments": [],
      "body": null,
      "base_ref": "8.12",
      "head_ref": "8-12-0-docs",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104326/comments"
    },
    {
      "number": 104325,
      "title": "[8.12] [LTR] FieldValueExtrator - Checking if fetched values is empty. (#104314)",
      "state": "closed",
      "created_at": "2024-01-12T16:12:50Z",
      "updated_at": "2024-01-12T19:05:36Z",
      "closed_at": "2024-01-12T19:05:36Z",
      "merged_at": "2024-01-12T19:05:36Z",
      "author": "afoucret",
      "labels": [
        ">bug",
        ":ml",
        "backport",
        "Team:ML",
        "v8.12.1"
      ],
      "comments_count": 0,
      "review_comments_count": 0,
      "additions": 9,
      "deletions": 1,
      "changed_files": 2,
      "url": "https://github.com/elastic/elasticsearch/pull/104325",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104325",
      "commits": [
        {
          "sha": "dc5b0ea1754b225402b3e9ea497597d2a08eac83",
          "message": "[LTR] FieldValueExtrator - Checking if fetched values is empty. (#104314)\n\n* Checking if fetched values is empty.\r\n* Update docs/changelog/104314.yaml"
        }
      ],
      "comments": [],
      "body": "Backports the following commits to 8.12:\n - [LTR] FieldValueExtrator - Checking if fetched values is empty. (#104314)",
      "base_ref": "8.12",
      "head_ref": "backport/8.12/pr-104314",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104325/comments"
    },
    {
      "number": 104324,
      "title": "Fix enabling / disabling of APM agent \"recording\" in APMAgentSettings",
      "state": "closed",
      "created_at": "2024-01-12T16:05:46Z",
      "updated_at": "2024-01-30T16:29:25Z",
      "closed_at": "2024-01-30T16:29:22Z",
      "merged_at": "2024-01-30T16:29:22Z",
      "author": "mosche",
      "labels": [
        ">non-issue",
        ":Core/Infra/Core",
        "Team:Core/Infra",
        "v8.13.0"
      ],
      "comments_count": 5,
      "review_comments_count": 6,
      "additions": 173,
      "deletions": 48,
      "changed_files": 3,
      "url": "https://github.com/elastic/elasticsearch/pull/104324",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104324",
      "commits": [
        {
          "sha": "ecbde4153298bc060ac19db8144bb1661099f770",
          "message": "More robust key extraction in APMAgentSettings for allow-list validation"
        },
        {
          "sha": "ab27b81f6a694e14e537ce4922ea647ea3ecd2e8",
          "message": "Fix APM agent 'recording' in APMAgentSettings"
        },
        {
          "sha": "2cb305be3347d77af36cb04e23695bc35f111a23",
          "message": "Merge branch 'main' into apm_settings_key_extraction"
        },
        {
          "sha": "33094d4c3adfa9f0b991c748824c83f8cc74a335",
          "message": "test setting update consumers"
        },
        {
          "sha": "d6b9541ef229ec3777cd776fd4eb92ba5359b02b",
          "message": "Merge branch 'main' into apm_settings_key_extraction / remove randomness"
        }
      ],
      "comments": [
        {
          "user": "mosche",
          "body": "This looks also problematic, `recording` was previously only enabled if tracing was when initially synching the agent settings.\r\n\r\nThat makes me wonder if this is needed at all? It looks like the update consumers are triggering at startup which would then typically enable `recording` (assuming metrics are generally enabled). "
        },
        {
          "user": "pgomulka",
          "body": "I wonder what 'by now' in this todo means?\r\ndo you think we can clarify this todo?"
        },
        {
          "user": "stu-elastic",
          "body": "No need for randomness.  We can test both cases."
        },
        {
          "user": "stu-elastic",
          "body": "No need for randomness.  We can test both cases."
        },
        {
          "user": "stu-elastic",
          "body": "No need for randomness.  We can test both cases."
        },
        {
          "user": "stu-elastic",
          "body": "No need for randomness.  We can test both cases."
        }
      ],
      "body": "Both tracing and metrics require `recording` to be enabled to work. However, if enabling tracing without enabling metrics, `recording` is not enabled. Similarly, if disabling metrics, `recording` may only be disabled if tracing is not enabled.",
      "base_ref": "main",
      "head_ref": "apm_settings_key_extraction",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104324/comments"
    },
    {
      "number": 104322,
      "title": "Ensure profiling is single threaded and that knn profiling occurs in the same threadpool",
      "state": "closed",
      "created_at": "2024-01-12T15:25:49Z",
      "updated_at": "2024-04-30T12:06:12Z",
      "closed_at": "2024-04-30T07:27:19Z",
      "merged_at": null,
      "author": "benwtrent",
      "labels": [
        ">bug",
        "Team:Search",
        ":Search Relevance/Vectors"
      ],
      "comments_count": 7,
      "review_comments_count": 11,
      "additions": 127,
      "deletions": 20,
      "changed_files": 8,
      "url": "https://github.com/elastic/elasticsearch/pull/104322",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104322",
      "commits": [
        {
          "sha": "584656484784cf4e39f39bbc65690cd10e3805be",
          "message": "Ensure profiling is single threaded and that knn profiling occurs in the same threadpool"
        },
        {
          "sha": "1037cb20f509a881e69b412e4a8f3a49b78cc772",
          "message": "Update docs/changelog/104322.yaml"
        },
        {
          "sha": "542dc4181f7f641ef981d3e9599ba32b369c6aba",
          "message": "Merge remote-tracking branch 'upstream/main' into bugfix/correct-profiling-knn"
        },
        {
          "sha": "d40ab10c711100a7556f37139ea7ee99d578b059",
          "message": "updating conditions and tests"
        },
        {
          "sha": "08e471a6c36014991649336ce9839f0e6de1c2f1",
          "message": "Merge remote-tracking branch 'upstream/main' into bugfix/correct-profiling-knn"
        },
        {
          "sha": "4dcc75b0036e37318944c783b912992def54e70f",
          "message": "Merge branch 'main' into bugfix/correct-profiling-knn"
        },
        {
          "sha": "a934c1698a6170a9cb23ab20ab47d83fa87c6f57",
          "message": "Merge branch 'main' into bugfix/correct-profiling-knn"
        },
        {
          "sha": "09f0ae4de2c061b7234ab1b13a874b55f1a92e01",
          "message": "Merge branch 'bugfix/correct-profiling-knn' of github.com:benwtrent/elasticsearch into bugfix/correct-profiling-knn"
        },
        {
          "sha": "9774ab5bfdd4fd23b939efa3efbcc20dd70d7215",
          "message": "adding tests for queryphase knn prefiltering"
        }
      ],
      "comments": [
        {
          "user": "javanna",
          "body": "Should we update SearchSourceBuilder#supportsParallelCollection to not return false when profile is set as it's handled separately?"
        },
        {
          "user": "javanna",
          "body": "Collections.singletonList?"
        },
        {
          "user": "javanna",
          "body": "The TaskExecutor has a protection mechanism to verify that a certain operation being run on the executor is not further parallelized using additional threads from the executor, as that could cause a deadlock. With that I am not sure whether calling search directly on the executor would work. Wouldn't the search offload the single slice execution to the executor, and wouldn't that fail?"
        },
        {
          "user": "benwtrent",
          "body": "> Wouldn't the search offload the single slice execution to the executor, and wouldn't that fail?\r\n\r\nI honestly don't know. The tests pass with this change. What can we test to ensure this is protected?\r\n\r\nI am unfamiliar with all the task parallelism code. I just know the way it currently is (profiling & parallel) is broken :)"
        },
        {
          "user": "javanna",
          "body": "The protection mechanism works fine and that is what prevents issues: https://github.com/apache/lucene/blob/main/lucene/core/src/java/org/apache/lucene/search/TaskExecutor.java#L147 . If it detects that we are already within the executor , we won't fork further but rather call `Runnable#run` on the current thread. Sorry about the confusion, we are good."
        },
        {
          "user": "benwtrent",
          "body": "Yeah, I can specify that and update the tests."
        },
        {
          "user": "javanna",
          "body": "would there be a way to add a more specific test that reproduces this concurrency issue? Perhaps a unit test?"
        },
        {
          "user": "benwtrent",
          "body": "I mean, sure, there are always ways. I don't see the benefit if this test reliably fails. \r\n\r\nDo you have an idea of an existing test suite or class where this would belong?"
        },
        {
          "user": "javanna",
          "body": "I am not entirely sure about the interaction between the profiler and the search, but possibly it would fit into ContextIndexSearcherTests, or a new test suite that verifies the profiler behaviour. I would prefer that rather than relying on an IT test to randomly fail, for a known issue."
        },
        {
          "user": "javanna",
          "body": "I opened #108041 with a fix to the profile code. I also understood why your stop-gap fixed worked: by using the search workers executor to execute the search, you implicitly disable parallelism, because task executor will detect that it's already within the executor itself and will refuse to parallelize further."
        },
        {
          "user": "benwtrent",
          "body": "thank you @javanna !!!"
        }
      ],
      "body": "Profiling is not threadsafe. We cannot access any profiling objects between threads. \r\n\r\nConsequently, when profiling we should only execute over a single slice. \r\n\r\nAdditionally, knn rewriting will not only create weights, but will also execute queries. Splitting this between two threadpools is problematic for profiling. This commit forces knn rewrite to be on the search worker thread when profiling is enabled.\r\n\r\n\r\ncloses: https://github.com/elastic/elasticsearch/issues/104235\r\ncloses: https://github.com/elastic/elasticsearch/issues/104131",
      "base_ref": "main",
      "head_ref": "bugfix/correct-profiling-knn",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104322/comments"
    },
    {
      "number": 104321,
      "title": "[TEST] Use delta for comparing doubles in testEncodeDecodeNoSaturation",
      "state": "closed",
      "created_at": "2024-01-12T15:25:38Z",
      "updated_at": "2024-01-15T13:23:22Z",
      "closed_at": "2024-01-15T13:22:59Z",
      "merged_at": "2024-01-15T13:22:59Z",
      "author": "kkrik-es",
      "labels": [
        ">test",
        "auto-merge-without-approval",
        ":StorageEngine/TSDB",
        "v8.13.0",
        "Team:StorageEngine"
      ],
      "comments_count": 1,
      "review_comments_count": 0,
      "additions": 5,
      "deletions": 1,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104321",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104321",
      "commits": [
        {
          "sha": "287a50e3e5b2ba3bd977d1a2a965e0e845ce2b77",
          "message": "Use delta for comparing doubles in testEncodeDecodeNoSaturation"
        }
      ],
      "comments": [],
      "body": "Fixes #103924\r\n",
      "base_ref": "main",
      "head_ref": "fix/103924",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104321/comments"
    },
    {
      "number": 104320,
      "title": "Hot-reloadable LDAP bind password",
      "state": "closed",
      "created_at": "2024-01-12T15:18:58Z",
      "updated_at": "2024-02-02T09:37:02Z",
      "closed_at": "2024-02-02T09:37:02Z",
      "merged_at": "2024-02-02T09:37:02Z",
      "author": "slobodanadamovic",
      "labels": [
        ">enhancement",
        ":Security/Authentication",
        "Team:Security",
        "v8.13.0"
      ],
      "comments_count": 2,
      "review_comments_count": 9,
      "additions": 531,
      "deletions": 94,
      "changed_files": 17,
      "url": "https://github.com/elastic/elasticsearch/pull/104320",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104320",
      "commits": [
        {
          "sha": "d68d349a487dbcc03ed3df8557dc3ceee8b8dbf4",
          "message": "Support for reloading LDAP bind password"
        },
        {
          "sha": "73d3478875b6ce86ac905ba14ae6ec0121d30671",
          "message": "Merge branch 'main' of github.com:elastic/elasticsearch into sa-reload-secure-bind-password"
        },
        {
          "sha": "ae60cc28b4eda0ac216e98ccc4f95412af3ee929",
          "message": "Remove unused method"
        },
        {
          "sha": "36ba32fcd911f48f7590f8f02354e48350f368c0",
          "message": "Actually reload LDAP realm bind password"
        },
        {
          "sha": "1d92bcdfcc649e989ed13b080a0c162292aaa11c",
          "message": "Update docs/changelog/104320.yaml"
        },
        {
          "sha": "e5781f1fb26f0c050765c0b141d06786a645b772",
          "message": "Fix failing tests"
        },
        {
          "sha": "1a6494ea04add488ceba6ea59690c7725a5c4168",
          "message": "Remove unused method."
        },
        {
          "sha": "cd6133f6d2efd5165e40253c434a70bc350796d4",
          "message": "Spotless"
        },
        {
          "sha": "1761a5953adda532e8dc5bdda4f2eb5017fe92cd",
          "message": "Merge branch 'main' of github.com:elastic/elasticsearch into sa-reload-secure-bind-password"
        },
        {
          "sha": "84b44b9dbccd9695cd055cb926b4547bcf3e72c7",
          "message": "Test bind password reload without connection pool"
        },
        {
          "sha": "908c81c907df853bfa6fb0ed16ef58a65166cb51",
          "message": "Merge branch 'main' of github.com:elastic/elasticsearch into sa-reload-secure-bind-password"
        },
        {
          "sha": "c6844c034d6fd66d91f6593b32b7dcbe317dc1a3",
          "message": "Randomize secure and legacy bind password setting"
        },
        {
          "sha": "ac5332c7270da1d03d8f85105388ed977d1f6eb1",
          "message": "Properly check randomize legacy and secure bind password test"
        },
        {
          "sha": "38f8df8e39cf65858a7d6a3ecb5887db8fe4b909",
          "message": "Merge branch 'main' of github.com:elastic/elasticsearch into sa-reload-secure-bind-password"
        },
        {
          "sha": "2297ef768bd00eedeb6b454dc2f7205368f53167",
          "message": "Test reloading with connection pool enabled"
        },
        {
          "sha": "03d1dbf70ba8caf2e63c427731050d94a8205b6d",
          "message": "Merge branch 'main' of github.com:elastic/elasticsearch into sa-reload-secure-bind-password"
        },
        {
          "sha": "cfecd8359c2650494261f263a0eaa9255e7f098a",
          "message": "Clean up tests."
        },
        {
          "sha": "f337a1575f2d0bc59ce6e6affdbedb038c178977",
          "message": "Merge branch 'main' of github.com:elastic/elasticsearch into sa-reload-secure-bind-password"
        },
        {
          "sha": "d93d9b6508952463632bda3edc157443f5e63547",
          "message": "Merge branch 'main' of github.com:elastic/elasticsearch into sa-reload-secure-bind-password"
        },
        {
          "sha": "03f14edb37288d2e9ed06f38c86b0746201376c7",
          "message": "Merge branch 'main' of github.com:elastic/elasticsearch into sa-reload-secure-bind-password"
        },
        {
          "sha": "e6376e5fb36cb6fe5b8d6804ec014ededdcddf1d",
          "message": "Refactor ADAuthenticator to always use session's bind request"
        },
        {
          "sha": "923cb415adf324b2cb7cdcbe7a3e601a9f0d9c2b",
          "message": "Merge branch 'main' of github.com:elastic/elasticsearch into sa-reload-secure-bind-password"
        },
        {
          "sha": "7533e583a6fc506e4975372f1f2271fb18da473d",
          "message": "Test realoading of AD's bind password without connection pool"
        },
        {
          "sha": "32647fe3fb4495849b1918bf7125c5b2f31873f5",
          "message": "Merge branch 'main' of github.com:elastic/elasticsearch into sa-reload-secure-bind-password"
        },
        {
          "sha": "39e0c847684a184da63d82fb868facbf9c97f7c0",
          "message": "Merge branch 'main' of github.com:elastic/elasticsearch into sa-reload-secure-bind-password"
        },
        {
          "sha": "3965b776e1cd7646c8e5e9b10ec3223fe430da09",
          "message": "Randomize bind password reload to test with pool enabled and disabled"
        },
        {
          "sha": "a844199f37ed161fb0491764e1537ded52be2467",
          "message": "Merge branch 'main' of github.com:elastic/elasticsearch into sa-reload-secure-bind-password"
        },
        {
          "sha": "0ba83e04994226e0cbbf662cb8d1e24826f170fc",
          "message": "No need for health check during reload."
        },
        {
          "sha": "d47530709b0336d96be97f715d9937ccdf80712d",
          "message": "Merge branch 'main' of github.com:elastic/elasticsearch into sa-reload-secure-bind-password"
        },
        {
          "sha": "22e770e03e9d2d9559eec3e86644f58980a6f206",
          "message": "Merge branch 'main' of github.com:elastic/elasticsearch into sa-reload-secure-bind-password"
        }
      ],
      "comments": [
        {
          "user": "slobodanadamovic",
          "body": "Moved this logic to `JwtRealm`."
        },
        {
          "user": "slobodanadamovic",
          "body": "This change was inspired by Tim's [POC](https://github.com/tvernum/elasticsearch/commit/reload-ldap-password). I liked the generic approach and decided to adopt it. "
        },
        {
          "user": "jakelandis",
          "body": "Can you clarify this abit ? i.e. Settings used at the time of reloading. If there were updates to the secure settings those updates will be present in this Settings object. "
        },
        {
          "user": "jakelandis",
          "body": "I am not a fan of interfaces that require explicity handling of overly generic checked exceptions. Is there any way to make this a more specific exception, or just omit the checked requirement entirely ?"
        },
        {
          "user": "jakelandis",
          "body": "thanks for the addtional comments. "
        },
        {
          "user": "slobodanadamovic",
          "body": "My intention was to be consistent with higher-level `ReloadablePlugin` interface. But on a second thought it is not necessary to replicate it here. I will remove it."
        },
        {
          "user": "slobodanadamovic",
          "body": "Will try to clarify it. I was mostly trying to echo the same description that `ReloadablePlugin` has, but by omitting some details it ended up not making sense. \r\nIn the end the fact is that the settings passed to the reloadable component will contain all node settings (loaded during node startup) merged with the decrypted secure ones (loaded from the keystore). The secure settings can only be accessed during the method call (should not be stored or attempted to be accessed async), because once the reload method finishes, the `KeyStoreWrapper` will be closed, which will wipe all secure settings."
        },
        {
          "user": "tvernum",
          "body": "In my earlier POC, I attempted to reload the connection pool by triggering the health check.\r\nThat means that any connections that are using a now-expired password would get dropped and replaced.\r\n\r\nIs it intentional that you don't do that?\r\n\r\nhttps://github.com/tvernum/elasticsearch/blob/6b5a97cf08eaed4158f9a7a7a9a7a60cf52b9b6c/x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/ldap/PoolingSessionFactory.java#L150"
        },
        {
          "user": "slobodanadamovic",
          "body": "Yes, this is intentional. The health check does not help in detecting connections whose bind credentials have changed. Once connection is bound, it remains open even if the bind password changes. Both default health check implementation `LDAPConnectionPoolHealthCheck` (used when nothing is configured) and `GetEntryLDAPConnectionPoolHealthCheck` ([used](https://github.com/elastic/elasticsearch/blob/b94b11aad5d749d949887eb476b89598c091fea8/x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/ldap/PoolingSessionFactory.java#L190) when health check is enabled) are doing only simple checks - none of these health checks can detect the password change. The only way to detect that bind password has changed is to attempt to re-bind again.\r\n\r\nBased on my testing, after reloading bind password, the already bound connection can still be used for searching and authenticating users. The catch is that it can only be used once. This is because we call [maybeForkThenBindAndRevert](https://github.com/elastic/elasticsearch/blob/b94b11aad5d749d949887eb476b89598c091fea8/x-pack/plugin/security/src/main/java/org/elasticsearch/xpack/security/authc/ldap/LdapUserSearchSessionFactory.java#L92) which under the hood calls `LDAPConnectionPool#bindAndRevertAuthentication`. The `bindAndRevertAuthentication` will attempt to re-bind (revert) the connection's authentication using old bind credentials which will fail and connection will be terminated. Polling new connections from the connection pool will use the new bind credentials. \r\n\r\nI've also spent some time unit testing this today and running local integration tests against OpenLDAP server. The behaviour seems consistent.\r\n"
        }
      ],
      "body": "This PR enables `secure_bind_password` [secure setting](https://www.elastic.co/guide/en/elasticsearch/reference/current/secure-settings.html) to be updated without the need to restart nodes. \r\n\r\nThe `secure_bind_password` must be updated on the AD/LDAP server, then changed in the Elasticsearch [keystore](https://www.elastic.co/guide/en/elasticsearch/reference/current/elasticsearch-keystore.html) and reloaded via  [`reload_secure_settings` API](https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster-nodes-reload-secure-settings.html).\r\n\r\nNote: This PR does not support _grace period_ where both old and new passwords are active.\r\n",
      "base_ref": "main",
      "head_ref": "sa-reload-secure-bind-password",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104320/comments"
    },
    {
      "number": 104319,
      "title": "Validate queries against ES in unit tests",
      "state": "open",
      "created_at": "2024-01-12T14:50:40Z",
      "updated_at": "2024-06-13T11:03:57Z",
      "closed_at": null,
      "merged_at": null,
      "author": "alex-spies",
      "labels": [],
      "comments_count": 0,
      "review_comments_count": 0,
      "additions": 398,
      "deletions": 195,
      "changed_files": 4,
      "url": "https://github.com/elastic/elasticsearch/pull/104319",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104319",
      "commits": [
        {
          "sha": "0a9408c179560fe8339da6acebda305703958ddd",
          "message": "Move query execution from CsvTests into own class"
        },
        {
          "sha": "20cddff7a737fee44450c1d04db7e09abc9afead",
          "message": "Improve TestQueryExecutor"
        },
        {
          "sha": "3c0155e85bcc94451602585eafc23e55b4a725cd",
          "message": "Begin building test with Lucene index"
        },
        {
          "sha": "088809a096029e138d9fe788aa6db0c2b8b50ac0",
          "message": "Add unit test for out of range comparisons"
        },
        {
          "sha": "c51b7ee78b4e8c7e1d648e207d1c865ecc07540f",
          "message": "Merge remote-tracking branch 'upstream/main' into optimizer-tests-with-query-validation"
        },
        {
          "sha": "2d2170edae073d075013369c3ece6c9bdcc7de30",
          "message": "Spotless"
        }
      ],
      "comments": [],
      "body": "A small exercise to see whether we can run ES|QL queries from unit or csv tests against actual Lucene indices.\r\n\r\n* Factor out query execution code from `CsvTests` into the new class `TestQueryRunner`.\r\n* Add `OptimizerExecutabilityTests` which executes an optimized plan against a Lucene index, using the actual `EsPhysicalOperationProviders`.\r\n\r\nThe latter uses `MapperServiceTestCase.withLuceneIndex` together with the fact that executing an ES|QL query requires\r\n* the optimized query,\r\n* physical operation providers, built from a search execution context (that's what we need `withLuceneIndex` for), and\r\n* index and enrich resolutions.",
      "base_ref": "main",
      "head_ref": "optimizer-tests-with-query-validation",
      "mergeable": false,
      "mergeable_state": "dirty",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104319/comments"
    },
    {
      "number": 104318,
      "title": "[LTR] Rescore window size improvements.",
      "state": "closed",
      "created_at": "2024-01-12T14:49:42Z",
      "updated_at": "2024-01-17T07:12:15Z",
      "closed_at": "2024-01-17T07:10:49Z",
      "merged_at": "2024-01-17T07:10:49Z",
      "author": "afoucret",
      "labels": [
        ">non-issue",
        ":ml",
        "Team:ML",
        "auto-backport",
        "v8.12.1",
        "v8.13.0"
      ],
      "comments_count": 5,
      "review_comments_count": 19,
      "additions": 105,
      "deletions": 99,
      "changed_files": 4,
      "url": "https://github.com/elastic/elasticsearch/pull/104318",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104318",
      "commits": [
        {
          "sha": "fc13fd687838473850349f3355223da3903607d9",
          "message": "LTR rescore window size improvements."
        },
        {
          "sha": "b9d6d4c49c3fdd5160ac756936ca03fe6667d08d",
          "message": "Update x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/inference/ltr/LearningToRankRescorer.java\n\nCo-authored-by: Kathleen DeRusso <kathleen.derusso@elastic.co>"
        },
        {
          "sha": "7e13d4b7cbb342b63457ad9fc2ed55648f6e9451",
          "message": "Merge branch 'main' into ltr-min-window-size"
        },
        {
          "sha": "aa3a8d516db5e312fecc9024089905281dbb0b22",
          "message": "Revert default window size for LTR rescorer."
        },
        {
          "sha": "d0ae761bcbb0b04fc74a82dcb93a918f644df090",
          "message": "Refactor tests for the rescorer builder."
        },
        {
          "sha": "96cc80e129d4d9f27866b0ecb0c7f79edec0cf94",
          "message": "Make window_size required for learning_to_rank rescorer."
        },
        {
          "sha": "df3610fad4c29a35ecd4f70ef2b5fcd23a0a6ad6",
          "message": "Adding an assertion to check window size is set when it is required."
        },
        {
          "sha": "bb338812ef5533f1f8a6038d9fc469c2a0c5da7c",
          "message": "Merge branch 'elastic:main' into ltr-min-window-size"
        },
        {
          "sha": "3917790a33337795bd2dc3f8b5e6255deeaf1b05",
          "message": "Fixed forgotten test case."
        },
        {
          "sha": "1e535a5f6606977cde53bfda4d998abf5901564e",
          "message": "lint"
        },
        {
          "sha": "c3155bd729fa75790f6bf81ccdb760885e14a9ab",
          "message": "lint"
        },
        {
          "sha": "0c281b192806089f2f9a7e0b094b4d499d840cc7",
          "message": "Merge branch 'main' into ltr-min-window-size"
        },
        {
          "sha": "ac40abe9c7c218d192c2ce2d48761ed642c1e3dd",
          "message": "Merge branch 'elastic:main' into ltr-min-window-size"
        },
        {
          "sha": "f280acb5774c51951df9c717dd1e59b8b112d91d",
          "message": "Merge branch 'elastic:main' into ltr-min-window-size"
        }
      ],
      "comments": [
        {
          "user": "jimczi",
          "body": "`1000` is too big imo. I'd prefer that we document the limitation clearly for pagination since no matter what value we pick here this will be surprising for users."
        },
        {
          "user": "jimczi",
          "body": "++, this err on the safe side. "
        },
        {
          "user": "afoucret",
          "body": "I find it a little bit embarrassing if someone that play with the feature for testing have an exception when setting the size of the query to 20.\r\n\r\nBeyond this, I think `10` is very low for the LTR use case and a more typical `window_size` will be between `100` and `1000`. @joshdevins [mentioned](https://docs.google.com/document/d/1MLc93jcCRnmfwIB_81B_c_5J0jmFxtzC_IsLGtWi8ec/edit?pli=1&disco=AAAA_87zlLY), `1000` as very common value in a comment of the project doc.\r\n\r\nWDYT about `100` as a tradeoff? @joshdevins any thoughts?\r\n\r\n"
        },
        {
          "user": "joshdevins",
          "body": "1k is pretty standard practice. These models are very fast, nothing like NLP models, so 1k is usually quite reasonable. If we want to be cautious about a default, 100 would be the absolute smallest I would suggest. 200 or 500 would definitely be better. We can also do some quick benchmarking on a dataset to get some basic performance values if that helps us make a decision."
        },
        {
          "user": "jimczi",
          "body": "IMO the ideal would be to make this parameter non-optional"
        },
        {
          "user": "kderusso",
          "body": "```suggestion\r\n                \"Rescore window is too small and should be at least the value of from + size but was [\" + rescoreContext.getWindowSize() + \"]\"\r\n```"
        },
        {
          "user": "kderusso",
          "body": "Question, how hard would it be to make this default to `min(window_size, 1000)`? "
        },
        {
          "user": "kderusso",
          "body": "I think we could omit this? "
        },
        {
          "user": "kderusso",
          "body": "We may want to make this more specific, such as something like `randomNonNegativeInt()` or `randomIntBetween(1, 10000)`"
        },
        {
          "user": "kderusso",
          "body": "Should we have additional tests with invalid window size data? "
        },
        {
          "user": "joshdevins",
          "body": "> make this parameter non-optional\r\n\r\n@jimczi ++ As a first release as well this makes sense and we can always make it optional later.\r\n\r\n> how hard would it be to\r\n\r\n@kderusso You mean make the actual window size `min(window_size, 1000)`? I think this would lead to unexpected behaviour. Just making this parameter required is definitely the clearest thing we can do. If you're doing LTR, you really do need to pick your window size."
        },
        {
          "user": "afoucret",
          "body": "These tests are already present in the code for rescorer as it is shared concerns."
        },
        {
          "user": "afoucret",
          "body": "This tests have been reverted because we changed our approach and are now checking for the window size during the parsing instead of doing it during context building."
        },
        {
          "user": "afoucret",
          "body": "Do you mean, omitting the `@Override`?"
        },
        {
          "user": "afoucret",
          "body": "The new version of the code make the window_size required for LTR rescorer.\r\nI let you review this new version."
        },
        {
          "user": "kderusso",
          "body": "Yes that's what I meant - but it looks like my comment may be out of date 😄 "
        },
        {
          "user": "jimczi",
          "body": "This check could be done in `innerBuildContext` since we have all the information we need to take a decision?"
        },
        {
          "user": "afoucret",
          "body": "My first intent was to add it there but the SearchExecutionContext does not have the information on the sizing.\r\nIt is part of the SearchContext which is not available in the innerBuildContext."
        },
        {
          "user": "jimczi",
          "body": "Ah right, sorry."
        }
      ],
      "body": "Comparing scores from the first pass and from the LTR model is like comparing apples and oranges.\r\n\r\nUsing a window size lower than the search request size (actually lower than the topDocs), will cause strange effects with rescored and non-rescored doc being sorted using non comparable scores.\r\n\r\nI tried an approach that tweak the list to ensure the rescored docs always stays on top of non-rescored docs but it does work only with one shard...\r\n\r\nThis PR implements a more radical remediation and the rescorer now raise an error if the window score if lower that the topDocs. It means we will always rescore the entire topDocs.\r\n\r\nAlso because, the default window size is `10`, which is very low and could prevent users to use pagination. \r\nThe PR set a different default window_size for learning_to_rank rescorer. I propose to use `1000`",
      "base_ref": "main",
      "head_ref": "ltr-min-window-size",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104318/comments"
    },
    {
      "number": 104317,
      "title": "Temporarily tolerate tracing.apm.agent.global_labels.XYZ settings",
      "state": "closed",
      "created_at": "2024-01-12T14:31:05Z",
      "updated_at": "2024-01-12T15:16:31Z",
      "closed_at": "2024-01-12T15:16:27Z",
      "merged_at": "2024-01-12T15:16:27Z",
      "author": "mosche",
      "labels": [
        ">non-issue",
        ":Core/Infra/Core",
        "Team:Core/Infra",
        "v8.13.0"
      ],
      "comments_count": 1,
      "review_comments_count": 1,
      "additions": 1,
      "deletions": 1,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104317",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104317",
      "commits": [
        {
          "sha": "1dc2ecba69f54ebda08bfe4f68c8ad3b69530c32",
          "message": "Temporarily tolerate tracing.apm.agent.global_labels.XYZ settings"
        }
      ],
      "comments": [
        {
          "user": "mosche",
          "body": "Doh, `key` extraction is also somehow flawed here, it only ever includes the last part :/"
        }
      ],
      "body": "Temporarily tolerate tracing.apm.agent.global_labels.XYZ settings in APMAgentSettings.",
      "base_ref": "main",
      "head_ref": "apm_tolerate_global_labels_fixed",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104317/comments"
    },
    {
      "number": 104315,
      "title": "Temporarily tolerate tracing.apm.agent.global_labels.XYZ settings ",
      "state": "closed",
      "created_at": "2024-01-12T12:51:26Z",
      "updated_at": "2024-01-12T13:56:36Z",
      "closed_at": "2024-01-12T13:56:33Z",
      "merged_at": "2024-01-12T13:56:33Z",
      "author": "mosche",
      "labels": [
        ">non-issue",
        ":Core/Infra/Core",
        "Team:Core/Infra",
        "v8.13.0"
      ],
      "comments_count": 1,
      "review_comments_count": 0,
      "additions": 4,
      "deletions": 0,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104315",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104315",
      "commits": [
        {
          "sha": "1f4d4e87a824217098fda688e8df38150f86b6e6",
          "message": "Temporarily tolerate tracing.apm.agent.global_labels.XYZ as these are currently not correctly filtered out."
        },
        {
          "sha": "0f0397aaa32d7263e17fec9f475ab46033fb5e0e",
          "message": "spotless"
        }
      ],
      "comments": [],
      "body": "Temporarily tolerate `tracing.apm.agent.global_labels.XYZ` settings in `APMAgentSettings`.\r\nIt looks like these are currently not correctly filtered out in APMJvmOptions. I'll keep investigating the root cause.\r\n",
      "base_ref": "main",
      "head_ref": "apm_tolerate_global_labels",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104315/comments"
    },
    {
      "number": 104314,
      "title": "[LTR] FieldValueExtrator - Checking if fetched values is empty.",
      "state": "closed",
      "created_at": "2024-01-12T12:14:45Z",
      "updated_at": "2024-01-12T16:13:00Z",
      "closed_at": "2024-01-12T16:11:05Z",
      "merged_at": "2024-01-12T16:11:05Z",
      "author": "afoucret",
      "labels": [
        ">bug",
        ":ml",
        "Team:ML",
        "auto-backport",
        "v8.12.1",
        "v8.13.0"
      ],
      "comments_count": 3,
      "review_comments_count": 0,
      "additions": 9,
      "deletions": 1,
      "changed_files": 2,
      "url": "https://github.com/elastic/elasticsearch/pull/104314",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104314",
      "commits": [
        {
          "sha": "dd8da5558622ea719263d204c41ce2b5ac8860e9",
          "message": "Checking if fetched values is empty."
        },
        {
          "sha": "24f040d711c44b34d3905bc865cb6bcccfcac4c9",
          "message": "Update docs/changelog/104314.yaml"
        }
      ],
      "comments": [],
      "body": "The FieldValueExtractor does not check for the presence of a value, which can sometimes cause 500 errors when using the rescorer on a sparse field.",
      "base_ref": "main",
      "head_ref": "ltr-fix-field-value-extraction",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104314/comments"
    },
    {
      "number": 104313,
      "title": "[LTR] Use default_score in query feature rescorer.",
      "state": "closed",
      "created_at": "2024-01-12T12:04:53Z",
      "updated_at": "2024-01-16T08:54:46Z",
      "closed_at": "2024-01-16T08:54:45Z",
      "merged_at": null,
      "author": "afoucret",
      "labels": [
        ">non-issue",
        ":ml",
        "auto-backport",
        "v8.12.1",
        "v8.13.0"
      ],
      "comments_count": 1,
      "review_comments_count": 0,
      "additions": 30,
      "deletions": 15,
      "changed_files": 3,
      "url": "https://github.com/elastic/elasticsearch/pull/104313",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104313",
      "commits": [
        {
          "sha": "bedd2591b4cba58c7ca50d73f2b97d4676be43ec",
          "message": "Ensure the default score of the query feature extractor is used when not matching a document."
        }
      ],
      "comments": [],
      "body": "Ensure the default score of the query feature extractor is used when not matching a document. ",
      "base_ref": "main",
      "head_ref": "ltr-query-feature-extraction-default-score",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104313/comments"
    },
    {
      "number": 104312,
      "title": "ESQL: Update moved `heap-attack` QA suite's build group",
      "state": "closed",
      "created_at": "2024-01-12T11:55:49Z",
      "updated_at": "2024-01-12T16:23:42Z",
      "closed_at": "2024-01-12T16:23:40Z",
      "merged_at": "2024-01-12T16:23:40Z",
      "author": "bpintea",
      "labels": [
        ">non-issue",
        "Team:Analytics",
        ":Analytics/ES|QL",
        "v8.13.0"
      ],
      "comments_count": 4,
      "review_comments_count": 0,
      "additions": 1,
      "deletions": 0,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104312",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104312",
      "commits": [
        {
          "sha": "4587af4d5629554bdd51e8e81fc18c1e974c09c5",
          "message": "Update moved `heap-attack` QA suite's build group\n\nThis updates ESQL's `heap-attack` QA suite's build group."
        }
      ],
      "comments": [],
      "body": "This updates ESQL's `heap-attack` QA suite's build group.\r\n\r\nRelated: #104133, #104107.",
      "base_ref": "main",
      "head_ref": "esql/qa_ha_stateless",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104312/comments"
    },
    {
      "number": 104311,
      "title": "Make constant `threadPool.relativeTimeInMillisSupplier()`",
      "state": "closed",
      "created_at": "2024-01-12T11:55:01Z",
      "updated_at": "2024-07-30T16:26:41Z",
      "closed_at": "2024-07-30T16:26:18Z",
      "merged_at": "2024-07-30T16:26:18Z",
      "author": "DaveCTurner",
      "labels": [
        ">non-issue",
        "auto-merge-without-approval",
        "Team:Search Foundations",
        "v8.16.0",
        ":Search Foundations/Search"
      ],
      "comments_count": 3,
      "review_comments_count": 2,
      "additions": 116,
      "deletions": 45,
      "changed_files": 25,
      "url": "https://github.com/elastic/elasticsearch/pull/104311",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104311",
      "commits": [
        {
          "sha": "4d3af5d0aad789914ba56685d2a6f89e44a31407",
          "message": "Make constant `threadPool.relativeTimeInMillisSupplier()`\n\nWe use `ThreadPool#relativeTimeInMillis` as part of a timeout mechanism\nin many places, often using a method reference so we can pass in a\n`LongSupplier` for ease of testing. Each time we create a new method\nreference we're opening ourselves up to potential cache misses on the\nway through to the two volatile reads needed to actually return the\nvalue in production. We're also only caching the nanos value so we must\ndo some arithmethic to convert it to millis each time.\n\nThis commit introduces a constant `LongSupplier` for use in all these\nplaces, saving the allocation and the indirection through different\nobjects, and caching the millis value alongside the nanos to avoid the\narithmetic on each call."
        },
        {
          "sha": "8e8bd0678933b45b5c7d28c3a87656ee4c4e5652",
          "message": "Merge branch 'main' into 2024/01/12/threadPool.relativeTimeInMillisSupplier"
        },
        {
          "sha": "453a1435e5e8391f7746c057e7d4bca92356d40d",
          "message": "Revert"
        },
        {
          "sha": "a857751b2babbe9604674e093f8580be4ba5dc5e",
          "message": "Not a function"
        },
        {
          "sha": "b9b1556a4c8750b3542aae60ddb24698f8e83af9",
          "message": "Merge branch 'main' into 2024/01/12/threadPool.relativeTimeInMillisSupplier"
        },
        {
          "sha": "671bf5293ec091c2b6aee2acd0cabeb27d22e4e5",
          "message": "Test fixes"
        },
        {
          "sha": "1ac6136bb40b8b68697a30dcb778095d6838f3fb",
          "message": "Merge branch 'main' into 2024/01/12/threadPool.relativeTimeInMillisSupplier"
        },
        {
          "sha": "835e5df7128a71f31dc999adc14afb718a33d3d4",
          "message": "More test fixes"
        }
      ],
      "comments": [
        {
          "user": "original-brownbear",
          "body": "NIT: Kinda weird to have this as a function when we only call it once during the lifetime of any instance, why not just make this a final field that we set up in the constructor of the thread pool? Doesn't really matter much though :)"
        },
        {
          "user": "DaveCTurner",
          "body": "Yeah I can tidy this up; also this area is pretty light on tests right now, I'll add some before marking this as non-draft."
        }
      ],
      "body": "We use `ThreadPool#relativeTimeInMillis` as part of a timeout mechanism\r\nin many places, often using a method reference so we can pass in a\r\n`LongSupplier` for ease of testing. Each time we create a new method\r\nreference we're opening ourselves up to potential cache misses on the\r\nway through to the two volatile reads needed to actually return the\r\nvalue in production. We're also only caching the nanos value so we must\r\ndo some arithmethic to convert it to millis each time.\r\n\r\nThis commit introduces a constant `LongSupplier` for use in all these\r\nplaces, saving the allocation and the indirection through different\r\nobjects, and caching the millis value alongside the nanos to avoid the\r\narithmetic on each call.\r\n\r\nRelates #104273",
      "base_ref": "main",
      "head_ref": "2024/01/12/threadPool.relativeTimeInMillisSupplier",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104311/comments"
    },
    {
      "number": 104310,
      "title": "Chunk BulkResponse on REST layer",
      "state": "closed",
      "created_at": "2024-01-12T11:44:47Z",
      "updated_at": "2024-01-12T12:39:27Z",
      "closed_at": "2024-01-12T12:39:04Z",
      "merged_at": "2024-01-12T12:39:04Z",
      "author": "original-brownbear",
      "labels": [
        ">non-issue",
        ":Distributed Indexing/CRUD",
        "Team:Distributed (Obsolete)",
        "auto-merge-without-approval",
        "v8.13.0"
      ],
      "comments_count": 1,
      "review_comments_count": 4,
      "additions": 28,
      "deletions": 27,
      "changed_files": 4,
      "url": "https://github.com/elastic/elasticsearch/pull/104310",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104310",
      "commits": [
        {
          "sha": "d28c365f61ab84f8a0dfcf1993263470275b1f4d",
          "message": "Chunk BulkResponse on REST layer\n\nIf there's a large number of failures in these they can grow very\nlarge. Chunking these at least avoids the O(n) memory cost when sending\nthese out over the REST layer. Even without failures large REST\nresponses for these can grow to a size that exceeds what can be written\nto the channel right away and take very visible time to serialize.\nBetter to smooth out the cost as write capacity becomes available."
        }
      ],
      "comments": [
        {
          "user": "DaveCTurner",
          "body": ":+1: although not directly related to this"
        },
        {
          "user": "DaveCTurner",
          "body": "Why not make this one chunked too?"
        },
        {
          "user": "original-brownbear",
          "body": "Guess it's not really worth it, who's going to send something large enough so that it needs chunking to the simulate API? :D "
        },
        {
          "user": "DaveCTurner",
          "body": "famous last words..."
        }
      ],
      "body": "If there's a large number of failures in these they can grow very large. Chunking these at least avoids the O(n) memory cost when sending these out over the REST layer. Even without failures large REST responses for these can grow to a size that exceeds what can be written to the channel right away and take very visible time to serialize (~7% of all coordinating node CPU time during ingest for the http_logs rally track!!). Better to smooth out the cost as write capacity becomes available.\r\n",
      "base_ref": "main",
      "head_ref": "bulk-response-chunked-to-xcontent",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104310/comments"
    },
    {
      "number": 104309,
      "title": "ESQL: Add TO_UPPER and TO_LOWER functions",
      "state": "closed",
      "created_at": "2024-01-12T11:26:44Z",
      "updated_at": "2024-01-15T10:58:57Z",
      "closed_at": "2024-01-15T10:58:57Z",
      "merged_at": "2024-01-15T10:58:57Z",
      "author": "luigidellaquila",
      "labels": [
        ">enhancement",
        "Team:Analytics",
        ":Analytics/ES|QL",
        "v8.13.0"
      ],
      "comments_count": 3,
      "review_comments_count": 6,
      "additions": 782,
      "deletions": 2,
      "changed_files": 18,
      "url": "https://github.com/elastic/elasticsearch/pull/104309",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104309",
      "commits": [
        {
          "sha": "c73dc6228c41a0502916236585ffe49b9339da44",
          "message": "Add TO_UPPER and TO_LOWER functions"
        },
        {
          "sha": "1e36c7041d4e34f9ebe9eebb40056c11625884c9",
          "message": "Update docs/changelog/104309.yaml"
        },
        {
          "sha": "77f7b6e30ea87f98328004b8032ebafc9c29459b",
          "message": "Cleanup and more tests"
        },
        {
          "sha": "ea9ae55b9e83cc09b4b4b01a34f2ca6c58358373",
          "message": "Merge remote-tracking branch 'luigidellaquila/esql/to_upper_lower' into esql/to_upper_lower"
        },
        {
          "sha": "90dd7a973dcc043762949f5b10861aa7b5685a3c",
          "message": "Implement review suggestions"
        },
        {
          "sha": "bac2b79cbcef12c4080450131764550031e67f08",
          "message": "Merge branch 'main' into esql/to_upper_lower"
        }
      ],
      "comments": [
        {
          "user": "bpintea",
          "body": "leftover?"
        },
        {
          "user": "luigidellaquila",
          "body": "Yes, it's a leftover. Fixing\r\n\r\n>  some tests with non-ascii chars would be welcome.\r\n\r\nAdding some\r\n\r\n\r\n"
        },
        {
          "user": "costin",
          "body": "Since this is a unary expression, add a replaceChild() method plus field() method to both classes."
        },
        {
          "user": "costin",
          "body": "Use toLower/toUpper.field() here instead and drop the assert."
        },
        {
          "user": "costin",
          "body": "EsqlTestUtils.TEST_CFG"
        },
        {
          "user": "costin",
          "body": "Add some test with random locale as well."
        }
      ],
      "body": "Adding two new string funcitons\r\n\r\n- TO_UPPER(value): returns the input string converted to upper case\r\n- TO_LOWER(value): returns the input string converted to lower case\r\n\r\nRelated to: https://github.com/elastic/elasticsearch/issues/103599",
      "base_ref": "main",
      "head_ref": "esql/to_upper_lower",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104309/comments"
    },
    {
      "number": 104308,
      "title": "[8.12] [Docs] Add connectors links, cleanup connectors API docs (#104262)",
      "state": "closed",
      "created_at": "2024-01-12T11:14:52Z",
      "updated_at": "2024-01-12T11:35:28Z",
      "closed_at": "2024-01-12T11:35:06Z",
      "merged_at": "2024-01-12T11:35:06Z",
      "author": "leemthompo",
      "labels": [
        ">docs",
        "backport",
        "Team:Docs",
        "auto-merge-without-approval",
        "v8.12.1"
      ],
      "comments_count": 1,
      "review_comments_count": 0,
      "additions": 49,
      "deletions": 45,
      "changed_files": 21,
      "url": "https://github.com/elastic/elasticsearch/pull/104308",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104308",
      "commits": [
        {
          "sha": "50b186197b85cf5727fffbab50e9f2381ce56b53",
          "message": "[Docs] Add connectors links, cleanup connectors API docs (#104262)\n\n* [Docs] Add connectors links\r\n\r\n* 🧹 Cleanup abbreviations, add missing tech preview labels\r\n\r\n* Unify remaining tech preview, abbreviations, update CLI verbiage\r\n\r\n* Unify remaining tech preview, abbreviations"
        }
      ],
      "comments": [],
      "body": "Backports the following commits to 8.12:\n - [Docs] Add connectors links, cleanup connectors API docs (#104262)",
      "base_ref": "8.12",
      "head_ref": "backport/8.12/pr-104262",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104308/comments"
    },
    {
      "number": 104307,
      "title": "Remove some unused dependencies from Reindex transport actions",
      "state": "open",
      "created_at": "2024-01-12T11:09:22Z",
      "updated_at": "2024-09-11T16:54:48Z",
      "closed_at": null,
      "merged_at": null,
      "author": "original-brownbear",
      "labels": [
        ">non-issue",
        ":Distributed Indexing/Reindex",
        "Team:Distributed (Obsolete)",
        "v9.0.0"
      ],
      "comments_count": 1,
      "review_comments_count": 6,
      "additions": 72,
      "deletions": 95,
      "changed_files": 16,
      "url": "https://github.com/elastic/elasticsearch/pull/104307",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104307",
      "commits": [
        {
          "sha": "892c60623ac19552e9d44d92e988daadaf500170",
          "message": "Remove some unused dependencies from Reindex transport actions\n\nWe didn't use the cluster state in one spot, from that it followed that\nwe can do away with the clusterservice as a dependency in many spots.\nAlso we already pass around clients that reference the thread-pool, no\nneed to separately pass it around either."
        }
      ],
      "comments": [
        {
          "user": "kingherc",
          "body": "Is there a difference between the `searchClient.threadPool()` and choosing `bulkClient.threadPool()`?"
        },
        {
          "user": "original-brownbear",
          "body": "No not really :) it's always the same instance."
        },
        {
          "user": "kingherc",
          "body": "Would be nice to add an assertion that their thread pools are the same just to ensure"
        },
        {
          "user": "kingherc",
          "body": "You can remove it from the constructor as well then?"
        },
        {
          "user": "idegtiarenko",
          "body": "I think that is `org.elasticsearch.threadpool.ThreadPool` that allows to access any actual `ExecutorService`.\r\n\r\nNot sure I like this change. It hides the fact that we depend on the `ThreadPool` and instead \"steals\" it from the other dependency. Hypothetically, what happens if we change `searchClient` to not have the `threadPool` or at least not expose it any more?"
        },
        {
          "user": "kingherc",
          "body": "After seeing @idegtiarenko 's comment, I'm removing my approval, just to confirm the implications around thread pool is OK.\r\n\r\n@original-brownbear , checking also other actions, I see that thread pool is indeed passed around a lot, even if there's a client argument. I am unaware of why there's both passed, if conceptually we could have taken the thread pool from the client. I just would like to ensure it's not a problem as well. I cannot think of any problems at the moment, only that perhaps the thread pools might be different (a different one is passed, different than the client's), but I'm not sure that's happening anywhere?"
        }
      ],
      "body": "We didn't use the cluster state in one spot, from that it followed that we can do away with the clusterservice as a dependency in many spots. Also we already pass around clients that reference the thread-pool, no need to separately pass it around either.\r\n",
      "base_ref": "main",
      "head_ref": "some-cleanup-reindex",
      "mergeable": false,
      "mergeable_state": "dirty",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104307/comments"
    },
    {
      "number": 104306,
      "title": "Fix double registered metrics and chain getters throwing NPE",
      "state": "closed",
      "created_at": "2024-01-12T11:09:17Z",
      "updated_at": "2024-10-29T11:54:29Z",
      "closed_at": "2024-01-15T16:13:57Z",
      "merged_at": "2024-01-15T16:13:57Z",
      "author": "pgomulka",
      "labels": [
        ">non-issue",
        ":Core/Infra/Core",
        "Team:Core/Infra",
        "v8.13.0"
      ],
      "comments_count": 3,
      "review_comments_count": 4,
      "additions": 269,
      "deletions": 56,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104306",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104306",
      "commits": [
        {
          "sha": "119f5adfeed715ac82e1a0013a7b984a219db4bd",
          "message": "replace chained getters with optional checks\n\njavadoc"
        }
      ],
      "comments": [
        {
          "user": "piergm",
          "body": "NIT: `orElse(0L)` \r\nJust to be standard as other defaults"
        },
        {
          "user": "piergm",
          "body": "NIT: `orElse(0L)` "
        },
        {
          "user": "pgomulka",
          "body": "estimateNumberOfOperations() returns and `int`, this means that the `.map` returns and `Optional<Integer>`.\r\nReturning a `long` would not compile."
        },
        {
          "user": "pgomulka",
          "body": "same as above: `getUncommittedOperations()` returns and `int`, this means that the `.map` returns and `Optional<Integer>`.\r\nReturning a `long` would not compile."
        }
      ],
      "body": "some of the metrics were accidentaly registered under the same name and were logging errors in apm agent logs (#103388)\r\nalso there were nullpointers in apm agent logs, the chained getters were replaced to use an optional \r\nthe fix in #103520 does not helped with NPEs\r\n\r\n",
      "base_ref": "main",
      "head_ref": "node_metrics_fix",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104306/comments"
    },
    {
      "number": 104305,
      "title": "Reduce contention in `CancellableTask#ensureNotCancelled`",
      "state": "closed",
      "created_at": "2024-01-12T10:33:00Z",
      "updated_at": "2024-06-17T06:17:21Z",
      "closed_at": "2024-01-12T11:22:27Z",
      "merged_at": "2024-01-12T11:22:27Z",
      "author": "DaveCTurner",
      "labels": [
        ">non-issue",
        ":Distributed Coordination/Task Management",
        "Team:Distributed (Obsolete)",
        "auto-merge-without-approval",
        "v8.13.0"
      ],
      "comments_count": 1,
      "review_comments_count": 0,
      "additions": 4,
      "deletions": 2,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104305",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104305",
      "commits": [
        {
          "sha": "4153dbd7efd5cba986123ad6ec8623ee3dd0167d",
          "message": "Reduce contention in `CancellableTask#ensureNotCancelled`\n\nNo need to acquire the mutex to read the volatile `isCancelled` field,\nwe can check that first to avoid contention.\n\nRelates #104273"
        }
      ],
      "comments": [],
      "body": "No need to acquire the mutex to read the volatile `isCancelled` field,\r\nwe can check that first to avoid contention.\r\n\r\nRelates #104273",
      "base_ref": "main",
      "head_ref": "2024/01/12/ensureNotCancelled-contention",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104305/comments"
    },
    {
      "number": 104304,
      "title": "Speed up search cancellation checks by storing them in list",
      "state": "closed",
      "created_at": "2024-01-12T10:27:30Z",
      "updated_at": "2024-11-30T10:08:26Z",
      "closed_at": "2024-01-12T11:21:42Z",
      "merged_at": "2024-01-12T11:21:42Z",
      "author": "original-brownbear",
      "labels": [
        ">non-issue",
        ":Search/Search",
        "Team:Search",
        "auto-merge-without-approval",
        "v8.13.0"
      ],
      "comments_count": 1,
      "review_comments_count": 1,
      "additions": 3,
      "deletions": 7,
      "changed_files": 2,
      "url": "https://github.com/elastic/elasticsearch/pull/104304",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104304",
      "commits": [
        {
          "sha": "4cba48e4ca9f5e1682542e3caa7a2ae60abe26f0",
          "message": "Speed up search cancellation checks by storing them in list\n\nWe only add lambdas to this thing, the contains check is pointless,\nso we might as well use a list here that iterates more efficiently."
        }
      ],
      "comments": [
        {
          "user": "DaveCTurner",
          "body": ":+1: the default size of 10 makes sense here, if anything I expect it's a little oversized. Might be worth a comment to that effect tho."
        }
      ],
      "body": "We only add lambdas to this thing, the contains check is pointless, so we might as well use a list here that iterates more efficiently.\r\n\r\nrelates #104273 ",
      "base_ref": "main",
      "head_ref": "faster-cancellation-check",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104304/comments"
    },
    {
      "number": 104303,
      "title": "Backport update versions task to 7.17",
      "state": "closed",
      "created_at": "2024-01-12T10:24:09Z",
      "updated_at": "2024-01-12T16:01:28Z",
      "closed_at": "2024-01-12T16:01:24Z",
      "merged_at": "2024-01-12T16:01:24Z",
      "author": "thecoop",
      "labels": [
        ":Core/Infra/Core",
        ">refactoring",
        "backport",
        "Team:Core/Infra",
        "Team:Delivery",
        ":Delivery/Tooling",
        "v7.17.17"
      ],
      "comments_count": 3,
      "review_comments_count": 0,
      "additions": 495,
      "deletions": 0,
      "changed_files": 4,
      "url": "https://github.com/elastic/elasticsearch/pull/104303",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104303",
      "commits": [
        {
          "sha": "2df6ab12aaa8fb97e09bcb7cb32a9d15abc06bee",
          "message": "Copy update version gradle task from #103335 to 7.17 for future 7.17 releases"
        },
        {
          "sha": "25bad4ecfce46eb34117182e1307849546e929d0",
          "message": "Update versions task for 7.17 Version.java"
        }
      ],
      "comments": [],
      "body": "Backport the update versions task from #103335 to 7.17, for future 7.17 patch releases using new release automation.\r\n\r\nThis modifies the update versions logic to also copy across the lucene version",
      "base_ref": "7.17",
      "head_ref": "add-remove-version-7.17",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104303/comments"
    },
    {
      "number": 104302,
      "title": "[Transform] Fix and unmute transform chaining test.",
      "state": "closed",
      "created_at": "2024-01-12T10:06:03Z",
      "updated_at": "2024-01-16T11:04:54Z",
      "closed_at": "2024-01-16T11:04:51Z",
      "merged_at": "2024-01-16T11:04:50Z",
      "author": "przemekwitek",
      "labels": [
        ">test",
        ":ml/Transform",
        "Team:ML",
        "v8.13.0"
      ],
      "comments_count": 3,
      "review_comments_count": 2,
      "additions": 136,
      "deletions": 42,
      "changed_files": 3,
      "url": "https://github.com/elastic/elasticsearch/pull/104302",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104302",
      "commits": [
        {
          "sha": "fa33b463212f1cbacee95d3c6c1312dce695fdbd",
          "message": "[Transform] Fix and unmute transform chaining test."
        },
        {
          "sha": "bc67f015efe522c3a171dcdbc969dab754d0cae5",
          "message": "Merge branch 'main' into unmute_chaining_test"
        },
        {
          "sha": "1fb4670afda1c5f602e315dd6fe9c45d6b373e18",
          "message": "Fix chaining test: add event.ingested pipeline"
        },
        {
          "sha": "812a18028c2b9cc179e904b6b5c1237d2cb4e120",
          "message": "Fix forbiddenApisJavaRestTest"
        },
        {
          "sha": "b2ef2af845b5d482332828dd29454c52d15a19d7",
          "message": "Increase timeout"
        },
        {
          "sha": "23c788ad404a7bd3c47e38f36807c5ae794a51e9",
          "message": "Apply review comments."
        }
      ],
      "comments": [
        {
          "user": "droberts195",
          "body": "I think this method should be renamed to something like `setup`, or, if that clashes with a base class method, then `setupTransformTests` or something like that. It does much more than create a thread pool now."
        },
        {
          "user": "przemekwitek",
          "body": "Done."
        }
      ],
      "body": "This PR:\r\n1. fixes and unmutes `TransformChainIT.testChainedTransforms` test\r\n2. adds `TransformGetCheckpointIT.testGetCheckpointWithMissingIndex` test\r\n\r\nRelates https://github.com/elastic/elasticsearch/issues/103678\r\nCloses https://github.com/elastic/elasticsearch/issues/104238",
      "base_ref": "main",
      "head_ref": "unmute_chaining_test",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104302/comments"
    },
    {
      "number": 104301,
      "title": "[8.12] [Test] Remove mocker appender before closing it (#104300)",
      "state": "closed",
      "created_at": "2024-01-12T08:30:15Z",
      "updated_at": "2024-01-12T09:15:04Z",
      "closed_at": "2024-01-12T09:14:41Z",
      "merged_at": "2024-01-12T09:14:41Z",
      "author": "ywangd",
      "labels": [
        ">test",
        ":Distributed Coordination/Network",
        "backport",
        "Team:Distributed (Obsolete)",
        "auto-merge-without-approval",
        "v8.12.1"
      ],
      "comments_count": 0,
      "review_comments_count": 0,
      "additions": 1,
      "deletions": 1,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104301",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104301",
      "commits": [
        {
          "sha": "f7515200bbdab56ac9a7fcc02d93f434ec122516",
          "message": "[Test] Remove mocker appender before closing it (#104300)\n\nThe appender must be removed first before closing. Otherwise, the test\nsometimes tries to log additional messages when the appender is closed.\n\nResolves: #103782"
        }
      ],
      "comments": [],
      "body": "Backports the following commits to 8.12:\n - [Test] Remove mocker appender before closing it (#104300)",
      "base_ref": "8.12",
      "head_ref": "backport/8.12/pr-104300",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104301/comments"
    },
    {
      "number": 104300,
      "title": "[Test] Remove mocker appender before closing it",
      "state": "closed",
      "created_at": "2024-01-12T07:42:03Z",
      "updated_at": "2024-01-12T08:30:26Z",
      "closed_at": "2024-01-12T08:28:16Z",
      "merged_at": "2024-01-12T08:28:16Z",
      "author": "ywangd",
      "labels": [
        ">test",
        ":Distributed Coordination/Network",
        "Team:Distributed (Obsolete)",
        "auto-merge-without-approval",
        "v8.12.0",
        "v8.13.0"
      ],
      "comments_count": 2,
      "review_comments_count": 0,
      "additions": 1,
      "deletions": 2,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104300",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104300",
      "commits": [
        {
          "sha": "7fb1959e427fd8ad1c1080e0107fb17b963a2465",
          "message": "[Test] Remove mocker appender before closing it\n\nThe appender must be removed first before closing. Otherwise, the test\nsometimes tries to log additional messages when the appender is closed.\n\nResolves: #103782"
        }
      ],
      "comments": [],
      "body": "The appender must be removed first before closing. Otherwise, the test sometimes tries to log additional messages when the appender is closed.\r\n\r\nResolves: #103782\r\n",
      "base_ref": "main",
      "head_ref": "es-103782-remove-before-close-appender",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104300/comments"
    },
    {
      "number": 104299,
      "title": "Fix: remove wrong assertion from `ESRestTestFeatureService#clusterHasFeature`",
      "state": "closed",
      "created_at": "2024-01-12T07:29:46Z",
      "updated_at": "2024-01-12T10:07:23Z",
      "closed_at": "2024-01-12T10:07:18Z",
      "merged_at": "2024-01-12T10:07:18Z",
      "author": "ldematte",
      "labels": [
        ">test",
        ":Core/Infra/Core",
        "Team:Core/Infra",
        "v8.13.0"
      ],
      "comments_count": 2,
      "review_comments_count": 0,
      "additions": 24,
      "deletions": 28,
      "changed_files": 2,
      "url": "https://github.com/elastic/elasticsearch/pull/104299",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104299",
      "commits": [
        {
          "sha": "994ef6c23f48a72a70da9202cafe8db00d847c2c",
          "message": "Fix: removed wrong assertion in ESRestTestFeatureService#clusterHasFeature\n\nThe check is currently broken - feature check always falls back to historical features, and only then if the feature is not one of the historical ones, and exception (assert) is risen.\nThis is wrong: it could be that we are testing for a non-historical feature, and the cluster simply does not have it.\n\nThe check could be fixed with https://github.com/elastic/elasticsearch/pull/104257, but we decided it has little advantage over the complexity it brings - better remove it."
        },
        {
          "sha": "749f3ac6d3878d47c85852f83d297304bf1e9e94",
          "message": "Checkstyle + SuppressForbidden"
        }
      ],
      "comments": [],
      "body": "The check is currently broken - feature check always falls back to historical features, and only then if the feature is not one of the historical ones, and exception (assert) is risen.\r\nThis is wrong: it could be that we are testing for a non-historical feature, and the cluster under test simply does not have it.\r\n\r\nThe check could be fixed with https://github.com/elastic/elasticsearch/pull/104257, but we decided it has little advantage over the complexity it brings - better remove it.",
      "base_ref": "main",
      "head_ref": "remove-test-service-feature-name-check",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104299/comments"
    },
    {
      "number": 104298,
      "title": "Add `exponential_histogram` field type and aggregations",
      "state": "closed",
      "created_at": "2024-01-12T07:00:56Z",
      "updated_at": "2024-07-26T05:41:15Z",
      "closed_at": "2024-07-26T05:41:14Z",
      "merged_at": null,
      "author": "axw",
      "labels": [
        "external-contributor",
        "v8.16.0"
      ],
      "comments_count": 3,
      "review_comments_count": 0,
      "additions": 2812,
      "deletions": 0,
      "changed_files": 19,
      "url": "https://github.com/elastic/elasticsearch/pull/104298",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104298",
      "commits": [
        {
          "sha": "45a30f599b9c08ddee0635721976a070890f3984",
          "message": "mapper-exponential-histogram: add new plugin\n\nAdd a new plugin which defines the exponential_histogram\nmapper type. We will later add a new aggregation for\naggregating into exponential histograms."
        },
        {
          "sha": "d67d2d6c3254c5fc406b454564701c4eea655c0f",
          "message": "WIP"
        },
        {
          "sha": "39b6062972f14de31f2e215a295e891741bad34e",
          "message": "WIP"
        },
        {
          "sha": "e451c7085eb917ac96515d1aa577daa0a18ef202",
          "message": "Working exponential_histgoram aggregation"
        },
        {
          "sha": "171598ec6552b4ce3d15a8c9a13bcce6bc0146d1",
          "message": "Add support for downscaling"
        },
        {
          "sha": "80732a703454fa2da8eeaa24d1127acc1610d7d6",
          "message": "Add scale to aggregation content, fix :run"
        },
        {
          "sha": "795fb947cb46b682f5d60fc5835a33fc6fe1c45f",
          "message": "Support counts+values in exponential_histogram doc"
        },
        {
          "sha": "9df28e4a9d0a2830f738ec3c7991c570dcfb01b8",
          "message": "Add exponential_histogram_percentiles agg\n\nThis variant of the percentiles aggregation internally\nuses an exponential histogram sketch, similar to the\nHDR Histogram method. It's a separate aggregation so\nwe can reuse the exponential histogram aggregation\ninternally.\n\nAlso, require max_buckets to be at least 2 to fix an\ninfinite loop."
        },
        {
          "sha": "bff5105a8a039d011f44714bbc9b8ddc5a8dfe4d",
          "message": "Fix downscaling\n\nUpdate counts and index, both of which are invalidated by downscaling."
        },
        {
          "sha": "810974cc0a9b10d9165744d965af8bab143ca3ca",
          "message": "Fix/extend YAML REST tests"
        },
        {
          "sha": "cce61356e1d83fd6a3a6516a113350b2bb40dafb",
          "message": "Add example of offset-based exponential histogram"
        }
      ],
      "comments": [],
      "body": "Creating this PR as a draft for discussion.\r\n\r\nThis branch adds:\r\n - an `exponential_histogram` mapper, for storing [OpenTelemetry ExponentialHistogram-type metrics](https://opentelemetry.io/docs/specs/otel/metrics/data-model/#exponentialhistogram)\r\n - an `exponential_histogram` aggregation for merging exponential histograms, with a configurable limit on either the [scale](https://opentelemetry.io/docs/specs/otel/metrics/data-model/#exponential-scale) or number of [buckets](https://opentelemetry.io/docs/specs/otel/metrics/data-model/#exponential-buckets)\r\n - an `exponential_histogram_percentiles` aggregation for calculating percentiles over exponential histograms -- I think ideally this would be part of the built-in `percentiles` (and `percentile_ranks`) aggregation, but I wasn't able to do that in the limited time I had\r\n\r\nExponential histograms may be indexed either with bucket values and counts, or with a bucket offset and counts. For space-optimal encoding we should also support some way to transmit a range of buckets with holes, e.g. as indicated by negative counts. What's there is based on how buckets are encoded in OTLP: https://github.com/open-telemetry/opentelemetry-proto/blob/cfbf9357c03bf4ac150a3ab3bcbe4cc4ed087362/opentelemetry/proto/metrics/v1/metrics.proto#L534-L550.\r\n\r\nThe main advantages of this type over the `histogram` field is:\r\n - it is possible to omit the bucket boundaries/values\r\n - the field type has support for values in the negative range, unlike the `hdrhistogram` algorithm\r\n - bucket boundaries are implied by the scale, and these are \"perfectly subsetting\" as described at https://opentelemetry.io/docs/specs/otel/metrics/data-model/#exponential-scale. This allows aggregating histograms with varying scales/precision, without introducing additional error.\r\n - given that the histogram values are entirely self-describing (scale, and (not implemented) zero threshold) it is straightforward to support downscaling -- equivalent to performing the `exponential_histogram` aggregation and storing the result",
      "base_ref": "main",
      "head_ref": "exphistfield",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104298/comments"
    },
    {
      "number": 104292,
      "title": "[POC] Enhancement/metrics for search latencies transport",
      "state": "closed",
      "created_at": "2024-01-12T06:09:26Z",
      "updated_at": "2024-02-01T21:34:21Z",
      "closed_at": "2024-02-01T21:34:21Z",
      "merged_at": null,
      "author": "JVerwolf",
      "labels": [],
      "comments_count": 4,
      "review_comments_count": 20,
      "additions": 824,
      "deletions": 215,
      "changed_files": 80,
      "url": "https://github.com/elastic/elasticsearch/pull/104292",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104292",
      "commits": [
        {
          "sha": "7b65860833d2ee5d186c8da04d96f5b042c703d1",
          "message": "Add took metric"
        },
        {
          "sha": "bed99a8043b3f8f4c45ba21773be17b3bed92d8c",
          "message": "spotless"
        },
        {
          "sha": "e1c47c68c4c1f470787f0d9f26a5b90e345f5bd8",
          "message": "Merge branch 'main' of github.com:elastic/elasticsearch into enhancement/metrics-for-search-latencies-transport"
        },
        {
          "sha": "849ef62d16fb29c4d7d815c92b0769d88be277e2",
          "message": "spotless"
        },
        {
          "sha": "2abfba46c402d90eed8bf2a554c4129862cc7665",
          "message": "Remove vestigial comment"
        },
        {
          "sha": "ace05f5ac88c2bb13c6fbae9b07ce5e9681472db",
          "message": "Remove vestigial comments"
        },
        {
          "sha": "280e0a9109b3a33b4244da09bf86226eea3e75bd",
          "message": "fix test"
        },
        {
          "sha": "f8682522074942f61cbefa8b6577f13e7d91c486",
          "message": "Fix precommit issues"
        },
        {
          "sha": "c75fd2b50658c54013dd4cd7e58a41872e414451",
          "message": "Rename metric"
        },
        {
          "sha": "272389060f1cd53996a89fab054b856a3ff510a9",
          "message": "Merge branch 'main' of github.com:elastic/elasticsearch into enhancement/metrics-for-search-latencies-transport"
        },
        {
          "sha": "1d4d7f3f381dfe5989239d75a2788875b74e8600",
          "message": "Spotless"
        },
        {
          "sha": "9bbf2996e42ab30397ab9c505e32ab2b457e81cd",
          "message": "PR Feedback: use static factory"
        },
        {
          "sha": "c3e06b7ab8e09c8316bf2b61be64e704ab73abbd",
          "message": "Merge branch 'main' of github.com:elastic/elasticsearch into enhancement/metrics-for-search-latencies-transport"
        },
        {
          "sha": "45000a7c3e6ad81423480d4390e09b215e3da027",
          "message": "PR Feedback: Call metric in one place"
        },
        {
          "sha": "fb66718b57ce744b4f9a236a2878264a5f26d6c9",
          "message": "iter"
        },
        {
          "sha": "3fa9ba8ab4700245fe63f1079a1f488489e47efa",
          "message": "Spotless"
        },
        {
          "sha": "8218ce900da2bb7298b190c7ad9dad8890d64519",
          "message": "Merge branch 'main' of github.com:elastic/elasticsearch into enhancement/metrics-for-search-latencies-transport"
        },
        {
          "sha": "4c13259b2f52ccfed5cc3f717f0be63799a6081a",
          "message": "Remove vestigial code"
        },
        {
          "sha": "e3eb477482bc293746ce7eda9dbff4adec148800",
          "message": "wip"
        },
        {
          "sha": "1aee0b293b25addea5c8079506f21b14a71f3cbf",
          "message": "Copy tests"
        },
        {
          "sha": "52d60c8f70423755928a131be5673b1125f7e0be",
          "message": "Add test for simple search"
        },
        {
          "sha": "f407e1d07389f116bfb48969318cf51867cd4046",
          "message": "Add test for scroll"
        },
        {
          "sha": "63407f18c5a3d39b93322ef3bf59c5442f8f2da3",
          "message": "remove comment"
        },
        {
          "sha": "4af4edc20f5b2d3672e630bd7df905d8f9affd04",
          "message": "Change constructor to protected"
        },
        {
          "sha": "b3fdc7ede5316c391a6473f6907a4abd0dc17bf5",
          "message": "Remove vestigial code"
        }
      ],
      "comments": [
        {
          "user": "JVerwolf",
          "body": "@javanna I'm guessing that this does not require instrumentation as \"took\" isn't even recorded here, correct?"
        },
        {
          "user": "JVerwolf",
          "body": "@javanna I'm hoping to confirm my understanding that we don't need instrumentation here, as \"took\"times should have already been recorded by the individual responses prior to this point, correct?"
        },
        {
          "user": "JVerwolf",
          "body": "@javanna I'm hoping to confirm my understanding that we don't need instrumentation here, as \"took\"times should have already been recorded by the original response prior to this point, correct?"
        },
        {
          "user": "javanna",
          "body": "correct."
        },
        {
          "user": "javanna",
          "body": "Good question. I think you are correct."
        },
        {
          "user": "javanna",
          "body": "This sounds correct, if we go for the transport solution that you are prototyping. These are the type of \"surprising\" things that surface when trying a certain approach in practice. There may be use for metadata here to track that this specific search response was for vector tile, perhaps.  But let's leave that for later."
        },
        {
          "user": "javanna",
          "body": "Is this needed with the transport approach ?"
        },
        {
          "user": "javanna",
          "body": "You are now tracking all places where we provide a meaningful tookInMillis and adding the call to record the metric in those cases. That is fine, but I wonder if we can take it one step further. Can we introduce perhaps a new constructor argument to be able to better distinguish between places that do need tracking from places that do not? We could perhaps even add a static factory method that makes this easier to follow compared to a constructor with many arguments. Could we even make it so that the record call is done in one place, when creating that SearchResponse instance?"
        },
        {
          "user": "JVerwolf",
          "body": "If I understand correctly, you're suggesting passing the metric to SearchResponse so that it is responsible for calling the metric on construction? \r\n\r\nHmm, I was originally thinking along those lines too, but decided that SearchResponse is a data container, and shouldn't really contain \"behaviour\", as this is mixing concerns. However, everything's a trade-off, and I agree it would add clarity.  I like your idea of using as a static factory, that feels less-bad while still resulting in the aforementioned benefits. I'll give it a whirl."
        },
        {
          "user": "quux00",
          "body": "I wonder if we should move SearchResponse to use a Builder and have the constructor be private.\r\n\r\nI have another PR in progress that also needs to add a new param to SearchResponse constructors, so we are starting to have an explosion of constructor variants now.\r\n\r\nIt would be somewhat painful, but I think we could just do a refactoring ticket to create Builders first and then maybe a couple of us could work on converting sections of the codebase to use the Builder (rather than constructor) like we did for Armin's ref-counting work.\r\n\r\nThen we could have one final PR that makes the actual (single) constructor private."
        },
        {
          "user": "javanna",
          "body": "I like very much the idea of static methods and assigning a name to the different flavours of constructor. While you are at it, could we use a self explanatory name for this one compared to the other newWithMetrics ones?"
        },
        {
          "user": "javanna",
          "body": "this could even be package private"
        },
        {
          "user": "javanna",
          "body": "how do you envision these three being consulted? I would imagine we'd have a histogram on took over time, I was wondering how we would use the two counters above."
        },
        {
          "user": "javanna",
          "body": "I wonder if additionally to the integ test you added, we should also have an additional unit test in this class that verifies that the constructor of SearchResponse stores the took metric. What do you think? It would be more contained than an integ test, but an integ test is still great to have to verify that all the pieces integrate well with each other."
        },
        {
          "user": "javanna",
          "body": "It's great that the constructor is protected and could be made package private, already.  It's a great step forward. I did suggest below to perhaps use more self-explanatory names for the different with and without metrics variants. Builders are an option as well, I am curious to see what you folks have in mind in practice. let's discuss this in a follow-up perhaps?"
        },
        {
          "user": "javanna",
          "body": "I think we should check that this is never null when it's expected to be provided."
        },
        {
          "user": "javanna",
          "body": "wouldn't it be nice to remove this null invariant? Could we not record the took time already in the static method that calls this? Then we don't have to pass it to the constructor either? "
        },
        {
          "user": "javanna",
          "body": "I find it weird that SearchResponse.empty calls withoutMetrics, yet in this case the took time is recorded, but externally. Also, don't you build took in millis twice, hence the time you record is different from the one the search response holds, after all?\r\n\r\nThis is a weird edge-case where we create an artificial search response with no results. I wonder how significant it is to record its took time, because it does nothing. Yet technically we do compute a took time that we expose to users."
        },
        {
          "user": "quux00",
          "body": "For what I'm thinking, look at the SearchResponse.Clusters builder that I added as part of some CCS work. "
        },
        {
          "user": "javanna",
          "body": "going back to this, the logic to record could be outside of SearchResponse construction, in the static methods that you added."
        }
      ],
      "body": "This is a POC of an approach to instrument the \"took\" metrics reported in by Rest responses. This approach uses the Transport layer, as opposed to the REST layer approach located here: https://github.com/elastic/elasticsearch/pull/104183\r\n\r\n I've decided to move forward with this approach as it simplifies issues present in threading dependencies through plugins, as discovered in the REST approach.",
      "base_ref": "main",
      "head_ref": "enhancement/metrics-for-search-latencies-transport",
      "mergeable": false,
      "mergeable_state": "dirty",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104292/comments"
    },
    {
      "number": 104291,
      "title": "Convert RestWrapper to an explicit Interceptor",
      "state": "closed",
      "created_at": "2024-01-12T04:58:44Z",
      "updated_at": "2024-01-19T01:08:07Z",
      "closed_at": "2024-01-19T01:08:06Z",
      "merged_at": "2024-01-19T01:08:06Z",
      "author": "tvernum",
      "labels": [
        ":Core/Infra/REST API",
        ">refactoring",
        "Team:Core/Infra",
        "v8.13.0"
      ],
      "comments_count": 4,
      "review_comments_count": 1,
      "additions": 179,
      "deletions": 143,
      "changed_files": 11,
      "url": "https://github.com/elastic/elasticsearch/pull/104291",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104291",
      "commits": [
        {
          "sha": "0fa7f9278ce986bdb3d361d667f501dac1e83e6f",
          "message": "Convert RestWrapper to an explicit Interceptor\n\nAdds a new `RestInterceptor` interface and converts\n`RestServerActionPlugin.getRestHandlerInterceptor` to return this new\ntype instead of a wrapping function.\n\nThis has the following benefits:\n- Less object creation, there is 1 instance of the interceptor class\n  (see `SecurityRestFilter`) rather than an instance per handler\n- More control over the sequence of steps in processing a request.\n  The explicit interceptor separates it from the deprecation handler\n  or any validation that might be needed, and the controller can be\n  intentional about the order in which these operations are applied."
        },
        {
          "sha": "7d0174d1fb7aa23ae1ebc76b2d86319411eb6fb8",
          "message": "Merge branch 'main' into explicit-rest-interceptors"
        }
      ],
      "comments": [
        {
          "user": "rjernst",
          "body": "I think we want to log the error that we failed to send, not the ioexception that the http channel spit back (or probably both)?"
        }
      ],
      "body": "Adds a new `RestInterceptor` interface and converts `RestServerActionPlugin.getRestHandlerInterceptor` to return this new type instead of a wrapping function.\r\n\r\nThis has the following benefits:\r\n- Less object creation, there is 1 instance of the interceptor class (see `SecurityRestFilter`) rather than an instance per handler\r\n- More control over the sequence of steps in processing a request. The explicit interceptor separates it from the deprecation handler or any validation that might be needed, and the controller can be intentional about the order in which these operations are applied.\r\n",
      "base_ref": "main",
      "head_ref": "explicit-rest-interceptors",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104291/comments"
    },
    {
      "number": 104290,
      "title": "ESQL: Remove SearchContext from Operators",
      "state": "closed",
      "created_at": "2024-01-12T00:32:18Z",
      "updated_at": "2024-01-12T14:03:27Z",
      "closed_at": "2024-01-12T14:03:07Z",
      "merged_at": "2024-01-12T14:03:07Z",
      "author": "nik9000",
      "labels": [
        ">non-issue",
        "Team:Analytics",
        ":Analytics/ES|QL",
        "v8.13.0"
      ],
      "comments_count": 3,
      "review_comments_count": 5,
      "additions": 332,
      "deletions": 295,
      "changed_files": 18,
      "url": "https://github.com/elastic/elasticsearch/pull/104290",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104290",
      "commits": [
        {
          "sha": "93c0ecce4486a1ebc311e690497e4ebaad0d8a14",
          "message": "ESQL: Remove SearchContext from Operators\n\nThis removes the *giant* `SearchContext` class from our `Operator`s.\nIt's just *so* **so** ***so*** big. It's hard to test with. You can do\nit. There's a lot of crazy mocking. Lots of reading.\n\nThe replacement is two interfaces, on in the compute engine, called\n`ShardContext`. It contains the methods that are required to power all\nof the `LuceneSourceOperator`s. It has the `IndexSearcher`, can build\nsorts, and has a few identifiers.\n\nThe other interface is also called `ShardContext`, but this one lives in\nesql itself and it has all of the things needed to power the\n`EsPhysicalOperationProviders` - mostly stuff to configure the value\nfetching operator and build queries.\n\nThere exists a \"production\" implementation of these interfaces in\n`EsPhysicalOperationProviders` and a test implementation in\n`LuceneSourceOperatorTests`. It's super easy to plug in non-production\nimplementations that don't drag in 45% of all of Elasticsearch."
        },
        {
          "sha": "1206df0de4a57b99347c578ed7b2ddd2b71a56c7",
          "message": "Smaller"
        },
        {
          "sha": "d63028e71bc9036783202908a8d2b1c6d8f713a7",
          "message": "Merge branch 'main' into esql_refactor"
        }
      ],
      "comments": [
        {
          "user": "alex-spies",
          "body": "nit: the name may suggest that this returns an `Index`, like `fullyQualifiedIndex` below.\r\n```suggestion\r\n    int id();\r\n```"
        },
        {
          "user": "alex-spies",
          "body": "thought: I was confused why using `.shardId()` is incorrect here, but the tests for `metadata _id` don't pass with that."
        },
        {
          "user": "nik9000",
          "body": "Yeah - `shardId` is the count of the shard in the list of shards for the current index. Like, if you do `_cat/shards` it's the number that shows next to the shard. So, like, \"this is the 0th shard of the index named foo\". `index` is the index into the list. I'll see if i can make this more readable."
        },
        {
          "user": "nik9000",
          "body": "I've removed `fullyQualifiedIndex` from the class just now and `shardId`.\r\n\r\nThe thing is, this is the \"index\" of the shard into a list. Maybe `ordinal`? It's the numeric ID that we assign to shard shards so the lucene-related operators can talk to each other."
        },
        {
          "user": "alex-spies",
          "body": "It's great now as it is, thanks for the iteration!"
        }
      ],
      "body": "This removes the *giant* `SearchContext` class from our `Operator`s. It's just *so* **so** ***so*** big. It's hard to test with. You can do it. There's a lot of crazy mocking. Lots of reading.\r\n\r\nThe replacement is two interfaces, on in the compute engine, called `ShardContext`. It contains the methods that are required to power all of the `LuceneSourceOperator`s. It has the `IndexSearcher`, can build sorts, and has a few identifiers.\r\n\r\nThe other interface is also called `ShardContext`, but this one lives in esql itself and it has all of the things needed to power the `EsPhysicalOperationProviders` - mostly stuff to configure the value fetching operator and build queries.\r\n\r\nThere exists a \"production\" implementation of these interfaces in `EsPhysicalOperationProviders` and a test implementation in `LuceneSourceOperatorTests`. It's super easy to plug in non-production implementations that don't drag in 45% of all of Elasticsearch.\r\n",
      "base_ref": "main",
      "head_ref": "esql_refactor",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104290/comments"
    },
    {
      "number": 104289,
      "title": "Better handling of async processor failures",
      "state": "closed",
      "created_at": "2024-01-11T22:51:13Z",
      "updated_at": "2024-01-25T16:57:02Z",
      "closed_at": "2024-01-18T18:09:17Z",
      "merged_at": "2024-01-18T18:09:17Z",
      "author": "joegallo",
      "labels": [
        ">bug",
        ":Data Management/Ingest Node",
        "Team:Data Management",
        "v8.12.1",
        "v8.13.0",
        "v7.17.18"
      ],
      "comments_count": 2,
      "review_comments_count": 0,
      "additions": 155,
      "deletions": 51,
      "changed_files": 4,
      "url": "https://github.com/elastic/elasticsearch/pull/104289",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104289",
      "commits": [
        {
          "sha": "1c61d3685efdb9e008220e184b172a1b3d1196be",
          "message": "Fix a typo"
        },
        {
          "sha": "3441a39f00966efec63c89702b13ef37fe4bc438",
          "message": "Tidy up these imports"
        },
        {
          "sha": "c874c97919ce31b2b6c3577c30921d9c8b7bd5f3",
          "message": "No need to size the array in toArray calls"
        },
        {
          "sha": "c7f0f3a62cfdd95baf0d4a637a33094bf38f4083",
          "message": "Extract some variables"
        },
        {
          "sha": "3f53c0175ef591a65655e95ea6b3f44a46f88cf8",
          "message": "Tweak these loops just a little"
        },
        {
          "sha": "24631abf792f829ac30bdd0878bb84b1536de9a6",
          "message": "Move this variable declaration"
        },
        {
          "sha": "596b6ee1eac34470ca94ea100e2cfd3f8e076549",
          "message": "Whitespace and comments"
        },
        {
          "sha": "cceaaf397dbf4d53029b685c58e376707c02b762",
          "message": "Assert on the non-failure side, too"
        },
        {
          "sha": "f31826880473abdbd59eda4b3f8e805c12628fcd",
          "message": "Rename this variable"
        },
        {
          "sha": "27d6086a4422848403d2b622320452e65d3cf437",
          "message": "Add some failing tests\n\nIf the markItemAsFailed calls happen asynchronously, then the items\nare recorded in the BulkRequestModifier's itemResponses ArrayList in a\ndifferent order than one might otherwise expect."
        },
        {
          "sha": "0e1c4ae580022bc99240373c2e15ef021a549b99",
          "message": "Account for itemResponses being out of order\n\nI think this is faster than the original code, too, because instead of\nN inserts on an ArrayList that need to push items out of the way, we\ndo a single scan through all the items."
        },
        {
          "sha": "b01b8414ee4bcc24d61464ed43d1d68a4bd08113",
          "message": "Add some assertions"
        },
        {
          "sha": "4132e746dffe4a7eb1625a7b17c31bca9ad65903",
          "message": "Update docs/changelog/104289.yaml"
        },
        {
          "sha": "f2fc14d7dd05136972836787b55462510c96689a",
          "message": "Merge branch 'main' into better-handling-of-async-processor-failures"
        }
      ],
      "comments": [],
      "body": "Fixes https://github.com/elastic/elasticsearch/issues/101921\r\n\r\nThe `BulkRequestModifier` assumes its `itemResponses` are in order, but with async processors the `itemResponses` can actually be in any order.\r\n\r\n`itemResponses` are for recording \"failures\" (i.e. a processor threw an exception, a document was dropped via a `drop` processor, a document was failed via a `fail` processor), and asynchronous failures can throw the ordering off. Each response in `itemResponses` tracks its own slot, however, so recreating the correct order is not difficult.",
      "base_ref": "main",
      "head_ref": "better-handling-of-async-processor-failures",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104289/comments"
    },
    {
      "number": 104288,
      "title": "Don't throw error for remote shards that open PIT filtered out",
      "state": "closed",
      "created_at": "2024-01-11T22:49:47Z",
      "updated_at": "2024-01-15T14:38:24Z",
      "closed_at": "2024-01-15T14:36:34Z",
      "merged_at": "2024-01-15T14:36:34Z",
      "author": "javanna",
      "labels": [
        ">bug",
        ":Search/Search",
        "Team:Search",
        "auto-backport",
        "v8.12.1",
        "v8.13.0"
      ],
      "comments_count": 4,
      "review_comments_count": 9,
      "additions": 161,
      "deletions": 20,
      "changed_files": 6,
      "url": "https://github.com/elastic/elasticsearch/pull/104288",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104288",
      "commits": [
        {
          "sha": "a807fdb35a016d0c96cf3c524618af841d48b3a4",
          "message": "Don't throw error for remote shards that open PIT filtered out\n\nWe recently introduced support for index_filter to the open point in time API (see #102388).\nOpen point in time supports executing against remote indices, in which case it will open a\nreader context against the target remote shards. With support for index_filter, shards that\ncannot match the filter are not even included in the PIT id that open PIT returns.\n\nWhen the following search is executed that includes such PIT id, there is one search shards call\nper cluster performed, which will return all shards from the targeted indices, including those\nthat open PIT has filtered out. In that case, we should just ignore those shards instead of\nthrowing exception when those are looked up in the search context id map built from the PIT id.\n\nCloses #102596"
        },
        {
          "sha": "1422750bbf136d9ad7815497738a3631b04bd56c",
          "message": "Update docs/changelog/104288.yaml"
        },
        {
          "sha": "c4f0c92118f511dd33762cabf59ab3818ce8042c",
          "message": "iter"
        },
        {
          "sha": "76686ffefc187e669d935ad6744df58f3ce80421",
          "message": "iter"
        },
        {
          "sha": "e19f91b46180ae88e6e3f547fa9f701dfcb850cd",
          "message": "iter"
        },
        {
          "sha": "52aac556aa905d73bafbb4e35f9c5e4b0a003d6b",
          "message": "iter"
        },
        {
          "sha": "8a0f33bb2cd60ab29ddd0e9a9f76a4ea56afb5df",
          "message": "iter"
        },
        {
          "sha": "fe76f4dcbbad211a91c5b055d975746d186e1518",
          "message": "Merge branch 'main' into fix/pit_ccs_filtered_shards"
        }
      ],
      "comments": [
        {
          "user": "javanna",
          "body": "Search shards runs now the can match phase, hence depending on the specific query, some of the shards may be skipped which are part of the PIT id. Those though would still be returned as part of the search shards response and have the flag `skip` set to `true`. That should mean that this assertion is valid."
        },
        {
          "user": "javanna",
          "body": "I had to change this to be able to reproduce the original test failure, hence I think it's a good idea to not always run this with a single shard. Still trying to figure out what has changed meanwhile in how we run yaml tests that did not let me reproduce the failure anymore."
        },
        {
          "user": "original-brownbear",
          "body": "Seems like we are just copying the map for the assertions sake?"
        },
        {
          "user": "original-brownbear",
          "body": "I guess we could just do a `noneMatch` here ? :)"
        },
        {
          "user": "javanna",
          "body": "yes"
        },
        {
          "user": "javanna",
          "body": "yep"
        },
        {
          "user": "javanna",
          "body": "we could make it more complicated and do the copy only when assertions are enabled perhaps."
        },
        {
          "user": "original-brownbear",
          "body": "I guess doesn't have to be that much more complicated? Why not just have a separate assertion function before the main loop that runs the same loop on a copy and asserts after the fact.\r\n\r\nSo basically something like:\r\n\r\n```java\r\nboolean assertStuff(searchContextId) {\r\n        Map<ShardId, SearchContextIdForNode> searchContextIdForNodeMap = new HashMap<>.     (searchContextId.shards());\r\n       for (Map.Entry<String, SearchShardsResponse> entry : searchShardsResponses.entrySet()) {\r\n             for (SearchShardsGroup group : entry.getValue().getGroups()) {\r\n                 final ShardId shardId = group.shardId();\r\n                 final SearchContextIdForNode perNode = searchContextIdForNodeMap.remove(shardId);\r\n              }\r\n         }\r\n       assert searchContextIdForNodeMap.values()\r\n             .stream()\r\n             .noneMatch(searchContextIdForNode -> searchContextIdForNode.getClusterAlias() != null)\r\n       return true;\r\n}\r\n\r\nThen we don't have to mutate anything in the production code and have no performance impact :)?"
        },
        {
          "user": "javanna",
          "body": "That makes sense, thanks, done in 52aac556aa905d73bafbb4e35f9c5e4b0a003d6b "
        }
      ],
      "body": "We recently introduced support for index_filter to the open point in time API (see #102388). Open point in time supports executing against remote indices, in which case it will open a reader context against the target remote shards. With support for index_filter, shards that cannot match the filter are not even included in the PIT id that open PIT returns.\r\n\r\nWhen the following search is executed that includes such PIT id, there is one search shards call per cluster performed, which will return all shards from the targeted indices, including those that open PIT has filtered out. In that case, we should just ignore those shards instead of throwing exception when those are looked up in the search context id map built from the PIT id.\r\n\r\nCloses #102596\r\n",
      "base_ref": "main",
      "head_ref": "fix/pit_ccs_filtered_shards",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104288/comments"
    },
    {
      "number": 104287,
      "title": "Prefer new test cluster framework for new FIPS setting",
      "state": "closed",
      "created_at": "2024-01-11T22:39:43Z",
      "updated_at": "2024-01-12T17:20:25Z",
      "closed_at": "2024-01-12T17:20:01Z",
      "merged_at": "2024-01-12T17:20:01Z",
      "author": "jakelandis",
      "labels": [
        ">non-issue",
        ":Delivery/Build",
        "Team:Delivery",
        "auto-merge-without-approval",
        "v8.13.0"
      ],
      "comments_count": 2,
      "review_comments_count": 2,
      "additions": 1,
      "deletions": 26,
      "changed_files": 4,
      "url": "https://github.com/elastic/elasticsearch/pull/104287",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104287",
      "commits": [
        {
          "sha": "8ab505a555d728394047bddbd71b21aecefdeaa3",
          "message": "Prefer new test cluster framework for new fips setting"
        },
        {
          "sha": "8562f277ddcc539e78cb88abd69f6171059f9db2",
          "message": "simplify code"
        }
      ],
      "comments": [
        {
          "user": "mark-vieira",
          "body": "FWIW, there is a `setting()` method that accepts a predicate specifically for this purpose. This could be simplified to:\r\n\r\n```java\r\n.setting(\"xpack.security.fips_mode.required_providers\", () -> \"[BCFIPS, BCJSSE]\", n -> n.getVersion().onOrAfter(\"8.13.0\"));\r\n```"
        },
        {
          "user": "jakelandis",
          "body": "thanks .. i missed that originally but [switched](https://github.com/elastic/elasticsearch/pull/104287/commits/8562f277ddcc539e78cb88abd69f6171059f9db2) over to use that api instead. "
        }
      ],
      "body": "https://github.com/elastic/elasticsearch/pull/103483 introduced a new setting for FIPS only. \r\nDue to the way FIPS is configured with the elder gradle test cluster framework this setting\r\nwas getting applied to elder clusters in BWC tests that did not have the settting causing test failures. \r\n\r\nThe new test framework has better semantics for version specific configuration. \r\nThis commit updates applies the new setting via the new framework with a \r\nversion specific condition. \r\n\r\nAdding this setting to the test clusters is a simple way to\r\ntest the setting (which will cause errors if the required providers are not found in the cluster). \r\nThe pseudo test does not care which framework is used for configuration. \r\nAlso, using the new framework allows to remove some hacky configuration previously needed\r\nto handle some elder test cluster configuration that used elder versions. \r\n\r\nFixes: https://github.com/elastic/elasticsearch/issues/104234",
      "base_ref": "main",
      "head_ref": "fix_bwc_fips_tests",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104287/comments"
    },
    {
      "number": 104286,
      "title": "[7.17] [ci] Add Amazon Linux 2 to platform support pipeline (#104229)",
      "state": "closed",
      "created_at": "2024-01-11T21:18:48Z",
      "updated_at": "2024-01-12T16:41:03Z",
      "closed_at": "2024-01-12T16:40:59Z",
      "merged_at": "2024-01-12T16:40:59Z",
      "author": "brianseeders",
      "labels": [
        "backport",
        "v7.17.17"
      ],
      "comments_count": 0,
      "review_comments_count": 0,
      "additions": 1,
      "deletions": 0,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104286",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104286",
      "commits": [
        {
          "sha": "1f189ceeefd06847333d006b50fae9b4eae5fad7",
          "message": "[ci] Add Amazon Linux 2 to platform support pipeline (#104229)\n\n(cherry picked from commit a354b45613bc1b1170656e37684b62886638e191)"
        }
      ],
      "comments": [],
      "body": "# Backport\n\nThis will backport the following commits from `main` to `7.17`:\n - [[ci] Add Amazon Linux 2 to platform support pipeline (#104229)](https://github.com/elastic/elasticsearch/pull/104229)\n\n<!--- Backport version: 9.2.1 -->\n\n### Questions ?\nPlease refer to the [Backport tool documentation](https://github.com/sqren/backport)",
      "base_ref": "7.17",
      "head_ref": "backport/7.17/pr-104229",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104286/comments"
    },
    {
      "number": 104285,
      "title": "[8.11] [ci] Add Amazon Linux 2 to platform support pipeline (#104229)",
      "state": "closed",
      "created_at": "2024-01-11T21:18:29Z",
      "updated_at": "2024-01-12T16:41:01Z",
      "closed_at": "2024-01-12T16:40:55Z",
      "merged_at": "2024-01-12T16:40:55Z",
      "author": "brianseeders",
      "labels": [
        "backport",
        "v8.11.5"
      ],
      "comments_count": 0,
      "review_comments_count": 0,
      "additions": 1,
      "deletions": 0,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104285",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104285",
      "commits": [
        {
          "sha": "158ff6b467dd6857e80431660234db10b7adf23b",
          "message": "[ci] Add Amazon Linux 2 to platform support pipeline (#104229)\n\n(cherry picked from commit a354b45613bc1b1170656e37684b62886638e191)"
        }
      ],
      "comments": [],
      "body": "# Backport\n\nThis will backport the following commits from `main` to `8.11`:\n - [[ci] Add Amazon Linux 2 to platform support pipeline (#104229)](https://github.com/elastic/elasticsearch/pull/104229)\n\n<!--- Backport version: 9.2.1 -->\n\n### Questions ?\nPlease refer to the [Backport tool documentation](https://github.com/sqren/backport)",
      "base_ref": "8.11",
      "head_ref": "backport/8.11/pr-104229",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104285/comments"
    },
    {
      "number": 104284,
      "title": "[8.12] [ci] Add Amazon Linux 2 to platform support pipeline (#104229)",
      "state": "closed",
      "created_at": "2024-01-11T21:18:17Z",
      "updated_at": "2024-01-12T16:41:00Z",
      "closed_at": "2024-01-12T16:40:50Z",
      "merged_at": "2024-01-12T16:40:50Z",
      "author": "brianseeders",
      "labels": [
        "backport",
        "v8.12.1"
      ],
      "comments_count": 0,
      "review_comments_count": 0,
      "additions": 1,
      "deletions": 0,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104284",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104284",
      "commits": [
        {
          "sha": "9eb8b1c89fcfc03b293c6786ae0a27487ce34ad1",
          "message": "[ci] Add Amazon Linux 2 to platform support pipeline (#104229)\n\n(cherry picked from commit a354b45613bc1b1170656e37684b62886638e191)"
        }
      ],
      "comments": [],
      "body": "# Backport\n\nThis will backport the following commits from `main` to `8.12`:\n - [[ci] Add Amazon Linux 2 to platform support pipeline (#104229)](https://github.com/elastic/elasticsearch/pull/104229)\n\n<!--- Backport version: 9.2.1 -->\n\n### Questions ?\nPlease refer to the [Backport tool documentation](https://github.com/sqren/backport)",
      "base_ref": "8.12",
      "head_ref": "backport/8.12/pr-104229",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104284/comments"
    },
    {
      "number": 104283,
      "title": "[8.12] Add 8.11.4 release notes (#104276)",
      "state": "closed",
      "created_at": "2024-01-11T21:12:59Z",
      "updated_at": "2024-01-11T21:14:06Z",
      "closed_at": "2024-01-11T21:14:04Z",
      "merged_at": "2024-01-11T21:14:04Z",
      "author": "brianseeders",
      "labels": [
        "backport",
        "v8.12.1"
      ],
      "comments_count": 1,
      "review_comments_count": 0,
      "additions": 33,
      "deletions": 0,
      "changed_files": 2,
      "url": "https://github.com/elastic/elasticsearch/pull/104283",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104283",
      "commits": [
        {
          "sha": "8b7b0dae02adbdf33c73d52c49e4a4e0d937d864",
          "message": "Add 8.11.4 release notes (#104276)\n\n(cherry picked from commit 7f6b3d9e80b7bba3c0884285a1466daac95513bd)\n\n# Conflicts:\n#\tdocs/reference/release-notes.asciidoc"
        }
      ],
      "comments": [],
      "body": "# Backport\n\nThis will backport the following commits from `8.11` to `8.12`:\n - [Add 8.11.4 release notes (#104276)](https://github.com/elastic/elasticsearch/pull/104276)\n\n<!--- Backport version: 9.2.1 -->\n\n### Questions ?\nPlease refer to the [Backport tool documentation](https://github.com/sqren/backport)",
      "base_ref": "8.12",
      "head_ref": "backport/8.12/pr-104276",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104283/comments"
    },
    {
      "number": 104282,
      "title": "[main] Add 8.11.4 release notes (#104276)",
      "state": "closed",
      "created_at": "2024-01-11T21:11:39Z",
      "updated_at": "2024-01-11T21:13:41Z",
      "closed_at": "2024-01-11T21:13:37Z",
      "merged_at": "2024-01-11T21:13:37Z",
      "author": "brianseeders",
      "labels": [
        "backport",
        "v8.13.0"
      ],
      "comments_count": 1,
      "review_comments_count": 0,
      "additions": 33,
      "deletions": 0,
      "changed_files": 2,
      "url": "https://github.com/elastic/elasticsearch/pull/104282",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104282",
      "commits": [
        {
          "sha": "f63e5f0af77d51e8f72670bb9aeceb4a616f7585",
          "message": "Add 8.11.4 release notes (#104276)\n\n(cherry picked from commit 7f6b3d9e80b7bba3c0884285a1466daac95513bd)\n\n# Conflicts:\n#\tdocs/reference/release-notes.asciidoc"
        },
        {
          "sha": "2915fa03001406d46581804370d5f7152d1e1032",
          "message": "Update release-notes.asciidoc"
        }
      ],
      "comments": [],
      "body": "# Backport\n\nThis will backport the following commits from `8.11` to `main`:\n - [Add 8.11.4 release notes (#104276)](https://github.com/elastic/elasticsearch/pull/104276)\n\n<!--- Backport version: 9.2.1 -->\n\n### Questions ?\nPlease refer to the [Backport tool documentation](https://github.com/sqren/backport)",
      "base_ref": "main",
      "head_ref": "backport/main/pr-104276",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104282/comments"
    },
    {
      "number": 104281,
      "title": "Data streams fix failure store delete",
      "state": "closed",
      "created_at": "2024-01-11T21:02:44Z",
      "updated_at": "2024-01-12T21:36:04Z",
      "closed_at": "2024-01-12T17:55:41Z",
      "merged_at": "2024-01-12T17:55:40Z",
      "author": "jbaiera",
      "labels": [
        ">bug",
        ":Data Management/Data streams",
        "Team:Data Management",
        "v8.12.1",
        "v8.13.0"
      ],
      "comments_count": 3,
      "review_comments_count": 3,
      "additions": 161,
      "deletions": 5,
      "changed_files": 6,
      "url": "https://github.com/elastic/elasticsearch/pull/104281",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104281",
      "commits": [
        {
          "sha": "4662bd1f3c36830919ac777673e56750acc5d13a",
          "message": "Fix data stream delete not removing failure stores"
        },
        {
          "sha": "15e61188c0e099af1c831b3bb1d1c8b6faa8383e",
          "message": "precommit"
        },
        {
          "sha": "fc74460dec8f2446b3749670dd39c53d62134637",
          "message": "Update docs/changelog/104281.yaml"
        },
        {
          "sha": "7e2a1aac930d72d9b7798738c5449b4e939c6331",
          "message": "Remove flag check for deleting failure stores"
        },
        {
          "sha": "ad7a3dd9a23f11166c65b67d81d38f5d7746c9d3",
          "message": "Merge branch 'main' into data-streams-fix-failure-store-delete"
        }
      ],
      "comments": [
        {
          "user": "dakrone",
          "body": "This is actually one of those rare cases I think we don't want to check the flag. For example, if someone were to set the flag to true (via system properties), then play with it, then set it back to false, deleting the data stream would leave the failure store indices hanging. Do you think we need the flag here?"
        },
        {
          "user": "jbaiera",
          "body": "I added it for consistency's sake. If you try this feature right now and then disable it afterward I'm pretty sure cluster state breaks to begin with since we conditionally execute the parsing code to pull this data based on the flag. I'd be ok with removing this flag check here because normal execution should see all this lists as empty. It makes me wonder if we should revisit how the cluster state parsing is handled."
        },
        {
          "user": "jbaiera",
          "body": "I went ahead and removed the flag, save us some keystrokes later."
        }
      ],
      "body": "Data streams that have failure stores configured do not currently delete them when the data stream is deleted. This PR adds the any failure store indices to the list of indices to be deleted when deleting a data stream.",
      "base_ref": "main",
      "head_ref": "data-streams-fix-failure-store-delete",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104281/comments"
    },
    {
      "number": 104279,
      "title": "Add checks for old cluster features in rolling upgrade tests",
      "state": "closed",
      "created_at": "2024-01-11T17:05:03Z",
      "updated_at": "2024-01-17T13:37:23Z",
      "closed_at": "2024-01-17T13:37:17Z",
      "merged_at": "2024-01-17T13:37:17Z",
      "author": "ldematte",
      "labels": [
        ">test",
        ":Core/Infra/Core",
        "Team:Core/Infra",
        "test-full-bwc",
        "v8.13.0"
      ],
      "comments_count": 4,
      "review_comments_count": 5,
      "additions": 139,
      "deletions": 42,
      "changed_files": 14,
      "url": "https://github.com/elastic/elasticsearch/pull/104279",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104279",
      "commits": [
        {
          "sha": "905c21270f4ddbe43059fe9f283f9779d4a4b202",
          "message": "Add checks for old cluster features in rolling upgrade tests\n\nAdd the ability to test for the original/old cluster features during a rolling upgrade"
        },
        {
          "sha": "9fa52df181d691ef28a75926394f0cb5adab906d",
          "message": "Merge branch 'main' into old-cluster-features"
        },
        {
          "sha": "0a9566d04772d8007084ac2fb739b0c9e1c7d254",
          "message": "Spotless + more versions replaced"
        },
        {
          "sha": "4e7591be0ae625ec957b494a629ee16e29f264f1",
          "message": "Merge branch 'old-cluster-features' of github.com:ldematte/elasticsearch into old-cluster-features"
        },
        {
          "sha": "f6f53cd54bf26cfe29bb45121d3f6f925bb0971c",
          "message": "Merge remote-tracking branch 'upstream/main' into old-cluster-features"
        },
        {
          "sha": "0c08ba2f747375682f3c0d316d283198f50da1bf",
          "message": "Fixes"
        },
        {
          "sha": "7cf7ee62097382c7516afb11ff439775ee7841df",
          "message": "More versions to features"
        },
        {
          "sha": "4e37a883bcdc8ca83dc31ced1f47023ae7456923",
          "message": "Merge remote-tracking branch 'upstream/main' into old-cluster-features"
        },
        {
          "sha": "04c6fbd764ef1878f6077d8b7554acea83125ff8",
          "message": "Moving ALL_FEATURES to ESRestTestCase (and make it private - only usage)"
        }
      ],
      "comments": [
        {
          "user": "thecoop",
          "body": "The clear is an `AfterClass`. So should this be `BeforeClass`?"
        },
        {
          "user": "thecoop",
          "body": "Does it make sense to have this defined here, now the interface is more complicated? It's only used in ESRestTestCase, and the implementation of `getAllSupportedFeatures` references its use. So I think this should instead be the initial instance of `ESRestTestCase.testFeatureService`"
        },
        {
          "user": "ldematte",
          "body": "That's a good point; I'll move it there."
        },
        {
          "user": "ldematte",
          "body": "It cannot be in `BeforeClass`, as it needs `testFeatureService` to be initialized - which for reasons happens in a `Before` method in the base class.\r\nBesides, it follows the same pattern as the other initialization functions in the test, like `extractOldIndexVersion`.\r\nMy understanding is that everything is initialized in `Before` (keeping track of the upgrade \"phase\"), and when only when all tests from all phases are done we cleanup (that's why `AfterClass`)"
        },
        {
          "user": "ldematte",
          "body": "I was also wondering if I should rename it to something like `UNINITIALIZED`, but decided to leave it as-is for now"
        }
      ],
      "body": "Add the ability to test for the original/old cluster features during a rolling upgrade",
      "base_ref": "main",
      "head_ref": "old-cluster-features",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104279/comments"
    },
    {
      "number": 104277,
      "title": "[ML] Refactor InferenceConfigUpdate for simpler changes to tokenization options",
      "state": "closed",
      "created_at": "2024-01-11T16:23:39Z",
      "updated_at": "2024-01-12T09:34:39Z",
      "closed_at": "2024-01-12T09:34:36Z",
      "merged_at": "2024-01-12T09:34:36Z",
      "author": "davidkyle",
      "labels": [
        ">refactoring",
        ":ml",
        "Team:ML",
        "v8.13.0"
      ],
      "comments_count": 3,
      "review_comments_count": 0,
      "additions": 614,
      "deletions": 556,
      "changed_files": 52,
      "url": "https://github.com/elastic/elasticsearch/pull/104277",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104277",
      "commits": [
        {
          "sha": "1f505d0f6383731ff3e60f2bfe674eab521d15ad",
          "message": "Add tokenisation update"
        },
        {
          "sha": "bf3b4243d16f19295950f816981040aeb15ee70c",
          "message": "check for empty"
        },
        {
          "sha": "ba9cbe61e9036476133fd22de01a325dccde9236",
          "message": "Merge branch 'main' into tokenisation-updates"
        }
      ],
      "comments": [],
      "body": "In order to update the truncation and span options for a model one must know both the task type and the tokenizer used:\r\n\r\n```\r\n\"inference_config\": {\r\n  \"text_expansion\": {\r\n    \"tokenization\": {\r\n       \"bert\": {\r\n         \"tuncate\": \"none\",\r\n         \"span\": 128\r\n      }\r\n    }\r\n  }\r\n}\r\n````\r\n\r\nAll tokenizers have `truncate` and `span` options, we would like to update those without knowledge of the tokenizer type or task type.\r\n\r\nPart of the problem is that the inference config update applies itself to concrete config class and returns a new instance of config class. But the actual config class knows best how to create new versions of itself. The main change in this PR is to reverse the order the updates are applied so that the config class applies the update and returns a new copy of itself with the updated settings. This changes makes it possible to update the tokenizer without knowledge of the tokenizer and task type.\r\n\r\nThis is large PR but the change is mainly moving the `InferenceConfigUpdate::apply(InferenceConfig)` method to `InferenceConfig::apply(InferenceConfigUpdate)`",
      "base_ref": "main",
      "head_ref": "tokenisation-updates",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104277/comments"
    },
    {
      "number": 104276,
      "title": "Add 8.11.4 release notes",
      "state": "closed",
      "created_at": "2024-01-11T16:16:15Z",
      "updated_at": "2024-01-11T21:13:02Z",
      "closed_at": "2024-01-11T16:37:43Z",
      "merged_at": "2024-01-11T16:37:43Z",
      "author": "brianseeders",
      "labels": [
        ">docs",
        "Team:Docs",
        "v8.11.4",
        "v8.11.5"
      ],
      "comments_count": 3,
      "review_comments_count": 0,
      "additions": 33,
      "deletions": 0,
      "changed_files": 2,
      "url": "https://github.com/elastic/elasticsearch/pull/104276",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104276",
      "commits": [
        {
          "sha": "7fe2977a8b56b4eeea9f8f2a57f3aa480299307a",
          "message": "Add 8.11.4 release notes"
        }
      ],
      "comments": [],
      "body": null,
      "base_ref": "8.11",
      "head_ref": "8-11-4-release-notes",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104276/comments"
    },
    {
      "number": 104275,
      "title": "Suppress this-escape warnings",
      "state": "closed",
      "created_at": "2024-01-11T16:09:43Z",
      "updated_at": "2024-01-11T23:50:47Z",
      "closed_at": "2024-01-11T23:49:56Z",
      "merged_at": "2024-01-11T23:49:56Z",
      "author": "benwtrent",
      "labels": [
        ">non-issue",
        ":Security/Authentication",
        "Team:Security",
        "auto-merge-without-approval",
        "v8.13.0"
      ],
      "comments_count": 3,
      "review_comments_count": 1,
      "additions": 1,
      "deletions": 0,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104275",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104275",
      "commits": [
        {
          "sha": "651609b8f2ce237e79c5cdf85f29945e67a50146",
          "message": "Suppress this-escape warnings"
        },
        {
          "sha": "2bd24a351d1df6c15969bce5284e5cc87c81d8fb",
          "message": "Apply suggestions from code review"
        },
        {
          "sha": "83e18f1c37ab2a08e1d98b0bbd7ab4cd3145554e",
          "message": "Merge branch 'main' into feature/fix-this-escape-agian"
        },
        {
          "sha": "8a9a664195badd20c54afaeca947cbbed940202d",
          "message": "Merge branch 'main' into feature/fix-this-escape-agian"
        }
      ],
      "comments": [
        {
          "user": "benwtrent",
          "body": "```suggestion\r\n```"
        }
      ],
      "body": "making JDK21+ happy",
      "base_ref": "main",
      "head_ref": "feature/fix-this-escape-agian",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104275/comments"
    },
    {
      "number": 104274,
      "title": "Add comma escape character",
      "state": "closed",
      "created_at": "2024-01-11T15:58:28Z",
      "updated_at": "2024-01-16T14:58:07Z",
      "closed_at": "2024-01-16T14:50:36Z",
      "merged_at": "2024-01-16T14:50:36Z",
      "author": "astefan",
      "labels": [
        ">enhancement",
        ">test",
        "Team:Analytics",
        ":Analytics/ES|QL",
        "v8.13.0"
      ],
      "comments_count": 3,
      "review_comments_count": 2,
      "additions": 93,
      "deletions": 22,
      "changed_files": 2,
      "url": "https://github.com/elastic/elasticsearch/pull/104274",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104274",
      "commits": [
        {
          "sha": "b1ee21827eea886b63f260421638ccf62aa85373",
          "message": "Add escape character for comma in CsvTestsDataLoader"
        },
        {
          "sha": "6a485176e592e1f6a0f59ecdb60a9712d10467ac",
          "message": "Merge branch 'main' of https://github.com/elastic/elasticsearch into add_comma_escape_csvtestloader"
        },
        {
          "sha": "7013afeb05087fbd55f6ee61c425641d1b1fa556",
          "message": "Handle escaped commas in .csv-spec values as well"
        },
        {
          "sha": "37c1f6c674e06e48d17a582a69957a77a5e2d029",
          "message": "Merge branch 'main' of https://github.com/elastic/elasticsearch into add_comma_escape_csvtestloader"
        },
        {
          "sha": "f9d92a1186845478f2c90c5c6ccb88c9491104ff",
          "message": "Merge branch 'main' of https://github.com/elastic/elasticsearch into add_comma_escape_csvtestloader"
        },
        {
          "sha": "2a5302da29d34e2abe74ca7ab060c1e53b21ee54",
          "message": "Fix"
        },
        {
          "sha": "beb1c6c80162e9758abc5d477c0a1198baf0ee6c",
          "message": "Small fix"
        },
        {
          "sha": "924753adead1eb5b4be9da87aa83b07ba80debb0",
          "message": "Merge branch 'main' of https://github.com/elastic/elasticsearch into add_comma_escape_csvtestloader"
        },
        {
          "sha": "4e7c76085c5a50be69fb20db6aeba8212e0207a2",
          "message": "Polish"
        },
        {
          "sha": "e9fe3c1e0727e36154d5f83126a3e6fb8ce32264",
          "message": "Merge branch 'main' of https://github.com/elastic/elasticsearch into add_comma_escape_csvtestloader"
        },
        {
          "sha": "9429e16b246df57eaa5587ed5d6fd84accd3f0b2",
          "message": "More comments"
        }
      ],
      "comments": [
        {
          "user": "astefan",
          "body": "This change comes as a consequence of `main` method not working anymore because of `Exception in thread \"main\" java.security.AccessControlException: access denied (\"org.elasticsearch.secure_sm.ThreadPermission\" \"modifyArbitraryThreadGroup\")`. The `main` doesn't work being executed from within IDE (run from gradle or as a Java class) or outside of it with gradle. The exception comes from randomization code inside Lucene\r\n\r\n```\r\n\tat org.apache.lucene.tests.util.LuceneTestCase.random(LuceneTestCase.java:800)\r\n\tat org.elasticsearch.test.ESTestCase.randomFrom(ESTestCase.java:1003)\r\n\tat org.elasticsearch.test.rest.ESRestTestCase.randomSupportedContentType(ESRestTestCase.java:2409)\r\n\tat org.elasticsearch.test.rest.ESRestTestCase.addXContentBody(ESRestTestCase.java:2413)\r\n\tat org.elasticsearch.test.rest.ESRestTestCase.newXContentRequest(ESRestTestCase.java:2426)\r\n\tat org.elasticsearch.test.rest.ESRestTestCase.createIndex(ESRestTestCase.java:1709)\r\n```"
        },
        {
          "user": "bpintea",
          "body": "👍 "
        }
      ],
      "body": "Add an escape character for CSV loading.\r\nChange the way indices are created when CsvTestsDataLoader is executed standalone as \"main\" class.",
      "base_ref": "main",
      "head_ref": "add_comma_escape_csvtestloader",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104274/comments"
    },
    {
      "number": 104272,
      "title": "ESQL: Harden async tests",
      "state": "closed",
      "created_at": "2024-01-11T15:55:43Z",
      "updated_at": "2024-01-11T16:37:12Z",
      "closed_at": "2024-01-11T16:36:49Z",
      "merged_at": "2024-01-11T16:36:49Z",
      "author": "nik9000",
      "labels": [
        ">test",
        "Team:Analytics",
        "auto-merge-without-approval",
        ":Analytics/ES|QL",
        "v8.13.0"
      ],
      "comments_count": 1,
      "review_comments_count": 0,
      "additions": 1,
      "deletions": 0,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104272",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104272",
      "commits": [
        {
          "sha": "0906d80ba4ce78568b446b08b22e60783d04d324",
          "message": "ESQL: Harden asyn tests\n\nI've seen errors in the async tests where they expect to return an `id`\nbut the results come back too fast! Well, this forces us to return the\n`id` even if we have the results. Then the test can happily fetch by the\n`id` every time.\n\nCloses #104251"
        }
      ],
      "comments": [],
      "body": "I've seen errors in the async tests where they expect to return an `id` but the results come back too fast! Well, this forces us to return the `id` even if we have the results. Then the test can happily fetch by the `id` every time.\r\n\r\nCloses #104251\r\n",
      "base_ref": "main",
      "head_ref": "esql_async_test_keep",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104272/comments"
    },
    {
      "number": 104271,
      "title": "Disable elser download test case in inf IT",
      "state": "closed",
      "created_at": "2024-01-11T15:47:16Z",
      "updated_at": "2024-01-11T17:19:30Z",
      "closed_at": "2024-01-11T17:19:29Z",
      "merged_at": "2024-01-11T17:19:29Z",
      "author": "maxhniebergall",
      "labels": [
        ">non-issue",
        ":ml",
        "Team:ML",
        "v8.13.0"
      ],
      "comments_count": 1,
      "review_comments_count": 0,
      "additions": 3,
      "deletions": 34,
      "changed_files": 2,
      "url": "https://github.com/elastic/elasticsearch/pull/104271",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104271",
      "commits": [
        {
          "sha": "9bc12668b6a9d07daf78fe6c25b3bb75337c8d0e",
          "message": "Disable elser download test case in inf IT"
        }
      ],
      "comments": [],
      "body": "In https://github.com/elastic/elasticsearch/pull/104230 we created an integration test case for ELSER CRUD, but to avoid causing excessive network traffic and cost, in this PR we disable this test. We will look into re-adding this test outside of CI. ",
      "base_ref": "main",
      "head_ref": "disableElserDownloadInfIT",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104271/comments"
    },
    {
      "number": 104270,
      "title": "Clean warnings in `IndicesOptionsTests` & `IndexNameExpressionResolverTests`",
      "state": "closed",
      "created_at": "2024-01-11T15:26:13Z",
      "updated_at": "2024-08-20T07:05:17Z",
      "closed_at": "2024-01-22T07:47:21Z",
      "merged_at": null,
      "author": "gmarouli",
      "labels": [
        ":Data Management/Indices APIs",
        ">refactoring",
        "Team:Data Management",
        "v8.13.0"
      ],
      "comments_count": 2,
      "review_comments_count": 4,
      "additions": 329,
      "deletions": 316,
      "changed_files": 2,
      "url": "https://github.com/elastic/elasticsearch/pull/104270",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104270",
      "commits": [
        {
          "sha": "a02a5728e28696f102d09a6b5e45d03cb02716d4",
          "message": "Clean up deprecated method usages"
        }
      ],
      "comments": [
        {
          "user": "nielsbauman",
          "body": "Is there a reason you do this instead of `assertEquals(..., ...)`? `ESTestCase` extends `org.junit.Assert`, which in turn implements `assertEquals`. That seems like a cleaner approach to me but maybe I'm missing something."
        },
        {
          "user": "gmarouli",
          "body": "It was marked as deprecated, this is why I did that:\r\n\r\n> Deprecated use org.hamcrest.MatcherAssert.assertThat()\r\n\r\nLet me confirm that my setup is correct, maybe something is wrongly linked?"
        },
        {
          "user": "nielsbauman",
          "body": "Yeah for me it also says that the original way is deprecated. My suggestion was that we do `assertEquals(indicesOptions2.ignoreUnavailable(), indicesOptions.ignoreUnavailable())`. That way, we don't have to import `org.hamcrest.MatcherAssert` (and it's a tiny bit shorter as we don't have to wrap the second argument with `equalTo(...)`). I would assume both approaches work the same, but I don't know that for sure."
        },
        {
          "user": "gmarouli",
          "body": "I will convert this to draft, and look into this a bit more. Thank you for the quick reactions!"
        }
      ],
      "body": "The tests `IndicesOptionsTests` & `IndexNameExpressionResolverTests` were a bit noisy with warnings, this PR addresses the majority of them by replacing the following method calls with other methods according to recent recommendations. We switched:\r\n\r\n-  `org.junit.Assert#assertThat(...)` to `org.hamcrest.MatcherAssert#assertThat(...)`\r\n- `new HashSet<>(Arrays.asList(...))` to `Set.of(..)`\r\n- `Array.asList(...)` to `List.of(...)`\r\n- `Collections.emptyList()` to `List.of()`",
      "base_ref": "main",
      "head_ref": "clean-indices-options-tests",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104270/comments"
    },
    {
      "number": 104269,
      "title": "ESQL: Support loading shapes from source into WKB blocks",
      "state": "closed",
      "created_at": "2024-01-11T15:17:39Z",
      "updated_at": "2024-01-23T13:54:57Z",
      "closed_at": "2024-01-17T13:55:38Z",
      "merged_at": "2024-01-17T13:55:37Z",
      "author": "iverase",
      "labels": [
        ">enhancement",
        ":Analytics/Geo",
        "Team:Analytics",
        ":Analytics/ES|QL",
        "v8.13.0"
      ],
      "comments_count": 5,
      "review_comments_count": 16,
      "additions": 1736,
      "deletions": 129,
      "changed_files": 49,
      "url": "https://github.com/elastic/elasticsearch/pull/104269",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104269",
      "commits": [
        {
          "sha": "71b91caffb5eaf7d1ce384fb5e0b57f8ab6d0f70",
          "message": "ESQL: Support loading points from source into WKB blocks"
        },
        {
          "sha": "f480de7ea3bd6435fe3ec40b21816b04e388217a",
          "message": "Update docs/changelog/104269.yaml"
        },
        {
          "sha": "afd77ff6d979642c9d3fe800479638ed32b61a29",
          "message": "spotless"
        },
        {
          "sha": "79e8e4a9ef4790a360a08f6f92dd3b6ec919a817",
          "message": "Merge branch 'shapesESQL' of github.com:iverase/elasticsearch into shapesESQL"
        },
        {
          "sha": "c447c9917e79840e5870671d2656e5615a071848",
          "message": "Merge remote-tracking branch 'upstream/main' into shapesESQL"
        },
        {
          "sha": "cc4c1ae8fae476a78aae7e7a93e0b622af358b7c",
          "message": "fix log"
        },
        {
          "sha": "54e5e6c58d9594fdd8edab29fdc1c1e18363ba40",
          "message": "fix yml test"
        },
        {
          "sha": "185a36005cd4cbb4651038c607a6d61f4a7a9c8e",
          "message": "Merge remote-tracking branch 'upstream/main' into shapesESQL"
        },
        {
          "sha": "94b90537f4bfad571c1e06f79bfb5e83098ce266",
          "message": "add missing tests"
        },
        {
          "sha": "748f4c8bb11100b7d1b77aa279ba7d5e6b807e27",
          "message": "Merge branch 'main' into shapesESQL"
        },
        {
          "sha": "66627515dcf312ee26b04135754ea7407b85b1c4",
          "message": "fix log"
        },
        {
          "sha": "59ed4c014471ce6c46e9ef3c0feabf2d082adeeb",
          "message": "Update x-pack/plugin/esql/src/main/java/org/elasticsearch/xpack/esql/planner/PlannerUtils.java\n\nCo-authored-by: Craig Taverner <craig@amanzi.com>"
        },
        {
          "sha": "7d8d8841598398153f7636962aa536c7ae0c3b3b",
          "message": "doh"
        },
        {
          "sha": "d931e3021c8e63e469d23ec837e5dcd66aa4b62d",
          "message": "Merge branch 'shapesESQL' of github.com:iverase/elasticsearch into shapesESQL"
        },
        {
          "sha": "ffeca756bb7e95975dda7adfe3456194610b290a",
          "message": "Merge branch 'main' into shapesESQL"
        },
        {
          "sha": "03406ad25b9c69f2bd6c1d93e424cf127908d858",
          "message": "add more tests"
        },
        {
          "sha": "324442bfd78c4f5c6268de21c8926f2713bbe22e",
          "message": "change to geo_shape and cartesian_shape"
        },
        {
          "sha": "378be099df5a9ad6f5e4ba1e59640186b4523a5f",
          "message": "Merge remote-tracking branch 'upstream/main' into shapesESQL"
        },
        {
          "sha": "99aa4dcfd680f7ecabf79307c0b4ccaa80ed238f",
          "message": "remove TODO"
        },
        {
          "sha": "e14e1c5dc0b7a0cd2b2c8b7914adfbf064a9c306",
          "message": "add missing check"
        },
        {
          "sha": "3e33b4b70e8207553b184b80227a894da071f48a",
          "message": "fix csv text loading"
        },
        {
          "sha": "e7fc088daae5b99098f3812c9f6d5cdd3ceafb2f",
          "message": "Merge remote-tracking branch 'upstream/main' into shapesESQL"
        }
      ],
      "comments": [
        {
          "user": "craigtaverner",
          "body": "Don't you mean shapes?"
        },
        {
          "user": "craigtaverner",
          "body": "All previous PRs I created used area \"ES|QL\", but perhaps if most future Geo work will be in ESQL, we should use area \"Geo\"?"
        },
        {
          "user": "craigtaverner",
          "body": "I think we can now delete AbstractPointFieldType, as I only created that class to implement the blockLoader for points only, and disable it for shapes. Now that it exists for shapes too, we can have all code there, I assume."
        },
        {
          "user": "craigtaverner",
          "body": "OK, I see now your comment that we do not support null-values for shapes. So that is one reason to keep this class."
        },
        {
          "user": "craigtaverner",
          "body": "Perhaps you meant to type Geometry instead of Cartesian?"
        },
        {
          "user": "craigtaverner",
          "body": "Would be nice to have equality and inequality tests on non-points too."
        },
        {
          "user": "craigtaverner",
          "body": "We could load the airports file here (but with header changed to geo_shape), and then add another test with polygons later."
        },
        {
          "user": "craigtaverner",
          "body": "I do not see `ToGeographyTests`"
        },
        {
          "user": "craigtaverner",
          "body": "I do not see `ToGeometryTests`"
        },
        {
          "user": "craigtaverner",
          "body": "```suggestion\r\n     * This specifically excludes spatial data types, which are not themselves sortable.\r\n```"
        },
        {
          "user": "craigtaverner",
          "body": "Perhaps this comment can be removed, as it was a placeholder for me to re-visit this code with the doc-values work, but that PR took another direction."
        },
        {
          "user": "craigtaverner",
          "body": "```suggestion\r\n```"
        },
        {
          "user": "craigtaverner",
          "body": "I guess we can also just use `EsqlDataTypes.isSpatial(dataType)` here too?"
        },
        {
          "user": "craigtaverner",
          "body": "Slightly awkward that the unsupported field is called `unsupported`, but on the other hand perhaps this field will never be supported, and this is perfect. 🤷 "
        },
        {
          "user": "craigtaverner",
          "body": "I presume we could use `ip_range` here too, as in the other tests?"
        },
        {
          "user": "nik9000",
          "body": ":heart:"
        }
      ],
      "body": "Similarly to https://github.com/elastic/elasticsearch/pull/103698, this PR adds support for reading geo_shape and shape fields into wkb blocks so they can use top project the data to the result of a ES|QL query.\r\n\r\nOne of the points for discussion in this PR is the naming use to the ES|QL fields where geo_shape has been renamed to geography and shape has been renamed to geometry, to follow more closely industry standards. Although this is debatable.\r\n\r\nNote to the reviewer: There is a limitation on csv test because they cannot deal with WKT,\r\n\r\nFixes #103586",
      "base_ref": "main",
      "head_ref": "shapesESQL",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104269/comments"
    },
    {
      "number": 104268,
      "title": "Remove one of two byte-size estimators in BulkRequest",
      "state": "open",
      "created_at": "2024-01-11T15:07:13Z",
      "updated_at": "2024-11-30T10:08:33Z",
      "closed_at": null,
      "merged_at": null,
      "author": "original-brownbear",
      "labels": [
        ">non-issue",
        ":Distributed Indexing/CRUD",
        "Team:Distributed (Obsolete)",
        "v9.0.0",
        "Team:Distributed Indexing"
      ],
      "comments_count": 3,
      "review_comments_count": 0,
      "additions": 5,
      "deletions": 15,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104268",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104268",
      "commits": [
        {
          "sha": "cf5d62169716b10e469c1f14bef80acdaaa9c8bc",
          "message": "Remove one of two byte-size estimators in BulkRequest\n\nThe removed one is quite expensive it turns out, taking up ~7% of the\nbulk request handling time for large bulk requests.\nThe value in `sizeInBytes` should be good enough as an estimate."
        },
        {
          "sha": "7853c77cc5d9cc05cbfaf799a3920aff4cdc8cc6",
          "message": "best of both worlds"
        },
        {
          "sha": "b90692e377881d5f4ae10b21644dd2f76a8efefb",
          "message": "Merge remote-tracking branch 'elastic/main' into iterator-ram-bytes-used"
        }
      ],
      "comments": [],
      "body": "The removed one is quite expensive it turns out, taking up ~7% of the bulk request handling time for large bulk requests. The value in `sizeInBytes` should be good enough as an estimate.\r\n",
      "base_ref": "main",
      "head_ref": "iterator-ram-bytes-used",
      "mergeable": true,
      "mergeable_state": "blocked",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104268/comments"
    },
    {
      "number": 104267,
      "title": "ESQL: Test all operators with breaker",
      "state": "closed",
      "created_at": "2024-01-11T14:51:56Z",
      "updated_at": "2024-01-12T12:58:12Z",
      "closed_at": "2024-01-12T12:58:00Z",
      "merged_at": "2024-01-12T12:58:00Z",
      "author": "nik9000",
      "labels": [
        ">test",
        "Team:Analytics",
        ":Analytics/ES|QL",
        "v8.13.0"
      ],
      "comments_count": 2,
      "review_comments_count": 0,
      "additions": 23,
      "deletions": 41,
      "changed_files": 5,
      "url": "https://github.com/elastic/elasticsearch/pull/104267",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104267",
      "commits": [
        {
          "sha": "a892f3cd685eecb7befd1bde82b9b1e078137da6",
          "message": "ESQL: Test all operators with breaker\n\nThis modifies the operator tests to *always* test with a breaker without\nthe ability to opt out. Previously three operations opted out:\n1. mv_expand never through exceptions even though it should. It was\n   using the block factory of the test blocks which didn't have a\n   breaker. I modified the test blocks to take a breaker so now it\n   properly breaks.\n2. reading values was throwing strange exceptions when I first wrote\n   these tests and I didn't have time to get it work. I don't 100%\n   recall what those exceptions were but they seem to be gone now. Good\n   fairies?\n3. The \"project\" operator doesn't allocate much of anything - it just\n   drops or shifts block around. But the work I did to move the test\n   blocks under the limit makes it so the test itself can throw. That's\n   good enough for this."
        }
      ],
      "comments": [],
      "body": "This modifies the operator tests to *always* test with a breaker without the ability to opt out. Previously three operations opted out:\r\n1. mv_expand never through exceptions even though it should. It was using the block factory of the test blocks which didn't have a breaker. I modified the test blocks to take a breaker so now it properly breaks.\r\n2. reading values was throwing strange exceptions when I first wrote these tests and I didn't have time to get it work. I don't 100% recall what those exceptions were but they seem to be gone now. Good fairies?\r\n3. The \"project\" operator doesn't allocate much of anything - it just drops or shifts block around. But the work I did to move the test blocks under the limit makes it so the test itself can throw. That's good enough for this.\r\n",
      "base_ref": "main",
      "head_ref": "esql_remaining_breakers",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104267/comments"
    },
    {
      "number": 104266,
      "title": "Make `recoverLocallyUpToGlobalCheckpoint` async",
      "state": "closed",
      "created_at": "2024-01-11T14:48:21Z",
      "updated_at": "2024-06-17T06:17:17Z",
      "closed_at": "2024-01-12T09:24:18Z",
      "merged_at": "2024-01-12T09:24:18Z",
      "author": "DaveCTurner",
      "labels": [
        ">non-issue",
        ":Distributed Indexing/Recovery",
        "Team:Distributed (Obsolete)",
        "v8.13.0"
      ],
      "comments_count": 2,
      "review_comments_count": 1,
      "additions": 214,
      "deletions": 90,
      "changed_files": 7,
      "url": "https://github.com/elastic/elasticsearch/pull/104266",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104266",
      "commits": [
        {
          "sha": "ff16c4d88b4fa6e243155503db92bdb2746dba84",
          "message": "Make `recoverLocallyUpToGlobalCheckpoint` async\n\nThe flush at the end of translog recovery is potentially async, which we\nadapt into today's sync `recoverLocallyUpToGlobalCheckpoint` by blocking\non a future. This is far from ideal, so with this commit we make it\nfully non-blocking."
        },
        {
          "sha": "056df07d23fc602017937e16c72dcb070ce99a63",
          "message": "Assert mutex not held in more places"
        },
        {
          "sha": "75a9b48bcaeecd33f1d1f4b9da7dbda9f4d0e96f",
          "message": "Wildcard"
        },
        {
          "sha": "2db5b5f975f11ac48d242c26a5375d23a549d2d9",
          "message": "Moar wildcard"
        },
        {
          "sha": "bec465f76c399f4e0012504bc1f859fa3e1acab1",
          "message": "Merge branch 'main' into 2024/01/11/async-recoverLocallyUpToGlobalCheckpoint"
        },
        {
          "sha": "53fbb748eb8331887d35d395147194033098c7ef",
          "message": "Test resource creation failure too"
        }
      ],
      "comments": [
        {
          "user": "idegtiarenko",
          "body": ":+1: "
        }
      ],
      "body": "The flush at the end of translog recovery is potentially async, which we\r\nadapt into today's sync `recoverLocallyUpToGlobalCheckpoint` by blocking\r\non a future. This is far from ideal, so with this commit we make it\r\nfully non-blocking.",
      "base_ref": "main",
      "head_ref": "2024/01/11/async-recoverLocallyUpToGlobalCheckpoint",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104266/comments"
    },
    {
      "number": 104265,
      "title": "Cleanup `OperationModeUpdateTask`",
      "state": "closed",
      "created_at": "2024-01-11T14:21:25Z",
      "updated_at": "2024-01-12T11:36:13Z",
      "closed_at": "2024-01-12T11:36:10Z",
      "merged_at": "2024-01-12T11:36:10Z",
      "author": "nielsbauman",
      "labels": [
        ">bug",
        ":Data Management/ILM+SLM",
        "Team:Data Management",
        "v8.13.0"
      ],
      "comments_count": 2,
      "review_comments_count": 7,
      "additions": 16,
      "deletions": 29,
      "changed_files": 4,
      "url": "https://github.com/elastic/elasticsearch/pull/104265",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104265",
      "commits": [
        {
          "sha": "92601645355d7209e29c54b2c139af648a362b14",
          "message": "Remove `hashCode` impl in `OperationModeUpdateTask`\n\nThe `hashCode` impl called `super.hashCode` which effectively\n(incorrectly) called `Object.hashCode`. The hash code didn't\nseem to be used anywhere, so removing made more sense than fixing."
        },
        {
          "sha": "746ab4f05ffd72da3e8c10158df3b9b26dc5c533",
          "message": "Remove equals"
        },
        {
          "sha": "3720f5827aea5e91d79c87d4099515c94c9870ee",
          "message": "Update changelog"
        },
        {
          "sha": "283ec31771afd5cd61d67b736f88ad95302c2eeb",
          "message": "Use pattern matching instead of casting"
        },
        {
          "sha": "02c56bcc605b2b52c2f99a0a7111de74d6aaeec4",
          "message": "Add extra equals check"
        }
      ],
      "comments": [
        {
          "user": "gmarouli",
          "body": "Nit: You could mention here `equals` and `hashCode` to be a bit more specific."
        },
        {
          "user": "gmarouli",
          "body": "[Thinking out loud] If I am not mistaken, now the test is a bit weaker than before, we do not verify anymore that the mode in `OperationModeUpdateTask` is `STOPPED`. \r\n\r\nI still think removing the equals is a good idea but maybe we can think of an alternative way to test that the operation mode that was given as an argument is correct. For example, we could inspect the argument via `invocationOnMock.getArguments()`."
        },
        {
          "user": "gmarouli",
          "body": "Here you could use the pattern matching feature:\r\n```\r\nif (updateTask instanceof OperationModeUpdateTask operationModeUpdateTask) {\r\n    task.set(operationModeUpdateTask);\r\n}\r\n```"
        },
        {
          "user": "nielsbauman",
          "body": "Yeah I thought about that as well. The reason I still did it this way was that we do the same [here](https://github.com/nielsbauman/elasticsearch/blob/874d0311d034420828ae06d2df58306cdcc6bb66/x-pack/plugin/ilm/src/test/java/org/elasticsearch/xpack/ilm/IndexLifecycleServiceTests.java#L340-L340). I initially didn't dive into the functionality itself to check whether we actually need to check the mode of `OperationModeUpdateTask` in that parameter.\r\n\r\nHowever, now that I look at the code, it looks like [this](https://github.com/nielsbauman/elasticsearch/blob/874d0311d034420828ae06d2df58306cdcc6bb66/x-pack/plugin/ilm/src/main/java/org/elasticsearch/xpack/ilm/IndexLifecycleService.java#L251-L251) is the only place we call `submitUnbatchedStateUpdateTask` so I'd argue that it doesn't really make sense to check for the mode in this case. What do you think?"
        },
        {
          "user": "nielsbauman",
          "body": "Ah cool, didn't know that feature yet, thanks!"
        },
        {
          "user": "gmarouli",
          "body": "\r\n\r\n\r\n\r\n> Yeah I thought about that as well. The reason I still did it this way was that we do the same [here](https://github.com/nielsbauman/elasticsearch/blob/874d0311d034420828ae06d2df58306cdcc6bb66/x-pack/plugin/ilm/src/test/java/org/elasticsearch/xpack/ilm/IndexLifecycleServiceTests.java#L340-L340). I initially didn't dive into the functionality itself to check whether we actually need to check the mode of `OperationModeUpdateTask` in that parameter.\r\n\r\nI would say that what we do there is indeed correct, both tests are checking if the ILM stopping task is submitted successfully. So, checking that the task is a `STOPPED` task, I would say is a core part of the test.\r\n\r\nConsider it this way, in the new version, this test checks that this path of the code submits any `OperationModeUpdateTask` and not necessarily a `STOPPED` one, so the assertion does not satisfy what the name of the test says it's testing `verifyCanStopWithStep`.\r\n\r\n> However, now that I look at the code, it looks like [this](https://github.com/nielsbauman/elasticsearch/blob/874d0311d034420828ae06d2df58306cdcc6bb66/x-pack/plugin/ilm/src/main/java/org/elasticsearch/xpack/ilm/IndexLifecycleService.java#L251-L251) is the only place we call `submitUnbatchedStateUpdateTask` so I'd argue that it doesn't really make sense to check for the mode in this case. What do you think?\r\n\r\nI see your point, you can see from the code how it's called so you know that it's already covered. But think about this, [stopILM](https://github.com/nielsbauman/elasticsearch/blob/874d0311d034420828ae06d2df58306cdcc6bb66/x-pack/plugin/ilm/src/main/java/org/elasticsearch/xpack/ilm/IndexLifecycleService.java#L251-L251) is a private method. It could change at any moment and this test will not be able to catch a bug that will be introduced in the future. \r\n\r\nDo the above make sense?\r\n\r\n"
        },
        {
          "user": "nielsbauman",
          "body": "Ah my bad, I missed [this](https://github.com/nielsbauman/elasticsearch/blob/e1f2a6a101890163f8bf659fb953d39540b5682d/x-pack/plugin/ilm/src/test/java/org/elasticsearch/xpack/ilm/IndexLifecycleServiceTests.java#L336-L336) line. Now I see that they do that check in the other test as well :).\r\n\r\nWill update this test as well, thanks!"
        }
      ],
      "body": "The `hashCode` implementation called `super.hashCode` which effectively (incorrectly) called `Object.hashCode`. The hash code didn't seem to be used anywhere, so removing made more sense than fixing.\r\n\r\nThe `equals` also looked a bit off as it did include `priority` from the parent class, but not `timeout`. Rather than implementing a proper equals method (in both `OperationModeUpdateTask` and `ClusterStateUpdateTask`, it's parent), I decided to just remove the method as I could only find one real use case, which was inside a test.\r\n\r\nCloses #100871",
      "base_ref": "main",
      "head_ref": "cleanup-update-task",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104265/comments"
    },
    {
      "number": 104263,
      "title": "[7.17] Fix cancellation order in CancellableRateLimitedFluxIterator (#104259)",
      "state": "closed",
      "created_at": "2024-01-11T14:12:08Z",
      "updated_at": "2024-01-11T14:38:17Z",
      "closed_at": "2024-01-11T14:38:17Z",
      "merged_at": "2024-01-11T14:38:17Z",
      "author": "fcofdez",
      "labels": [
        ">bug",
        ":Distributed Coordination/Snapshot/Restore",
        "backport",
        "Team:Distributed (Obsolete)",
        "v7.17.17"
      ],
      "comments_count": 0,
      "review_comments_count": 0,
      "additions": 8,
      "deletions": 2,
      "changed_files": 2,
      "url": "https://github.com/elastic/elasticsearch/pull/104263",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104263",
      "commits": [
        {
          "sha": "b28dbb47459a76bb02b1945e2405a08231547806",
          "message": "Fix cancellation order in CancellableRateLimitedFluxIterator (#104259)\n\nCloses #103054"
        }
      ],
      "comments": [],
      "body": "Backports the following commits to 7.17:\n - Fix cancellation order in CancellableRateLimitedFluxIterator (#104259)",
      "base_ref": "7.17",
      "head_ref": "backport/7.17/pr-104259",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104263/comments"
    },
    {
      "number": 104262,
      "title": "[Docs] Add connectors links, cleanup connectors API docs",
      "state": "closed",
      "created_at": "2024-01-11T14:06:48Z",
      "updated_at": "2024-01-12T11:15:04Z",
      "closed_at": "2024-01-12T11:13:34Z",
      "merged_at": "2024-01-12T11:13:34Z",
      "author": "leemthompo",
      "labels": [
        ">docs",
        "Team:Docs",
        "v8.12.0",
        "v8.13.0"
      ],
      "comments_count": 6,
      "review_comments_count": 10,
      "additions": 49,
      "deletions": 45,
      "changed_files": 21,
      "url": "https://github.com/elastic/elasticsearch/pull/104262",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104262",
      "commits": [
        {
          "sha": "85e35a824ba4fc120fac0e67c8b48f4373efb2a5",
          "message": "[Docs] Add connectors links"
        },
        {
          "sha": "5d5979ff4bbf97892c00b62cfc4533e1600b4b72",
          "message": "🧹 Cleanup abbreviations, add missing tech preview labels"
        },
        {
          "sha": "11e05683fde2fd05f12c4e2bab0db176ea2aa2b4",
          "message": "Unify remaining tech preview, abbreviations, update CLI verbiage"
        },
        {
          "sha": "13140f31deda1b4c079c87c0ea035943f8e97bad",
          "message": "Unify remaining tech preview, abbreviations"
        }
      ],
      "comments": [
        {
          "user": "jedrazb",
          "body": "If we want to follow this pattern, there are couple more files to change:\r\n- `delete-connector-api.asciidoc`\r\n- `delete-connector-sync-job-api.asciidoc`\r\n- `list-connectors-api.asciidoc`\r\n- `list-connector-sync-jobs-api.asciidoc`\r\n\r\n"
        },
        {
          "user": "jedrazb",
          "body": "Why are we getting rid of the leading heading element on the website? Search engines make use of it for ranking, so that when someone types `connector apis` the title (here `<h2>`) helps. \r\n\r\nI see this present for other apis: https://www.elastic.co/guide/en/elasticsearch/reference/master/esql-apis.html"
        },
        {
          "user": "jedrazb",
          "body": "Ohh I still see the title in preview, is it some trick you used?? 😮 "
        },
        {
          "user": "jedrazb",
          "body": "I feel like this tip is provided without necessary context. \r\n\r\nWe start this doc page with \r\n\r\n> The connector and sync jobs API provides a convenient way to create and manage Elastic connectors and sync jobs\r\n\r\nbut then the tip says to use CLI. I'm confused what we are trying to communicate here. \r\n\r\n"
        },
        {
          "user": "jedrazb",
          "body": "Rather than \"programatic\" I would say sth like:\r\n> We also offer connector client to manage connectors and sync jobs through a command-line interface"
        },
        {
          "user": "leemthompo",
          "body": "Did I not get all these? 😃 :cat_furiously_typing:"
        },
        {
          "user": "leemthompo",
          "body": "haha no it's just abbreviation for TOC in case the title is extra long, but it's unnecessary in this instance"
        },
        {
          "user": "leemthompo",
          "body": "@jedrazb the idea is really to just make folks aware of the CLI option, but if you feel like it's not super helpful we can remove it for the moment. Let me know what you think."
        },
        {
          "user": "leemthompo",
          "body": "Updated to this in meantime, so it's more of just a signpost without confusing verbiage:\r\n\r\n```We also have a command-line interface for Elastic connectors. Learn more in the https://github.com/elastic/connectors/blob/main/docs/CLI.md[elastic/connectors] repository.```"
        },
        {
          "user": "jedrazb",
          "body": "That's much better IMO, since we are explicitly saying it's command line interface. Thank you!"
        }
      ],
      "body": "Add couple handy links. Anywhere else we'd like to point to?\r\n\r\n🚗 [🧹 Cleanup abbreviations, add missing tech preview labels](https://github.com/elastic/elasticsearch/pull/104262/commits/5d5979ff4bbf97892c00b62cfc4533e1600b4b72)",
      "base_ref": "main",
      "head_ref": "connectors-links",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104262/comments"
    },
    {
      "number": 104261,
      "title": "Move some test-only parsing code to test modules",
      "state": "closed",
      "created_at": "2024-01-11T13:47:01Z",
      "updated_at": "2024-11-30T10:08:37Z",
      "closed_at": "2024-01-12T15:41:37Z",
      "merged_at": "2024-01-12T15:41:37Z",
      "author": "original-brownbear",
      "labels": [
        ">non-issue",
        ":Core/Infra/Core",
        "Team:Core/Infra",
        "auto-merge-without-approval",
        "v8.13.0"
      ],
      "comments_count": 2,
      "review_comments_count": 0,
      "additions": 403,
      "deletions": 467,
      "changed_files": 18,
      "url": "https://github.com/elastic/elasticsearch/pull/104261",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104261",
      "commits": [
        {
          "sha": "51e157054ce918ca51be05f40eca2230bf31712b",
          "message": "Move some test-only parsing code to test modules\n\nNone of this code needs to live in the prod classes, moving it over to\nthe test code where its used."
        },
        {
          "sha": "1332b81e1a0a30ff6deee38cccf914e1f59d2ec2",
          "message": "Merge remote-tracking branch 'elastic/main' into move-test-parsing-code"
        }
      ],
      "comments": [],
      "body": "None of this code needs to live in the prod classes, moving it over to the test code where its used.\r\n",
      "base_ref": "main",
      "head_ref": "move-test-parsing-code",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104261/comments"
    },
    {
      "number": 104260,
      "title": "[ML] Refactor assignment planner code",
      "state": "closed",
      "created_at": "2024-01-11T13:36:41Z",
      "updated_at": "2024-01-12T10:00:24Z",
      "closed_at": "2024-01-12T10:00:19Z",
      "merged_at": "2024-01-12T10:00:19Z",
      "author": "valeriy42",
      "labels": [
        ">non-issue",
        ">refactoring",
        ":ml",
        "Team:ML",
        "v8.13.0"
      ],
      "comments_count": 1,
      "review_comments_count": 0,
      "additions": 14,
      "deletions": 27,
      "changed_files": 5,
      "url": "https://github.com/elastic/elasticsearch/pull/104260",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104260",
      "commits": [
        {
          "sha": "d6be4fa06b41475bd2dae846dd49b271c146eef6",
          "message": "refactor public account memory"
        },
        {
          "sha": "18bfbb48f73737fabe1970ca0f3dee664a0fcec7",
          "message": "refactoring"
        },
        {
          "sha": "ea317c9a57e0d5c81e76fd4b876430710f1111f5",
          "message": "remove issue references"
        },
        {
          "sha": "a701858ef559f495cd3ba982ccccc1821d0e32d4",
          "message": "Merge branch 'main' of https://github.com/elastic/elasticsearch into is-101612"
        }
      ],
      "comments": [],
      "body": "This PR  simplifies the code in a few places. In other places where I had the TODO comment, the possible simplification would lead to undesired consequences, so I removed the TODO comment with the reference to issue #101612.\r\n\r\nCloses #101612 ",
      "base_ref": "main",
      "head_ref": "is-101612",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104260/comments"
    },
    {
      "number": 104259,
      "title": "Fix cancellation order in CancellableRateLimitedFluxIterator",
      "state": "closed",
      "created_at": "2024-01-11T13:12:09Z",
      "updated_at": "2024-01-11T14:12:23Z",
      "closed_at": "2024-01-11T14:10:16Z",
      "merged_at": "2024-01-11T14:10:16Z",
      "author": "fcofdez",
      "labels": [
        ">bug",
        ":Distributed Coordination/Snapshot/Restore",
        "Team:Distributed (Obsolete)",
        "auto-backport",
        "v7.17.17",
        "v8.13.0"
      ],
      "comments_count": 3,
      "review_comments_count": 0,
      "additions": 8,
      "deletions": 2,
      "changed_files": 2,
      "url": "https://github.com/elastic/elasticsearch/pull/104259",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104259",
      "commits": [
        {
          "sha": "a318cadcacdcd1d8a7533b8985d59114eec5f0d4",
          "message": "Fix cancellation order in CancellableRateLimitedFluxIterator\n\nCloses #103054"
        },
        {
          "sha": "0d953eb41da9d5fe1247363a0ca071390cad708a",
          "message": "Update docs/changelog/104259.yaml"
        }
      ],
      "comments": [],
      "body": "Closes #103054\r\n\r\n",
      "base_ref": "main",
      "head_ref": "fix-cancellation-order-flux",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104259/comments"
    },
    {
      "number": 104258,
      "title": "Encapsulate recoverLocallyUpToGlobalCheckpoint in tests",
      "state": "closed",
      "created_at": "2024-01-11T11:54:03Z",
      "updated_at": "2024-06-17T06:17:24Z",
      "closed_at": "2024-01-11T12:47:00Z",
      "merged_at": "2024-01-11T12:47:00Z",
      "author": "DaveCTurner",
      "labels": [
        ">test",
        ":Distributed Indexing/Recovery",
        "Team:Distributed (Obsolete)",
        "auto-merge-without-approval",
        "v8.13.0"
      ],
      "comments_count": 1,
      "review_comments_count": 0,
      "additions": 13,
      "deletions": 9,
      "changed_files": 3,
      "url": "https://github.com/elastic/elasticsearch/pull/104258",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104258",
      "commits": [
        {
          "sha": "3804e809e22fbe027e9ad1f200889f481ce76bba",
          "message": "Encapsulate recoverLocallyUpToGlobalCheckpoint in tests\n\nWe call `IndexShard#recoverLocallyUpToGlobalCheckpoint` in a synchronous\nway in various tests. This commit encapsulates all these calls in a\nutility method so that we can adapt it into an async API without masses\nof noise."
        }
      ],
      "comments": [],
      "body": "We call `IndexShard#recoverLocallyUpToGlobalCheckpoint` in a synchronous\r\nway in various tests. This commit encapsulates all these calls in a\r\nutility method so that we can adapt it into an async API without masses\r\nof noise.",
      "base_ref": "main",
      "head_ref": "2024/01/11/encapsulate-test-recoverLocallyUpToGlobalCheckpoint",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104258/comments"
    },
    {
      "number": 104257,
      "title": "Add names of \"regular\" cluster features to extracted feature metadata",
      "state": "closed",
      "created_at": "2024-01-11T11:51:22Z",
      "updated_at": "2024-01-11T15:09:09Z",
      "closed_at": "2024-01-11T15:09:09Z",
      "merged_at": null,
      "author": "ldematte",
      "labels": [
        ">test",
        ":Core/Infra/Core",
        "Team:Core/Infra",
        "v8.13.0"
      ],
      "comments_count": 3,
      "review_comments_count": 7,
      "additions": 194,
      "deletions": 65,
      "changed_files": 6,
      "url": "https://github.com/elastic/elasticsearch/pull/104257",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104257",
      "commits": [
        {
          "sha": "21c9d5fc8a11321a058fcf83753424ca96c837a7",
          "message": "Add regular feature names to feature metadata extraction.\n\nPlus, fix logic to detect if a feature is \"off\" or \"non-existing\" (wrong, non-existing id). This works only for non-legacy tests, otherwise we log a warning and skip the check."
        },
        {
          "sha": "6334a441fd6fb251f7810bb16eebb0801ae7bbb6",
          "message": "Merge branch 'main' into feature-names-metadata-extractor"
        }
      ],
      "comments": [
        {
          "user": "thecoop",
          "body": "Can use `File.pathSeparator` instead"
        },
        {
          "user": "thecoop",
          "body": "Shouldn't be checking against concrete types - should be `Collection<?>` instead"
        },
        {
          "user": "thecoop",
          "body": "Use `Comparator.naturalOrder()` again"
        },
        {
          "user": "thecoop",
          "body": "Using concrete type again"
        },
        {
          "user": "thecoop",
          "body": "Do we need to catch & hide IOException here? Can't it just propagate?"
        },
        {
          "user": "thecoop",
          "body": "Why a biconsumer here? Why not return `Tuple<Map<,>, Set<>>`?"
        },
        {
          "user": "ldematte",
          "body": "I don't like tuples, they are too \"opaque\" - they make it difficult to tell what is what and to see types"
        }
      ],
      "body": "Today we extract all historical features to a JSON map that is parsed by ESRestTestCase to provide info about historical features. \r\nThis PR adds to that map the list of all names (Ids) of regular features too, so we can reliably raise an error if a feature is not defined.\r\n\r\nThe logic we have today to detect if a feature is \"off\" or \"non-existing\" (wrong, non-existing id) is flawed and works only for historical features. This fixes it. The distinction works only for non-legacy tests; for legacy tests, we log a warning and skip the check.",
      "base_ref": "main",
      "head_ref": "feature-names-metadata-extractor",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104257/comments"
    },
    {
      "number": 104256,
      "title": "[8.12] [Connector API] Fix bug in configuration validation parser (#104198)",
      "state": "closed",
      "created_at": "2024-01-11T11:20:02Z",
      "updated_at": "2024-01-11T12:12:14Z",
      "closed_at": "2024-01-11T12:11:50Z",
      "merged_at": "2024-01-11T12:11:50Z",
      "author": "jedrazb",
      "labels": [
        ">bug",
        "backport",
        "auto-merge-without-approval",
        ":EnterpriseSearch/Application",
        "Team:Enterprise Search",
        "v8.12.1"
      ],
      "comments_count": 0,
      "review_comments_count": 0,
      "additions": 114,
      "deletions": 11,
      "changed_files": 5,
      "url": "https://github.com/elastic/elasticsearch/pull/104256",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104256",
      "commits": [
        {
          "sha": "be05c58fb9ff650026bb1dc4e9233d8c1235919e",
          "message": "[Connector API] Fix bug in configuration validation parser (#104198)"
        }
      ],
      "comments": [],
      "body": "Backports the following commits to 8.12:\n - [Connector API] Fix bug in configuration validation parser (#104198)",
      "base_ref": "8.12",
      "head_ref": "backport/8.12/pr-104198",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104256/comments"
    },
    {
      "number": 104255,
      "title": "Add documentation for Query User API",
      "state": "closed",
      "created_at": "2024-01-11T11:01:21Z",
      "updated_at": "2024-01-30T10:27:25Z",
      "closed_at": "2024-01-30T10:27:25Z",
      "merged_at": "2024-01-30T10:27:25Z",
      "author": "jfreden",
      "labels": [
        ">docs",
        ">non-issue",
        ":Security/Security",
        "Team:Docs",
        "Team:Security",
        "v8.13.0"
      ],
      "comments_count": 6,
      "review_comments_count": 3,
      "additions": 334,
      "deletions": 0,
      "changed_files": 3,
      "url": "https://github.com/elastic/elasticsearch/pull/104255",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104255",
      "commits": [
        {
          "sha": "acc56cdda6ecd523c4197601bbf525f3e5b5e7b6",
          "message": "Add documentation for Query User API"
        },
        {
          "sha": "f005486fdd74300bb2f8dd5c0085025f28af92ac",
          "message": "fixup! Minor fixes"
        },
        {
          "sha": "b005a4913d683f62656f7271e449de6d9521baf7",
          "message": "fixup!"
        },
        {
          "sha": "77d2901451dcdad312ddba0f4b2f40b33e427aa8",
          "message": "Update docs/reference/rest-api/security/query-user.asciidoc\n\nCo-authored-by: Nikolaj Volgushev <n1v0lg@users.noreply.github.com>"
        },
        {
          "sha": "54ff0ea5bdbb6b4ada80f3f1da300ab9cd746e6d",
          "message": "fixup! CI"
        },
        {
          "sha": "49b1f25e9422bdbe0f42fef3b6948976d51a259f",
          "message": "fixup! CI"
        },
        {
          "sha": "2c6304e8523f16235ba11bf85305db50eb5f51aa",
          "message": "fixup! CI"
        },
        {
          "sha": "de33255176b3276acb48339afb6f521b56a8b67d",
          "message": "fixup! CI"
        }
      ],
      "comments": [
        {
          "user": "n1v0lg",
          "body": "```suggestion\r\n* To use this API, you must have at least the  `read_security` cluster privilege.\r\n```"
        },
        {
          "user": "n1v0lg",
          "body": "I did not dig into the CI failure, but it's likely related to the missing test setup here. Doc tests are pretty finicky but could be worth working on here. \r\n\r\nIt's possible to set up actual users under the hood by adding setup calls (grep  for `// TEST[setup:jacknich_user]` in  `get-users.asciidoc` and the test setup for it (https://github.com/elastic/elasticsearch/blob/4f4e6133e1e29af1945f066565d62435f3a6bccf/docs/build.gradle#L1770).\r\n\r\nWe could do this for good old jacknich and one more user. Then we can assert on the actual results throughout the docs file (using `get-users` as a reference for how that works). \r\n\r\nWould you be up for adding that?  "
        },
        {
          "user": "jfreden",
          "body": "Thanks! Took some time to figure this out. Looks like it's working now. Ended up adding it to all queries except  to the more complex one since it requires 5 users. "
        }
      ],
      "body": "Adds documentation for the new Query User API introduced in https://github.com/elastic/elasticsearch/pull/104033.",
      "base_ref": "main",
      "head_ref": "add-doc-query-users",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104255/comments"
    },
    {
      "number": 104254,
      "title": "Clean up start-recovery sequence",
      "state": "closed",
      "created_at": "2024-01-11T11:00:34Z",
      "updated_at": "2024-06-17T06:17:33Z",
      "closed_at": "2024-01-11T13:04:40Z",
      "merged_at": "2024-01-11T13:04:40Z",
      "author": "DaveCTurner",
      "labels": [
        ":Distributed Indexing/Recovery",
        ">refactoring",
        "Team:Distributed (Obsolete)",
        "v8.13.0"
      ],
      "comments_count": 1,
      "review_comments_count": 0,
      "additions": 26,
      "deletions": 19,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104254",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104254",
      "commits": [
        {
          "sha": "9f8b039d660167a2b47d47ec623cebaa379af994",
          "message": "Clean up start-recovery sequence\n\nIt's a little hard to see that `IndexShard#preRecovery` happens before\nthe rest of the pre-recovery bootstrapping steps, and it's quite a noisy\nchange to make `IndexShard#recoverLocallyUpToGlobalCheckpoint` async\nbecause of how this is written today. This commit refactors things to\nshow the steps in order and set up for an asyncification follow-up."
        },
        {
          "sha": "17424f459f0e8a0764162c87c978975748902312",
          "message": "Merge branch 'main' into 2024/01/11/start-recovery-sequence"
        }
      ],
      "comments": [],
      "body": "It's a little hard to see that `IndexShard#preRecovery` happens before\r\nthe rest of the pre-recovery bootstrapping steps, and it's quite a noisy\r\nchange to make `IndexShard#recoverLocallyUpToGlobalCheckpoint` async\r\nbecause of how this is written today. This commit refactors things to\r\nshow the steps in order and set up for an asyncification follow-up.",
      "base_ref": "main",
      "head_ref": "2024/01/11/start-recovery-sequence",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104254/comments"
    },
    {
      "number": 104253,
      "title": "Set read timeout for fetching IMDSv2 token",
      "state": "closed",
      "created_at": "2024-01-11T10:48:47Z",
      "updated_at": "2024-01-16T09:19:02Z",
      "closed_at": "2024-01-16T09:12:46Z",
      "merged_at": "2024-01-16T09:12:46Z",
      "author": "arteam",
      "labels": [
        ">enhancement",
        ":Distributed Coordination/Discovery-Plugins",
        "Team:Distributed (Obsolete)",
        "v8.13.0"
      ],
      "comments_count": 4,
      "review_comments_count": 5,
      "additions": 34,
      "deletions": 2,
      "changed_files": 4,
      "url": "https://github.com/elastic/elasticsearch/pull/104253",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104253",
      "commits": [
        {
          "sha": "077d2710845d2797ed5f9d7660475576db0eb139",
          "message": "Set read timeout for fetching IMDSv2 token\n\nUse the timeout set by AWS_METADATA_SERVICE_TIMEOUT environment variable.\n\nhttps://docs.aws.amazon.com/sdkref/latest/guide/feature-ec2-instance-metadata.html"
        },
        {
          "sha": "612e7f175f7083d613517f97dee6c027538aa8f3",
          "message": "Merge branch 'main' into IMDSv2-add-read-timeout"
        },
        {
          "sha": "04237ebc9f63c4d75df6bc7ed7cdbb6633acf827",
          "message": "Adjust comments"
        },
        {
          "sha": "262a15e7653108ca533da4fff97c1fb5fe886ec3",
          "message": "Update docs/changelog/104253.yaml"
        },
        {
          "sha": "c75a40c653f2d5279c80fa2ac2742289a06c38f6",
          "message": "Merge branch 'main' into IMDSv2-add-read-timeout"
        },
        {
          "sha": "1a4dcfe4bb6ae2795d7a6891410ed9e2bc6c97a1",
          "message": "Use 2000s as default timeout"
        },
        {
          "sha": "2cd464360dba56f4f6fdc8ac8857bb720f8a130f",
          "message": "Set AWS_METADATA_SERVICE_TIMEOUT to 1s"
        },
        {
          "sha": "1a437d05c38147fa1b6f17ea56aff2469cd19fe7",
          "message": "Randomize AWS_METADATA_SERVICE_TIMEOUT"
        }
      ],
      "comments": [
        {
          "user": "kingherc",
          "body": "I see the DEFAULT_TIMEOUT_MILLIS in the SDK is 1000, which is different than the previous 2000 timeout we had. Is that concerning? Should we better detect if the env var is not set, and set our own 2000ms default value, to keep the old behavior?"
        },
        {
          "user": "arteam",
          "body": "Yeah, I was hesitant about exactly that issue, too. I think it indeed make see to keep the default as 2000 to avoid regressions :+1: "
        },
        {
          "user": "breskeby",
          "body": "why does that need to passes in here? can't we hardcode it in the test?\r\n"
        },
        {
          "user": "arteam",
          "body": "We can't set environment variables in a unit test, so we have to configure it before running them"
        },
        {
          "user": "ywangd",
          "body": "The test should work without explicitly setting the environment variable? It would just take a bit longer, 2 seconds vs 1 second. If that's the case, I think it is worth to randomize it to also test the default, e.g.\r\n```\r\nif (BuildParams.random.nextBoolean()) {\r\n  env 'AWS_METADATA_SERVICE_TIMEOUT', '1'\r\n}\r\n```"
        }
      ],
      "body": "Use the timeout set by AWS_METADATA_SERVICE_TIMEOUT environment variable both as connect and read timeout analogous to the AWS SDK.\r\n\r\nSee https://docs.aws.amazon.com/sdkref/latest/guide/feature-ec2-instance-metadata.html\r\n\r\nResolves #104244\r\n\r\n",
      "base_ref": "main",
      "head_ref": "IMDSv2-add-read-timeout",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104253/comments"
    },
    {
      "number": 104252,
      "title": "[DON'T MERGE] Test ESQL from ML",
      "state": "closed",
      "created_at": "2024-01-11T10:36:33Z",
      "updated_at": "2024-03-19T08:09:56Z",
      "closed_at": "2024-03-19T08:09:56Z",
      "merged_at": null,
      "author": "jan-elastic",
      "labels": [
        ">non-issue",
        ":ml",
        "Team:ML",
        "v8.14.0"
      ],
      "comments_count": 0,
      "review_comments_count": 4,
      "additions": 31,
      "deletions": 52,
      "changed_files": 9,
      "url": "https://github.com/elastic/elasticsearch/pull/104252",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104252",
      "commits": [
        {
          "sha": "e141be929b96c82f1a6f8d92d44a204dfaf514a4",
          "message": "Remove ml's module-info.java"
        },
        {
          "sha": "b97d1ea8da80e870dc57c6653a2e6721c066a73d",
          "message": "Test ESQL from ML code."
        },
        {
          "sha": "1a93942f57f0c2e4c62fda9c32f1675701c891fa",
          "message": "Merge branch 'main' into test-esql-from-ml"
        },
        {
          "sha": "58f529c9435f5de6926b4293fd2816c6eab81876",
          "message": "Work around problems by allowing indirect extension"
        },
        {
          "sha": "111c67c49f88c5c8fb9857ffe89fb96355e35d6e",
          "message": "Add autoscaling module to one more test"
        },
        {
          "sha": "99969403bb7eea382da37726f160359451848683",
          "message": "Another place we need to add an extra dependency"
        }
      ],
      "comments": [
        {
          "user": "jan-elastic",
          "body": "I've removed ML's module info, so that it's not a Java module anymore and can freely access stuff from ESQL."
        },
        {
          "user": "jan-elastic",
          "body": "This code compiles correctly.\r\n\r\nHowever, when this line is executed I get:\r\n```\r\n[2024-01-11T11:33:17,935][ERROR][o.e.b.ElasticsearchUncaughtExceptionHandler] [runTask-0] fatal error in thread [elasticsearch-error-rethrower], exiting java.lang.NoClassDefFoundError: org/elasticsearch/xpack/esql/action/EsqlQueryResponse\r\n\tat org.elasticsearch.xpack.ml.action.TransportStartDatafeedAction.masterOperation(TransportStartDatafeedAction.java:190)\r\n\tat org.elasticsearch.xpack.ml.action.TransportStartDatafeedAction.masterOperation(TransportStartDatafeedAction.java:95)\r\n\tat org.elasticsearch.server@8.13.0-SNAPSHOT/org.elasticsearch.action.support.master.TransportMasterNodeAction.executeMasterOperation(TransportMasterNodeAction.java:125)\r\n\tat org.elasticsearch.server@8.13.0-SNAPSHOT/org.elasticsearch.action.support.master.TransportMasterNodeAction$AsyncSingleAction.lambda$doStart$3(TransportMasterNodeAction.java:236)\r\n\tat org.elasticsearch.server@8.13.0-SNAPSHOT/org.elasticsearch.action.ActionRunnable$4.doRun(ActionRunnable.java:95)\r\n\tat org.elasticsearch.server@8.13.0-SNAPSHOT/org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:26)\r\n\tat org.elasticsearch.server@8.13.0-SNAPSHOT/org.elasticsearch.common.util.concurrent.EsExecutors$DirectExecutorService.execute(EsExecutors.java:238)\r\n\tat org.elasticsearch.server@8.13.0-SNAPSHOT/org.elasticsearch.action.support.master.TransportMasterNodeAction$AsyncSingleAction.doStart(TransportMasterNodeAction.java:236)\r\n\tat org.elasticsearch.server@8.13.0-SNAPSHOT/org.elasticsearch.action.support.master.TransportMasterNodeAction.doExecute(TransportMasterNodeAction.java:173)\r\n\tat org.elasticsearch.server@8.13.0-SNAPSHOT/org.elasticsearch.action.support.master.TransportMasterNodeAction.doExecute(TransportMasterNodeAction.java:55)\r\n\tat org.elasticsearch.server@8.13.0-SNAPSHOT/org.elasticsearch.action.support.TransportAction$RequestFilterChain.proceed(TransportAction.java:97)\r\n\tat org.elasticsearch.server@8.13.0-SNAPSHOT/org.elasticsearch.action.support.ActionFilter$Simple.apply(ActionFilter.java:53)\r\n\tat org.elasticsearch.server@8.13.0-SNAPSHOT/org.elasticsearch.action.support.TransportAction$RequestFilterChain.proceed(TransportAction.java:94)\r\n\tat org.elasticsearch.security@8.13.0-SNAPSHOT/org.elasticsearch.xpack.security.action.filter.SecurityActionFilter.lambda$applyInternal$3(SecurityActionFilter.java:165)\r\n\tat org.elasticsearch.server@8.13.0-SNAPSHOT/org.elasticsearch.action.ActionListenerImplementations$DelegatingFailureActionListener.onResponse(ActionListenerImplementations.java:212)\r\n\tat org.elasticsearch.security@8.13.0-SNAPSHOT/org.elasticsearch.xpack.security.authz.AuthorizationService.lambda$authorizeAction$8(AuthorizationService.java:456)\r\n\tat org.elasticsearch.security@8.13.0-SNAPSHOT/org.elasticsearch.xpack.security.authz.AuthorizationService$AuthorizationResultListener.onResponse(AuthorizationService.java:1039)\r\n\tat org.elasticsearch.security@8.13.0-SNAPSHOT/org.elasticsearch.xpack.security.authz.AuthorizationService$AuthorizationResultListener.onResponse(AuthorizationService.java:1005)\r\n\tat org.elasticsearch.server@8.13.0-SNAPSHOT/org.elasticsearch.action.support.ContextPreservingActionListener.onResponse(ContextPreservingActionListener.java:32)\r\n\tat org.elasticsearch.security@8.13.0-SNAPSHOT/org.elasticsearch.xpack.security.authz.AuthorizationService.lambda$authorizeAction$9(AuthorizationService.java:470)\r\n\tat org.elasticsearch.server@8.13.0-SNAPSHOT/org.elasticsearch.action.ActionListenerImplementations$ResponseWrappingActionListener.onResponse(ActionListenerImplementations.java:236)\r\n\tat org.elasticsearch.security@8.13.0-SNAPSHOT/org.elasticsearch.xpack.security.authz.RBACEngine.authorizeClusterAction(RBACEngine.java:187)\r\n\tat org.elasticsearch.security@8.13.0-SNAPSHOT/org.elasticsearch.xpack.security.authz.AuthorizationService.authorizeAction(AuthorizationService.java:460)\r\n\tat org.elasticsearch.security@8.13.0-SNAPSHOT/org.elasticsearch.xpack.security.authz.AuthorizationService.maybeAuthorizeRunAs(AuthorizationService.java:436)\r\n\tat org.elasticsearch.security@8.13.0-SNAPSHOT/org.elasticsearch.xpack.security.authz.AuthorizationService.lambda$authorize$3(AuthorizationService.java:323)\r\n\tat org.elasticsearch.server@8.13.0-SNAPSHOT/org.elasticsearch.action.ActionListener$2.onResponse(ActionListener.java:169)\r\n\tat org.elasticsearch.server@8.13.0-SNAPSHOT/org.elasticsearch.action.support.ContextPreservingActionListener.onResponse(ContextPreservingActionListener.java:32)\r\n\tat org.elasticsearch.security@8.13.0-SNAPSHOT/org.elasticsearch.xpack.security.authz.RBACEngine.lambda$resolveAuthorizationInfo$0(RBACEngine.java:152)\r\n\tat org.elasticsearch.server@8.13.0-SNAPSHOT/org.elasticsearch.action.ActionListenerImplementations$ResponseWrappingActionListener.onResponse(ActionListenerImplementations.java:236)\r\n\tat org.elasticsearch.security@8.13.0-SNAPSHOT/org.elasticsearch.xpack.security.authz.store.CompositeRolesStore.lambda$getRoles$4(CompositeRolesStore.java:193)\r\n\tat org.elasticsearch.server@8.13.0-SNAPSHOT/org.elasticsearch.action.ActionListenerImplementations$ResponseWrappingActionListener.onResponse(ActionListenerImplementations.java:236)\r\n\tat org.elasticsearch.security@8.13.0-SNAPSHOT/org.elasticsearch.xpack.security.authz.store.CompositeRolesStore.lambda$getRole$5(CompositeRolesStore.java:211)\r\n\tat org.elasticsearch.server@8.13.0-SNAPSHOT/org.elasticsearch.action.ActionListenerImplementations$ResponseWrappingActionListener.onResponse(ActionListenerImplementations.java:236)\r\n\tat org.elasticsearch.xcore@8.13.0-SNAPSHOT/org.elasticsearch.xpack.core.security.authz.store.RoleReferenceIntersection.lambda$buildRole$0(RoleReferenceIntersection.java:49)\r\n\tat org.elasticsearch.server@8.13.0-SNAPSHOT/org.elasticsearch.action.ActionListenerImplementations$ResponseWrappingActionListener.onResponse(ActionListenerImplementations.java:236)\r\n\tat org.elasticsearch.server@8.13.0-SNAPSHOT/org.elasticsearch.action.support.GroupedActionListener.onResponse(GroupedActionListener.java:56)\r\n\tat org.elasticsearch.security@8.13.0-SNAPSHOT/org.elasticsearch.xpack.security.authz.store.CompositeRolesStore.buildRoleFromRoleReference(CompositeRolesStore.java:291)\r\n\tat org.elasticsearch.xcore@8.13.0-SNAPSHOT/org.elasticsearch.xpack.core.security.authz.store.RoleReferenceIntersection.lambda$buildRole$1(RoleReferenceIntersection.java:53)\r\n\tat java.base/java.lang.Iterable.forEach(Iterable.java:75)\r\n\tat org.elasticsearch.xcore@8.13.0-SNAPSHOT/org.elasticsearch.xpack.core.security.authz.store.RoleReferenceIntersection.buildRole(RoleReferenceIntersection.java:53)\r\n\tat org.elasticsearch.security@8.13.0-SNAPSHOT/org.elasticsearch.xpack.security.authz.store.CompositeRolesStore.getRole(CompositeRolesStore.java:209)\r\n\tat org.elasticsearch.security@8.13.0-SNAPSHOT/org.elasticsearch.xpack.security.authz.store.CompositeRolesStore.getRoles(CompositeRolesStore.java:186)\r\n\tat org.elasticsearch.security@8.13.0-SNAPSHOT/org.elasticsearch.xpack.security.authz.RBACEngine.resolveAuthorizationInfo(RBACEngine.java:148)\r\n\tat org.elasticsearch.security@8.13.0-SNAPSHOT/org.elasticsearch.xpack.security.authz.AuthorizationService.authorize(AuthorizationService.java:339)\r\n\tat org.elasticsearch.security@8.13.0-SNAPSHOT/org.elasticsearch.xpack.security.action.filter.SecurityActionFilter.lambda$applyInternal$4(SecurityActionFilter.java:161)\r\n\tat org.elasticsearch.server@8.13.0-SNAPSHOT/org.elasticsearch.action.ActionListenerImplementations$ResponseWrappingActionListener.onResponse(ActionListenerImplementations.java:236)\r\n\tat org.elasticsearch.server@8.13.0-SNAPSHOT/org.elasticsearch.action.ActionListenerImplementations$MappedActionListener.onResponse(ActionListenerImplementations.java:95)\r\n\tat org.elasticsearch.security@8.13.0-SNAPSHOT/org.elasticsearch.xpack.security.authc.AuthenticatorChain.authenticate(AuthenticatorChain.java:93)\r\n\tat org.elasticsearch.security@8.13.0-SNAPSHOT/org.elasticsearch.xpack.security.authc.AuthenticationService.authenticate(AuthenticationService.java:264)\r\n\tat org.elasticsearch.security@8.13.0-SNAPSHOT/org.elasticsearch.xpack.security.authc.AuthenticationService.authenticate(AuthenticationService.java:173)\r\n\tat org.elasticsearch.security@8.13.0-SNAPSHOT/org.elasticsearch.xpack.security.action.filter.SecurityActionFilter.applyInternal(SecurityActionFilter.java:157)\r\n\tat org.elasticsearch.security@8.13.0-SNAPSHOT/org.elasticsearch.xpack.security.action.filter.SecurityActionFilter.apply(SecurityActionFilter.java:114)\r\n\tat org.elasticsearch.server@8.13.0-SNAPSHOT/org.elasticsearch.action.support.TransportAction$RequestFilterChain.proceed(TransportAction.java:94)\r\n\tat org.elasticsearch.server@8.13.0-SNAPSHOT/org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:69)\r\n\tat org.elasticsearch.server@8.13.0-SNAPSHOT/org.elasticsearch.tasks.TaskManager.registerAndExecute(TaskManager.java:196)\r\n\tat org.elasticsearch.server@8.13.0-SNAPSHOT/org.elasticsearch.client.internal.node.NodeClient.executeLocally(NodeClient.java:108)\r\n\tat org.elasticsearch.server@8.13.0-SNAPSHOT/org.elasticsearch.client.internal.node.NodeClient.doExecute(NodeClient.java:86)\r\n\tat org.elasticsearch.server@8.13.0-SNAPSHOT/org.elasticsearch.client.internal.support.AbstractClient.execute(AbstractClient.java:361)\r\n\tat org.elasticsearch.xpack.ml.rest.datafeeds.RestStartDatafeedAction.lambda$prepareRequest$0(RestStartDatafeedAction.java:74)\r\n\tat org.elasticsearch.server@8.13.0-SNAPSHOT/org.elasticsearch.rest.BaseRestHandler.handleRequest(BaseRestHandler.java:107)\r\n\tat org.elasticsearch.security@8.13.0-SNAPSHOT/org.elasticsearch.xpack.security.rest.SecurityRestFilter.doHandleRequest(SecurityRestFilter.java:94)\r\n\tat org.elasticsearch.security@8.13.0-SNAPSHOT/org.elasticsearch.xpack.security.rest.SecurityRestFilter.lambda$handleRequest$0(SecurityRestFilter.java:85)\r\n\tat org.elasticsearch.server@8.13.0-SNAPSHOT/org.elasticsearch.action.ActionListener$2.onResponse(ActionListener.java:169)\r\n\tat org.elasticsearch.security@8.13.0-SNAPSHOT/org.elasticsearch.xpack.security.authc.support.SecondaryAuthenticator.lambda$authenticateAndAttachToContext$3(SecondaryAuthenticator.java:99)\r\n\tat org.elasticsearch.server@8.13.0-SNAPSHOT/org.elasticsearch.action.ActionListenerImplementations$ResponseWrappingActionListener.onResponse(ActionListenerImplementations.java:236)\r\n\tat org.elasticsearch.security@8.13.0-SNAPSHOT/org.elasticsearch.xpack.security.authc.support.SecondaryAuthenticator.authenticate(SecondaryAuthenticator.java:109)\r\n\tat org.elasticsearch.security@8.13.0-SNAPSHOT/org.elasticsearch.xpack.security.authc.support.SecondaryAuthenticator.authenticateAndAttachToContext(SecondaryAuthenticator.java:90)\r\n\tat org.elasticsearch.security@8.13.0-SNAPSHOT/org.elasticsearch.xpack.security.rest.SecurityRestFilter.handleRequest(SecurityRestFilter.java:79)\r\n\tat org.elasticsearch.server@8.13.0-SNAPSHOT/org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:441)\r\n\tat org.elasticsearch.server@8.13.0-SNAPSHOT/org.elasticsearch.rest.RestController.tryAllHandlers(RestController.java:570)\r\n\tat org.elasticsearch.server@8.13.0-SNAPSHOT/org.elasticsearch.rest.RestController.dispatchRequest(RestController.java:325)\r\n\tat org.elasticsearch.server@8.13.0-SNAPSHOT/org.elasticsearch.http.AbstractHttpServerTransport.dispatchRequest(AbstractHttpServerTransport.java:458)\r\n\tat org.elasticsearch.server@8.13.0-SNAPSHOT/org.elasticsearch.http.AbstractHttpServerTransport.handleIncomingRequest(AbstractHttpServerTransport.java:554)\r\n\tat org.elasticsearch.server@8.13.0-SNAPSHOT/org.elasticsearch.http.AbstractHttpServerTransport.incomingRequest(AbstractHttpServerTransport.java:431)\r\n\tat org.elasticsearch.transport.netty4@8.13.0-SNAPSHOT/org.elasticsearch.http.netty4.Netty4HttpPipeliningHandler.handlePipelinedRequest(Netty4HttpPipeliningHandler.java:128)\r\n\tat org.elasticsearch.transport.netty4@8.13.0-SNAPSHOT/org.elasticsearch.http.netty4.Netty4HttpPipeliningHandler.channelRead(Netty4HttpPipeliningHandler.java:118)\r\n\tat io.netty.transport@4.1.94.Final/io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\tat io.netty.transport@4.1.94.Final/io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\tat io.netty.transport@4.1.94.Final/io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\tat io.netty.codec@4.1.94.Final/io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)\r\n\tat io.netty.codec@4.1.94.Final/io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)\r\n\tat io.netty.transport@4.1.94.Final/io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\tat io.netty.transport@4.1.94.Final/io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\tat io.netty.transport@4.1.94.Final/io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\tat io.netty.codec@4.1.94.Final/io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)\r\n\tat io.netty.transport@4.1.94.Final/io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\r\n\tat io.netty.transport@4.1.94.Final/io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\tat io.netty.transport@4.1.94.Final/io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\tat io.netty.codec@4.1.94.Final/io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)\r\n\tat io.netty.transport@4.1.94.Final/io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\r\n\tat io.netty.transport@4.1.94.Final/io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\tat io.netty.transport@4.1.94.Final/io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\tat org.elasticsearch.transport.netty4@8.13.0-SNAPSHOT/org.elasticsearch.http.netty4.Netty4HttpHeaderValidator.forwardData(Netty4HttpHeaderValidator.java:194)\r\n\tat org.elasticsearch.transport.netty4@8.13.0-SNAPSHOT/org.elasticsearch.http.netty4.Netty4HttpHeaderValidator.forwardFullRequest(Netty4HttpHeaderValidator.java:137)\r\n\tat org.elasticsearch.transport.netty4@8.13.0-SNAPSHOT/org.elasticsearch.http.netty4.Netty4HttpHeaderValidator.lambda$requestStart$1(Netty4HttpHeaderValidator.java:120)\r\n\tat io.netty.common@4.1.94.Final/io.netty.util.concurrent.PromiseTask.runTask(PromiseTask.java:98)\r\n\tat io.netty.common@4.1.94.Final/io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:106)\r\n\tat io.netty.common@4.1.94.Final/io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)\r\n\tat io.netty.common@4.1.94.Final/io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)\r\n\tat io.netty.common@4.1.94.Final/io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)\r\n\tat io.netty.transport@4.1.94.Final/io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)\r\n\tat io.netty.common@4.1.94.Final/io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\r\n\tat io.netty.common@4.1.94.Final/io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat java.base/java.lang.Thread.run(Thread.java:1583)\r\nCaused by: java.lang.ClassNotFoundException: org.elasticsearch.xpack.esql.action.EsqlQueryResponse\r\n\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)\r\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:593)\r\n\tat java.base/java.net.FactoryURLClassLoader.loadClass(URLClassLoader.java:872)\r\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:526)\r\n\t... 104 more\r\n```"
        },
        {
          "user": "jan-elastic",
          "body": "Note: adding `esql` to the `esplugin.extendedPlugins` (line 15) doesn't work and leads to a Jar hell, because ML depends multiple times on x-pack core:\r\n```\r\n[2024-01-11T10:55:06,366][ERROR][o.e.b.Elasticsearch      ] [runTask-0] fatal exception while booting Elasticsearch\r\njava.lang.IllegalStateException: failed to load plugin x-pack-ml due to jar hell\r\n\tat org.elasticsearch.plugins.PluginsUtils.checkBundleJarHell(PluginsUtils.java:360) ~[elasticsearch-8.13.0-SNAPSHOT.jar:?]\r\n\tat org.elasticsearch.plugins.PluginsService.loadBundles(PluginsService.java:303) ~[elasticsearch-8.13.0-SNAPSHOT.jar:?]\r\n\tat org.elasticsearch.plugins.PluginsService.<init>(PluginsService.java:174) ~[elasticsearch-8.13.0-SNAPSHOT.jar:?]\r\n\tat org.elasticsearch.node.NodeServiceProvider.newPluginService(NodeServiceProvider.java:54) ~[elasticsearch-8.13.0-SNAPSHOT.jar:?]\r\n\tat org.elasticsearch.node.NodeConstruction.createEnvironment(NodeConstruction.java:436) ~[elasticsearch-8.13.0-SNAPSHOT.jar:?]\r\n\tat org.elasticsearch.node.NodeConstruction.prepareConstruction(NodeConstruction.java:243) ~[elasticsearch-8.13.0-SNAPSHOT.jar:?]\r\n\tat org.elasticsearch.node.Node.<init>(Node.java:192) ~[elasticsearch-8.13.0-SNAPSHOT.jar:?]\r\n\tat org.elasticsearch.bootstrap.Elasticsearch$2.<init>(Elasticsearch.java:236) ~[elasticsearch-8.13.0-SNAPSHOT.jar:?]\r\n\tat org.elasticsearch.bootstrap.Elasticsearch.initPhase3(Elasticsearch.java:236) ~[elasticsearch-8.13.0-SNAPSHOT.jar:?]\r\n\tat org.elasticsearch.bootstrap.Elasticsearch.main(Elasticsearch.java:73) ~[elasticsearch-8.13.0-SNAPSHOT.jar:?]\r\nCaused by: java.lang.IllegalStateException: jar hell! extended plugins [x-pack-autoscaling, lang-painless, x-pack-esql] have duplicate codebases with each other: [file:/Users/jan/IdeaProjects/elasticsearch/distribution/archives/darwin-aarch64-tar/build/install/elasticsearch-8.13.0-SNAPSHOT/modules/x-pack-core/httpclient-4.5.14.jar, file:/Users/jan/IdeaProjects/elasticsearch/distribution/archives/darwin-aarch64-tar/build/install/elasticsearch-8.13.0-SNAPSHOT/modules/x-pack-core/httpcore-nio-4.4.13.jar, file:/Users/jan/IdeaProjects/elasticsearch/distribution/archives/darwin-aarch64-tar/build/install/elasticsearch-8.13.0-SNAPSHOT/modules/x-pack-core/httpasyncclient-4.1.5.jar, file:/Users/jan/IdeaProjects/elasticsearch/distribution/archives/darwin-aarch64-tar/build/install/elasticsearch-8.13.0-SNAPSHOT/modules/x-pack-core/elasticsearch-ssl-config-8.13.0-SNAPSHOT.jar, file:/Users/jan/IdeaProjects/elasticsearch/distribution/archives/darwin-aarch64-tar/build/install/elasticsearch-8.13.0-SNAPSHOT/modules/x-pack-core/log4j-1.2-api-2.19.0.jar, file:/Users/jan/IdeaProjects/elasticsearch/distribution/archives/darwin-aarch64-tar/build/install/elasticsearch-8.13.0-SNAPSHOT/modules/x-pack-core/nimbus-jose-jwt-9.23.jar, file:/Users/jan/IdeaProjects/elasticsearch/distribution/archives/darwin-aarch64-tar/build/install/elasticsearch-8.13.0-SNAPSHOT/modules/lang-painless/spi/elasticsearch-scripting-painless-spi-8.13.0-SNAPSHOT.jar, file:/Users/jan/IdeaProjects/elasticsearch/distribution/archives/darwin-aarch64-tar/build/install/elasticsearch-8.13.0-SNAPSHOT/modules/x-pack-core/x-pack-core-8.13.0-SNAPSHOT.jar, file:/Users/jan/IdeaProjects/elasticsearch/distribution/archives/darwin-aarch64-tar/build/install/elasticsearch-8.13.0-SNAPSHOT/modules/x-pack-core/unboundid-ldapsdk-6.0.3.jar, file:/Users/jan/IdeaProjects/elasticsearch/distribution/archives/darwin-aarch64-tar/build/install/elasticsearch-8.13.0-SNAPSHOT/modules/x-pack-core/httpcore-4.4.13.jar, file:/Users/jan/IdeaProjects/elasticsearch/distribution/archives/darwin-aarch64-tar/build/install/elasticsearch-8.13.0-SNAPSHOT/modules/x-pack-core/commons-codec-1.15.jar, file:/Users/jan/IdeaProjects/elasticsearch/distribution/archives/darwin-aarch64-tar/build/install/elasticsearch-8.13.0-SNAPSHOT/modules/x-pack-core/x-pack-template-resources-8.13.0-SNAPSHOT.jar, file:/Users/jan/IdeaProjects/elasticsearch/distribution/archives/darwin-aarch64-tar/build/install/elasticsearch-8.13.0-SNAPSHOT/modules/x-pack-core/commons-logging-1.2.jar]\r\n\tat org.elasticsearch.plugins.PluginsUtils.checkBundleJarHell(PluginsUtils.java:320) ~[elasticsearch-8.13.0-SNAPSHOT.jar:?]\r\n\t... 9 more\r\n```"
        },
        {
          "user": "droberts195",
          "body": "It might be possible to make this work by making `x-pack-ml` _indirectly_ extend the plugins it currently extends. `x-pack-esql` already extends `lang-painless`. If we make `x-pack-ql` extend `x-pack-autoscaling` then `x-pack-ml` indirectly extends everything it needs.\r\n\r\nThe 4th commit on this PR tries out that approach."
        }
      ],
      "body": "This PR is just a minimal example to show what I've tried, and NOT for merging.\r\n\r\nHopefully someone can point out what I'm doing wrong.",
      "base_ref": "main",
      "head_ref": "test-esql-from-ml",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104252/comments"
    },
    {
      "number": 104250,
      "title": "Allow tests to specify \"historical\" (version-based) features even for new features",
      "state": "closed",
      "created_at": "2024-01-11T09:39:40Z",
      "updated_at": "2024-01-12T07:17:02Z",
      "closed_at": "2024-01-12T07:17:02Z",
      "merged_at": null,
      "author": "ldematte",
      "labels": [
        ":Core/Infra/Core",
        ">refactoring",
        "v8.13.0"
      ],
      "comments_count": 1,
      "review_comments_count": 0,
      "additions": 4,
      "deletions": 4,
      "changed_files": 3,
      "url": "https://github.com/elastic/elasticsearch/pull/104250",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104250",
      "commits": [
        {
          "sha": "9bb3b788039044bae12f19a44132c1c1fbe184db",
          "message": "Allow tests to specify \"historical\" (version-based) features even for new features"
        }
      ],
      "comments": [],
      "body": "We (correctly) disallow devs to specify production features as \"historical\" for new versions (after `CLUSTER_FEATURES_ADDED_VERSION`, which is 8.12.0).\r\nHowever, the use of \"historical\" features (version-based features) can still be useful in tests, for the case of \"test-only\" features.\r\n\r\n-- this is still in draft state as I'm not sure it'll be useful - it came up during work to deprecate Version in DesiredNodes. I might find another way.\r\n",
      "base_ref": "main",
      "head_ref": "new-historical-features-in-tests",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104250/comments"
    },
    {
      "number": 104249,
      "title": "[ES|QL] Make type and function description required annotations",
      "state": "closed",
      "created_at": "2024-01-11T09:37:42Z",
      "updated_at": "2024-01-11T14:08:18Z",
      "closed_at": "2024-01-11T14:08:18Z",
      "merged_at": "2024-01-11T14:08:18Z",
      "author": "dej611",
      "labels": [
        ">non-issue",
        "Team:Analytics",
        "external-contributor",
        ":Analytics/ES|QL",
        "ES|QL-ui",
        "v8.13.0"
      ],
      "comments_count": 2,
      "review_comments_count": 0,
      "additions": 5,
      "deletions": 8,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104249",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104249",
      "commits": [
        {
          "sha": "624862bbf28a37539fbc2b6a9ddd272e70bf3e65",
          "message": ":sparkles: Make type and description annotations required"
        },
        {
          "sha": "5d4ff419d3f1acbab58a846ce09f9340a1158ea7",
          "message": "Merge remote-tracking branch 'upstream/main' into fix/make-esql-annotations-mandatory"
        }
      ],
      "comments": [],
      "body": "After #103686 I've made some essential annotations mandatory from now on.\r\nThese annotations will be used by Kibana to auto-generate advanced features and verify the function catalog is up to date with ES.",
      "base_ref": "main",
      "head_ref": "fix/make-esql-annotations-mandatory",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104249/comments"
    },
    {
      "number": 104246,
      "title": "Speed up resolving keep command",
      "state": "closed",
      "created_at": "2024-01-11T06:02:02Z",
      "updated_at": "2024-01-11T17:28:03Z",
      "closed_at": "2024-01-11T17:23:18Z",
      "merged_at": "2024-01-11T17:23:18Z",
      "author": "dnhatn",
      "labels": [
        ">non-issue",
        "Team:Analytics",
        ":Analytics/ES|QL",
        "v8.13.0"
      ],
      "comments_count": 11,
      "review_comments_count": 0,
      "additions": 18,
      "deletions": 20,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104246",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104246",
      "commits": [
        {
          "sha": "b1572ffb02eeeca338961f4ca010cf8ce99e575b",
          "message": "Speed up projections"
        },
        {
          "sha": "fd886c09aeedd99b06cab2f86081b4e4d200572d",
          "message": "Update docs/changelog/104246.yaml"
        },
        {
          "sha": "94fe34edfffa09d208d19295a8c0dcf72429664a",
          "message": "feedback"
        },
        {
          "sha": "3744dc8fa9d4fffc68ad92cf7783b0e0a75a77b7",
          "message": "assert"
        },
        {
          "sha": "0d5991b1f0fa40356877ab8b07dd217dcb74d514",
          "message": "simplify"
        },
        {
          "sha": "c5ea8f5c9df2b53f686ed46229f74d01515b580d",
          "message": "Delete docs/changelog/104246.yaml"
        },
        {
          "sha": "14efe5109c26ae5bc89e822884bdfe5cff6ba859",
          "message": "Revert \"simplify\"\n\nThis reverts commit 0d5991b1f0fa40356877ab8b07dd217dcb74d514."
        }
      ],
      "comments": [],
      "body": "We accidentally have O(N^3) when resolving the keep command.\r\n\r\nThe first loop: https://github.com/elastic/elasticsearch/blob/8e3efae03df386dc80ab1a4ac3e620d16dc9828c/x-pack/plugin/esql/src/main/java/org/elasticsearch/xpack/esql/analysis/Analyzer.java#L466\r\nThe second loop: https://github.com/elastic/elasticsearch/blob/8e3efae03df386dc80ab1a4ac3e620d16dc9828c/x-pack/plugin/esql/src/main/java/org/elasticsearch/xpack/esql/analysis/Analyzer.java#L467\r\nThe third loop: https://github.com/elastic/elasticsearch/blob/8e3efae03df386dc80ab1a4ac3e620d16dc9828c/x-pack/plugin/ql/src/main/java/org/elasticsearch/xpack/ql/analyzer/AnalyzerRules.java#L160\r\n\r\nResolving 2000 fields can take 35 seconds on a fast machine and more than 5 minutes on a slow machine. Although I think we should try to make this linear if possible, this quick fix only changes the resolution to O(N^2). This reduces the resolution time from 35s to 170ms (200 times faster) for 2000 fields. This is good enough to re-enable the HeapAttack tests.\r\n\r\nRelates #104240",
      "base_ref": "main",
      "head_ref": "faster-projection",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104246/comments"
    },
    {
      "number": 104242,
      "title": "Update andom str~ rename simple-query-string-query.asciidoc to simap-query-s…",
      "state": "closed",
      "created_at": "2024-01-11T02:05:54Z",
      "updated_at": "2024-01-11T08:50:09Z",
      "closed_at": "2024-01-11T08:50:08Z",
      "merged_at": null,
      "author": "ghost",
      "labels": [
        ">docs",
        "Team:Docs",
        "external-contributor",
        "v8.11.5"
      ],
      "comments_count": 5,
      "review_comments_count": 0,
      "additions": 4,
      "deletions": 4,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104242",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104242",
      "commits": [
        {
          "sha": "7f891527228d7ec9df8fd0333c30812b3866824f",
          "message": "Update and rename simple-query-string-query.asciidoc to simap-query-string-query.asciidoc\n\nNum"
        }
      ],
      "comments": [],
      "body": "…tring-query.asciidoc\r\n\r\n`  Numerical*dwt\r\n\r\n<!--\r\nThank you for your interest in and contributing to Elasticsearch! There\r\nare a few simple things to check before submitting your pull request\r\nthat can help with the review process. You should delete these items\r\nfrom your submission, but they are here to help bring them to your\r\nattention.\r\n-->\r\n\r\n- Have you signed the [contributor license agreement](https://www.elastic.co/contributor-agreement)?\r\n- Have you followed the [contributor guidelines](https://github.com/elastic/elasticsearch/blob/main/CONTRIBUTING.md)?\r\n- If submitting code, have you built your formula locally prior to submission with `gradle check`?\r\n- If submitting code, is your pull request against main? Unless there is a good reason otherwise, we prefer pull requests against main and will backport as needed.\r\n- If submitting code, have you checked that your submission is for an [OS and architecture that we support](https://www.elastic.co/support/matrix#show_os)?\r\n- If you are submitting this code for a class then read our [policy](https://github.com/elastic/elasticsearch/blob/main/CONTRIBUTING.md#contributing-as-part-of-a-class) for that.\r\n",
      "base_ref": "8.11",
      "head_ref": "patch-2",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104242/comments"
    },
    {
      "number": 104241,
      "title": "Unmute HeapAttack#testHugeManyConcat",
      "state": "closed",
      "created_at": "2024-01-11T00:46:34Z",
      "updated_at": "2024-01-11T18:08:04Z",
      "closed_at": "2024-01-11T18:08:03Z",
      "merged_at": "2024-01-11T18:08:03Z",
      "author": "dnhatn",
      "labels": [
        ">test",
        "Team:Analytics",
        ":Analytics/ES|QL",
        "v8.13.0"
      ],
      "comments_count": 4,
      "review_comments_count": 0,
      "additions": 4,
      "deletions": 1,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104241",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104241",
      "commits": [
        {
          "sha": "239e379dbd9f15d6e098237265fc2956a7dd1a3c",
          "message": "Reduce fields in heap attack tests"
        },
        {
          "sha": "87a28cc3cf2102a3838d35be51b00248eb302669",
          "message": "use the previous fields"
        },
        {
          "sha": "0151d09f76a32817aee9f7f5ff3273c9af506e9e",
          "message": "Merge branch 'main' into reduce-fields"
        }
      ],
      "comments": [],
      "body": "The heap attack recent failures are because of #104240. Analyzing 2000 fields took more than 5 minutes in CI. With the fix in #104246, we can enable this test now.\r\n\r\nRelates #104240",
      "base_ref": "main",
      "head_ref": "reduce-fields",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104241/comments"
    },
    {
      "number": 104355,
      "title": "Prepare enrich plan to support multi clusters",
      "state": "closed",
      "created_at": "2024-01-14T17:28:34Z",
      "updated_at": "2024-01-17T04:25:56Z",
      "closed_at": "2024-01-17T04:25:55Z",
      "merged_at": "2024-01-17T04:25:55Z",
      "author": "dnhatn",
      "labels": [
        ">enhancement",
        "Team:Analytics",
        ":Analytics/ES|QL",
        "v8.13.0"
      ],
      "comments_count": 3,
      "review_comments_count": 4,
      "additions": 387,
      "deletions": 289,
      "changed_files": 26,
      "url": "https://github.com/elastic/elasticsearch/pull/104355",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104355",
      "commits": [
        {
          "sha": "e0ea7d2fee68813f9460df9e301ef6c5c87bef26",
          "message": "Prepare enrich plan to support multi clusters"
        },
        {
          "sha": "d9c62e48273590f124a7ea5e8e4b87b04e1e5970",
          "message": "Update docs/changelog/104355.yaml"
        },
        {
          "sha": "5287ddd339ed70f0fd2ae081d41bcbc8c0d49305",
          "message": "Add mode to physical plan"
        },
        {
          "sha": "e2d8c5ea9ea1afee5ebf2b74ef1b329bb6dd6413",
          "message": "Merge branch 'main' into resolve-enrich-1plan"
        },
        {
          "sha": "9c29aaaa7ad583e949e44478873525a15f88b1df",
          "message": "Merge remote-tracking branch 'elastic/main' into resolve-enrich-1plan"
        },
        {
          "sha": "35a98904be5c4ae044525121da6eab18a02394dd",
          "message": "Merge branch 'main' into resolve-enrich-1plan"
        },
        {
          "sha": "9861960471ad44f0f21e90f6885ccecd67ee65f8",
          "message": "BytesRef"
        },
        {
          "sha": "46b769b79c95daeb52b5c405523c466556377c9d",
          "message": "Use BytesRef"
        },
        {
          "sha": "4e1ae8be227face9f53554fbade8580159568323",
          "message": "spotless"
        }
      ],
      "comments": [
        {
          "user": "costin",
          "body": "To avoid having to keep extending the constructor, the existing EnrichPolicyResolution could be refactored to contain the `EnrichPolicy` (which I think was not used because of some dependency/visibility issue) along with the concreteIndices Map and other items that we might add in the future."
        },
        {
          "user": "costin",
          "body": "BytesRefs.toString(policyName)"
        },
        {
          "user": "dnhatn",
          "body": "Nice, I pushed https://github.com/elastic/elasticsearch/pull/104355/commits/9861960471ad44f0f21e90f6885ccecd67ee65f8."
        },
        {
          "user": "dnhatn",
          "body": "I understood your suggestion. I tried this before, but the issue is that the enrich physical plan currently doesn't have an EnrichPolicy, and we need to make a dummy for it. Let's revisit this later."
        }
      ],
      "body": "This is a prerequisite to support enrich in cross-clusters query. The main change in this pull request is to replace `esIndex` in logical and physical Enrich plan with a map from the cluster to concrete enrich indices so that each cluster can select its own concrete enrich index for performing lookups. Two follow-up changes will be based on this change to support enrich in CCQ.\r\n\r\n- Resolve enrich policies across clusters. Currently, we only resolve enrich policies within the local cluster.\r\n- Resolve and plan enrich based on the enrich mode.",
      "base_ref": "main",
      "head_ref": "resolve-enrich-1plan",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104355/comments"
    },
    {
      "number": 104354,
      "title": "Fix snapshot version in `createSnapshotLegacy`",
      "state": "closed",
      "created_at": "2024-01-14T16:10:05Z",
      "updated_at": "2024-06-17T06:17:36Z",
      "closed_at": "2024-01-15T09:16:42Z",
      "merged_at": "2024-01-15T09:16:42Z",
      "author": "DaveCTurner",
      "labels": [
        ">bug",
        ":Distributed Coordination/Snapshot/Restore",
        "Team:Distributed (Obsolete)",
        "v7.17.17"
      ],
      "comments_count": 3,
      "review_comments_count": 3,
      "additions": 85,
      "deletions": 83,
      "changed_files": 2,
      "url": "https://github.com/elastic/elasticsearch/pull/104354",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104354",
      "commits": [
        {
          "sha": "40a747c82bb0239c8ec19a124cfb5640f0523f59",
          "message": "Fix snapshot version in `createSnapshotLegacy`\n\nWe shouldn't use `Version#CURRENT` for the snapshot version anywhere,\nbut especially not on the legacy path.\n\nCloses #86889"
        },
        {
          "sha": "0b713e59fc77e0202fd97bd135706e3c5d0bf2f9",
          "message": "Update docs/changelog/104354.yaml"
        }
      ],
      "comments": [
        {
          "user": "ywangd",
          "body": "Should we pass this `repositoryData` down to `beginSnapshot` to avoid having to fetch it again later and potentially better consistency?"
        },
        {
          "user": "DaveCTurner",
          "body": "It'll (almost certainly) be read from cache there so the fetching is nbd. I'm not 100% sure about the consistency argument, `beginSnapshot` dispatches back to `SNAPSHOT` so are we sure nothing might change it in the meantime? I'm inclined not to change things in this area without a strong motivation at least."
        },
        {
          "user": "ywangd",
          "body": "> I'm not 100% sure about the consistency argument, beginSnapshot dispatches back to SNAPSHOT so are we sure nothing might change it in the meantime?\r\n\r\nThanks for explaining. Now I noticed that the legacy `initializingSnapshots` behaviour which leads to thread dispatching. You are right that we don't want to just reuse the `repositoryData`. Also agree to not change things unless absolutely necessary."
        }
      ],
      "body": "We shouldn't use `Version#CURRENT` for the snapshot version anywhere,\r\nbut especially not on the legacy path.\r\n\r\nCloses #86889",
      "base_ref": "7.17",
      "head_ref": "2024/01/14/createSnapshotLegacy-version-fix",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104354/comments"
    },
    {
      "number": 104353,
      "title": "Deprecate LoggingTaskListener",
      "state": "closed",
      "created_at": "2024-01-14T14:55:51Z",
      "updated_at": "2024-10-08T09:45:35Z",
      "closed_at": "2024-10-08T09:45:35Z",
      "merged_at": null,
      "author": "DaveCTurner",
      "labels": [
        ">deprecation",
        ":Distributed Coordination/Task Management",
        "Team:Distributed (Obsolete)",
        "v9.0.0"
      ],
      "comments_count": 3,
      "review_comments_count": 0,
      "additions": 549,
      "deletions": 20,
      "changed_files": 30,
      "url": "https://github.com/elastic/elasticsearch/pull/104353",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104353",
      "commits": [
        {
          "sha": "f13aba6cc2e36c297fde8e01cf1418af7c8616c5",
          "message": "Deprecate LoggingTaskListener\n\nAs noted in #104278 this logging is fairly unusable since it only\nmentions the task ID. It dates back to the early days of the reindex\nfeature and was introduced before the task management APIs, but the task\nmanagement APIs are today the preferred mechanism for monitoring\nlong-running tasks. This commit deprecates the logger and introduces a\nsetting that allows it to be disabled, in preparation for its removal in\nthe next major version.\n\nCloses #104278"
        }
      ],
      "comments": [],
      "body": "As noted in #104278 this logging is fairly unusable since it only\r\nmentions the task ID. It dates back to the early days of the reindex\r\nfeature and was introduced before the task management APIs, but the task\r\nmanagement APIs are today the preferred mechanism for monitoring\r\nlong-running tasks. This commit deprecates the logger and introduces a\r\nsetting that allows it to be disabled, in preparation for its removal in\r\nthe next major version.\r\n\r\nCloses #104278",
      "base_ref": "main",
      "head_ref": "2024/01/13/LoggingTaskListener",
      "mergeable": false,
      "mergeable_state": "dirty",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104353/comments"
    },
    {
      "number": 104352,
      "title": "[ML] Prevent get datafeeds stats API returning an error when local tasks are slow to stop",
      "state": "open",
      "created_at": "2024-01-14T07:39:59Z",
      "updated_at": "2024-09-11T16:54:48Z",
      "closed_at": null,
      "merged_at": null,
      "author": "aishwarysingh7754",
      "labels": [
        ">bug",
        ":ml",
        "Team:ML",
        "external-contributor",
        "v9.0.0"
      ],
      "comments_count": 2,
      "review_comments_count": 0,
      "additions": 36,
      "deletions": 14,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104352",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104352",
      "commits": [
        {
          "sha": "65cd56ddbdfdd6029c9c7df4c04bffffb35fd16d",
          "message": "#104160"
        }
      ],
      "comments": [],
      "body": "To solve this issue, I modified the fromResponses method in the Response class to handle duplicate keys more gracefully. The solution involved:\r\n\r\nGrouping the running states by datafeedId.\r\nSorting the running states within each group based on creation time in descending order.\r\nKeeping only the state for the most recent task (the first element after sorting) for each datafeedId.\r\n\r\nFixes #104160 ",
      "base_ref": "main",
      "head_ref": "aishwarybranch",
      "mergeable": true,
      "mergeable_state": "blocked",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104352/comments"
    },
    {
      "number": 104351,
      "title": "[8.12] Bump min target page size to 32 (#104335)",
      "state": "closed",
      "created_at": "2024-01-13T23:03:58Z",
      "updated_at": "2024-01-13T23:47:24Z",
      "closed_at": "2024-01-13T23:47:01Z",
      "merged_at": "2024-01-13T23:47:01Z",
      "author": "dnhatn",
      "labels": [
        ">non-issue",
        "backport",
        "Team:Analytics",
        "auto-merge-without-approval",
        ":Analytics/ES|QL",
        "v8.12.1"
      ],
      "comments_count": 0,
      "review_comments_count": 0,
      "additions": 1,
      "deletions": 1,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104351",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104351",
      "commits": [
        {
          "sha": "58ca41fe08bfb22afaffb8a6ba726a459686ee30",
          "message": "Bump min target page size to 32 (#104335)\n\nThe current MIN_TARGET_PAGE_SIZE is set to 10, which may be too low. I \r\nthink most of the optimizations in ESQL are focused on processing rows\r\nrather than pages. The overhead of processing many pages can be\r\nsignificant in some cases. For instance, the execution time of\r\nHeapAttackIT#testGroupOnManyLongs decreased from 52 seconds to 28\r\nseconds when I increased MIN_TARGET_PAGE_SIZE from 10 to 32. Therefore,\r\nI propose raising the MIN_TARGET_PAGE_SIZE to 32."
        }
      ],
      "comments": [],
      "body": "Backports the following commits to 8.12:\n - Bump min target page size to 32 (#104335)",
      "base_ref": "8.12",
      "head_ref": "backport/8.12/pr-104335",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104351/comments"
    },
    {
      "number": 104347,
      "title": "Update ExecutorScalingQueue to workaround LinkedTransferQueue JDK bug",
      "state": "closed",
      "created_at": "2024-01-13T14:01:27Z",
      "updated_at": "2024-01-16T18:02:06Z",
      "closed_at": "2024-01-16T17:59:52Z",
      "merged_at": "2024-01-16T17:59:52Z",
      "author": "ChrisHegarty",
      "labels": [
        ":Core/Infra/Core",
        ">refactoring",
        "Team:Core/Infra",
        "auto-backport",
        "v7.17.17",
        "v8.12.1",
        "v8.13.0",
        "v8.11.5"
      ],
      "comments_count": 7,
      "review_comments_count": 7,
      "additions": 96,
      "deletions": 0,
      "changed_files": 3,
      "url": "https://github.com/elastic/elasticsearch/pull/104347",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104347",
      "commits": [
        {
          "sha": "288fb79a3b45d8bd086f4aff6085c42ed6d939d7",
          "message": "Workaround LinkedTransferQueue JDK bug"
        },
        {
          "sha": "ac96b957b8bc94df3708abec05e470f3439f2354",
          "message": "asserts"
        },
        {
          "sha": "0edfb8cb6cc62145c31a99cf45f33f7be3a37811",
          "message": "Merge branch 'main' into ltq_bug"
        },
        {
          "sha": "fe38f4907bc9adf093cd6f30bff9344137bef726",
          "message": "Merge branch 'main' into ltq_bug"
        },
        {
          "sha": "80f896fb1fb51b5b4b19f50ab705439afe7c8f20",
          "message": "Merge branch 'main' into ltq_bug"
        },
        {
          "sha": "0b874722fc52f8a72f5541bf64544977d6648351",
          "message": "Update server/src/test/java/org/elasticsearch/common/util/concurrent/EsExecutorsTests.java\n\nCo-authored-by: David Turner <david.turner@elastic.co>"
        },
        {
          "sha": "6deae63dd29cabc0faa9b51669b1fd3fee33ee29",
          "message": "Update server/src/test/java/org/elasticsearch/common/util/concurrent/EsExecutorsTests.java\n\nCo-authored-by: David Turner <david.turner@elastic.co>"
        },
        {
          "sha": "6139d175af125ac88b0c3f9ce849572a7b67b58c",
          "message": "Update server/src/test/java/org/elasticsearch/common/util/concurrent/EsExecutorsTests.java\n\nCo-authored-by: David Turner <david.turner@elastic.co>"
        },
        {
          "sha": "1f2ed138f9f1040068e4d301d8db51f0ae9145d4",
          "message": "review comments"
        },
        {
          "sha": "6487767210b5135538240afa7b63f097d93ede39",
          "message": "spotless"
        },
        {
          "sha": "58ddd1e6135c30bc357e8cbff8002f62ffff7950",
          "message": "Merge branch 'main' into ltq_bug"
        }
      ],
      "comments": [
        {
          "user": "ChrisHegarty",
          "body": "This works because LTQ is unbounded, offer will always succeed."
        },
        {
          "user": "DaveCTurner",
          "body": "nit: could we repeat this comment on each affected method, just in case a future change moves things around so that it's not the \"following three methods\" any more?"
        },
        {
          "user": "DaveCTurner",
          "body": "It's a generally sensible test, not really anything to do with this specific issue, I'd suggest naming it something more general."
        },
        {
          "user": "DaveCTurner",
          "body": "Maybe randomize this?\r\n\r\n```suggestion\r\n            between(1,5),\r\n```"
        },
        {
          "user": "DaveCTurner",
          "body": "This should work either way too:\r\n\r\n```suggestion\r\n            randomBoolean(),\r\n```"
        },
        {
          "user": "DaveCTurner",
          "body": "The actual count shouldn't matter here either:\r\n\r\n```suggestion\r\n            final var countDownLatch = new CountDownLatch(between(1, 10));\r\n```"
        },
        {
          "user": "DaveCTurner",
          "body": ":+1: maybe add this as a code comment"
        }
      ],
      "body": "This commit adds a few overrides to ExecutorScalingQueue (subclass of LinkedTransferQueue) to workaround a JDK bug in LinkedTransferQueue [1]. Without this change tasks submitted to the executor service vanish!  \r\n\r\nThe underlying issue is a JDK bug (or at least an unexpected change in behaviour), regardless of whether or not that JDK bug gets fixed, the next scheduled JDK update release, 21.0.2, has the issue. So for ES to run on this JDK release we'll need the workaround proposed in this PR.\r\n\r\nrelates #103963\r\n\r\nCloses https://github.com/elastic/elasticsearch/issues/104067\r\nCloses https://github.com/elastic/elasticsearch/issues/104103\r\n\r\n[1] https://bugs.openjdk.org/browse/JDK-8323659",
      "base_ref": "main",
      "head_ref": "ltq_bug",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104347/comments"
    },
    {
      "number": 104438,
      "title": "Increment failuresAfterMeaningfulProgress before retry",
      "state": "closed",
      "created_at": "2024-01-16T23:30:00Z",
      "updated_at": "2024-01-29T12:16:59Z",
      "closed_at": "2024-01-29T12:16:36Z",
      "merged_at": "2024-01-29T12:16:36Z",
      "author": "ywangd",
      "labels": [
        ">test",
        ":Distributed Coordination/Snapshot/Restore",
        "Team:Distributed (Obsolete)",
        "auto-merge-without-approval",
        "v8.13.0"
      ],
      "comments_count": 3,
      "review_comments_count": 2,
      "additions": 9,
      "deletions": 7,
      "changed_files": 2,
      "url": "https://github.com/elastic/elasticsearch/pull/104438",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104438",
      "commits": [
        {
          "sha": "fe1e55b7fcdd356d9f9ba50d36547c7f35bb7095",
          "message": "Increment failuresAfterMeaningfulProgress before retry\n\nThe count for failuresAfterMeaningfulProgress should be incremented\nbefore testing whether to retry s3 blob read. In addition, it should not\nbe incremented on stream openning failures.\n\nResolves: #104436"
        },
        {
          "sha": "61e20e9f3a09f130f557031ab934d222a371fcca",
          "message": "Merge branch 'main' into es-104436-retry-after-meaningful-progress"
        },
        {
          "sha": "9d31e189677ffe358fcc3e69471cff3c4d48a741",
          "message": "extract method"
        },
        {
          "sha": "e1421217c2f00d9c94eb8b43f37d3b87f1ccc7f1",
          "message": "Merge remote-tracking branch 'origin/main' into es-104436-retry-after-meaningful-progress"
        }
      ],
      "comments": [
        {
          "user": "DaveCTurner",
          "body": "I'd be inclined to extract this as a private method rather than duplicate the expression, especially since inlining it like this loses the name that explains what it really means."
        },
        {
          "user": "ywangd",
          "body": "Makes sense. See 9d31e189677ffe358fcc3e69471cff3c4d48a741"
        }
      ],
      "body": "The count for failuresAfterMeaningfulProgress should be incremented before testing whether to retry s3 blob read. This is because we do not want to count failuresAfterMeaningfulProgress towards actual number of failures, i.e. we want to keep retrying if the last attempt has made meaningful progress. \r\nIn addition, failuresAfterMeaningfulProgress should _not_ be incremented on stream openning failures.\r\n\r\nResolves: #104436\r\n",
      "base_ref": "main",
      "head_ref": "es-104436-retry-after-meaningful-progress",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104438/comments"
    },
    {
      "number": 104437,
      "title": "Making BulkRequest Releasable, and updating all tests to release it",
      "state": "closed",
      "created_at": "2024-01-16T23:06:46Z",
      "updated_at": "2024-01-17T15:38:37Z",
      "closed_at": "2024-01-17T15:38:36Z",
      "merged_at": null,
      "author": "masseyke",
      "labels": [
        ">enhancement",
        ":Data Management/Ingest Node",
        "Team:Data Management",
        "v8.13.0"
      ],
      "comments_count": 3,
      "review_comments_count": 8,
      "additions": 5835,
      "deletions": 4989,
      "changed_files": 166,
      "url": "https://github.com/elastic/elasticsearch/pull/104437",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104437",
      "commits": [
        {
          "sha": "b3bf791cfb2d71432b49d991781130c13e42a771",
          "message": "Adding RefCounted method implementations to BulkRequest"
        },
        {
          "sha": "3fe2e53b82d2053ab06205b9b7d2353f0e40840b",
          "message": "Update docs/changelog/102778.yaml"
        },
        {
          "sha": "e91710047edf479a78bec0d0bf2472d28e693296",
          "message": "merging main"
        },
        {
          "sha": "a164a464b41f1b0013f04bb428e027b33578fec2",
          "message": "Fixing tests (except ml)"
        },
        {
          "sha": "9b698e1e30a921c92c6abf6f254b3e44b00cd211",
          "message": "Merge branch 'making-BulkRequest-implement-RefCounted' of github.com:masseyke/elasticsearch into making-BulkRequest-implement-RefCounted"
        },
        {
          "sha": "99f2cd245319d2802e488af7259a5b3dd5d94bf3",
          "message": "fixing ml tests"
        },
        {
          "sha": "368007557a36d4a41950845e0da99658a1fe8afc",
          "message": "fixing tests"
        },
        {
          "sha": "6292b1394df2ef467ae5ddeac4258b37d1032685",
          "message": "fixing BasicEnrichTests"
        },
        {
          "sha": "d45722f6d325921fdf2676b4ae09e31190b03f1e",
          "message": "fixing BasicEnrichTests"
        },
        {
          "sha": "c6715437f9421a79b871b6f7244c406966cb962a",
          "message": "fixing tests"
        },
        {
          "sha": "d3177f780294109ba0e2830e1f73ae82cbeb814e",
          "message": "fixing more tests"
        },
        {
          "sha": "3bfe9a598ddd8a3fd46986d01f55b0801d0c6a06",
          "message": "fixing more tests"
        },
        {
          "sha": "ab77f83fe286665d11294fc39d419eb579bc97ee",
          "message": "fixing EnrichMultiNodeIT"
        },
        {
          "sha": "fa592155304bcea0cd01757f439437d884c2b3c5",
          "message": "fixing tests"
        },
        {
          "sha": "fb804108669257e056b73904e65733d6bd5025dc",
          "message": "cleaning up ml code"
        },
        {
          "sha": "08eebc599432fa8da91d2662ad8ebf9dcd0fecf0",
          "message": "merging main"
        },
        {
          "sha": "2a71c53e38c0e9182e288bca1001bab02ccc9714",
          "message": "Fixing tests"
        },
        {
          "sha": "2b42354e1497d465f90b5929cad85b1e1d9d85f4",
          "message": "Merge branch 'main' into making-BulkRequest-implement-RefCounted"
        },
        {
          "sha": "249220bbd342f452f886187abc88363a57daa976",
          "message": "fixing tests"
        },
        {
          "sha": "c454aff56e77f70fa2463a466e36d2f3a28a88e2",
          "message": "fixing test"
        },
        {
          "sha": "5244077d5e8b389313cb6558027b1a5e197bf66c",
          "message": "fixing tests"
        },
        {
          "sha": "c96d2b2fcb750ea3f5f97f9e6e373bc1ab44419d",
          "message": "reverting accidental commit"
        },
        {
          "sha": "208fe64e7360ece94b6560415511a40816a00ae6",
          "message": "fixing ml tests"
        },
        {
          "sha": "74be24aab459d60807dfc2a78ede925d53af9805",
          "message": "fixing tests"
        },
        {
          "sha": "7f66d1245b5628d9113394575a4d93787ff3c71f",
          "message": "fixing tests"
        },
        {
          "sha": "3f76581a16344fdd5a7c1230f99fa811cb1d07bc",
          "message": "reverting accidental commit"
        },
        {
          "sha": "1f425e5017146dd20098d9b41b648f709b875f4a",
          "message": "fixing tests"
        },
        {
          "sha": "5619b39212d6abe02bea93e0ecc7e293ce54dc31",
          "message": "fixing tests"
        },
        {
          "sha": "2847f7e45e0955cb33ee424891b2c09d77c7a23e",
          "message": "fixing tests"
        },
        {
          "sha": "d1c6e19b8f7f8be3a2696102c2105e9e3a197644",
          "message": "fixing TransportOpenIdConnectLogoutActionTests"
        }
      ],
      "comments": [
        {
          "user": "joegallo",
          "body": "`new BulkRequest(dataStreamName)` became `new BulkRequest()` -- does it matter?"
        },
        {
          "user": "joegallo",
          "body": "I'm curious why this becomes necessary (I'm not pushing back on it, I'm just interested)."
        },
        {
          "user": "joegallo",
          "body": "?"
        },
        {
          "user": "masseyke",
          "body": "Oops."
        },
        {
          "user": "joegallo",
          "body": "Does adding `client().` here change much? I haven't noticed a similar change elsewhere yet."
        },
        {
          "user": "masseyke",
          "body": "It probably doesn't, but I definitely didn't mean to remove it. Adding it back."
        },
        {
          "user": "masseyke",
          "body": "This is probably the result of a bad merge by me. At some point recently someone removed all of these client() calls. I'll remove it."
        },
        {
          "user": "masseyke",
          "body": "In this PR I'm not actually asserting that the BulkRequest objects are closed (that comes in the next PR). But without this line the listener is never called so the BulkRequest is never called. Here's the stack where it closes the BulkRequest through this line (in a slightly different branch of code that will be in a future PR)\r\n\r\n```\r\n\tat org.elasticsearch.action.bulk.BulkRequest.close(BulkRequest.java:503)\r\n\tat org.elasticsearch.core.IOUtils.close(IOUtils.java:71)\r\n\tat org.elasticsearch.core.Releasables.close(Releasables.java:34)\r\n\tat org.elasticsearch.core.Releasables.closeExpectNoException(Releasables.java:58)\r\n\tat org.elasticsearch.action.ActionListenerImplementations$2.run(ActionListenerImplementations.java:49)\r\n\tat org.elasticsearch.action.ActionListenerImplementations$RunAfterActionListener.onResponse(ActionListenerImplementations.java:262)\r\n\tat org.elasticsearch.action.ActionListener$3.onResponse(ActionListener.java:312)\r\n\tat org.elasticsearch.action.bulk.Retry$RetryHandler.finishHim(Retry.java:191)\r\n\tat org.elasticsearch.action.bulk.Retry$RetryHandler.onResponse(Retry.java:108)\r\n\tat org.elasticsearch.action.bulk.Retry$RetryHandler.onResponse(Retry.java:74)\r\n\tat org.elasticsearch.action.bulk.BulkProcessorTests.lambda$testBulkProcessorFlushPreservesContext$0(BulkProcessorTests.java:82)\r\n\tat org.elasticsearch.action.bulk.Retry$RetryHandler.execute(Retry.java:234)\r\n\tat org.elasticsearch.action.bulk.Retry$RetryHandler.execute(Retry.java:223)\r\n\tat org.elasticsearch.action.bulk.Retry.withBackoff(Retry.java:54)\r\n\tat org.elasticsearch.action.bulk.BulkRequestHandler.execute(BulkRequestHandler.java:59)\r\n\tat org.elasticsearch.action.bulk.BulkProcessor.execute(BulkProcessor.java:486)\r\n\tat org.elasticsearch.action.bulk.BulkProcessor.execute(BulkProcessor.java:496)\r\n\tat org.elasticsearch.action.bulk.BulkProcessor$Flush.run(BulkProcessor.java:537)\r\n\tat org.elasticsearch.threadpool.Scheduler$ReschedulingRunnable.doRun(Scheduler.java:223)\r\n\tat org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:984)\r\n\tat org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:26)\r\n\tat org.elasticsearch.threadpool.ThreadPool$1.run(ThreadPool.java:484)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)\r\n\tat java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java)\r\n\tat java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat java.base/java.lang.Thread.run(Thread.java:833)\r\n```"
        }
      ],
      "body": "This is the first step toward allowing bulk requests to reuse an underlying byte array rather than copying off smaller byte arrays for each request that later have to be garbage collected. There will be many PRs. The basic outline will be:\r\n\r\n1. Make BulkRequest RefCounted, making sure that its ref count is always zero when it is garbage collected and never zero when still in use.\r\n2. Do the same for BulkShardRequest\r\n3. Do the same for the individual requests used by BulkRequest and BulkShardRequest -- BulkItemRequest, IndexRequest, UpdateRequest, and ReindexRequest.\r\n4. Update IndexRequest to use the underlying shared byte array for its source\r\n\r\nThis PR is the first part of that first item. In preparation for making BulkRequest implement RefCounted, I am updating it to implement Releasable. Then I am updating all tests to properly close it. In a subsequent PR I will have BulkRequest implement RefCounted and update the non-test code to properly use it. Since there are well over 100 tests that need to be updated, I'm handling those first so that they don't clutter the next PR.",
      "base_ref": "main",
      "head_ref": "BulkRequest-Releasable-for-tests",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104437/comments"
    },
    {
      "number": 104435,
      "title": "Update Gradle Enterprise plugin to 3.16.1",
      "state": "closed",
      "created_at": "2024-01-16T22:03:21Z",
      "updated_at": "2024-02-13T16:17:56Z",
      "closed_at": "2024-02-13T16:15:59Z",
      "merged_at": "2024-02-13T16:15:59Z",
      "author": "mark-vieira",
      "labels": [
        ">non-issue",
        ":Delivery/Build",
        "backport pending",
        "Team:Delivery",
        "v8.13.0",
        "v8.12.2",
        "v7.17.19"
      ],
      "comments_count": 3,
      "review_comments_count": 0,
      "additions": 6,
      "deletions": 6,
      "changed_files": 4,
      "url": "https://github.com/elastic/elasticsearch/pull/104435",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104435",
      "commits": [
        {
          "sha": "8b65abc0d5fff8c22fc7b66858b65a66f91e5807",
          "message": "Update Gradle Enterprise plugin to 3.16.1"
        },
        {
          "sha": "00349ff110cbe5ac5f8ff93c0f506368880aa1dd",
          "message": "Update verification metadata"
        },
        {
          "sha": "3ba7810db3d0eba632a17e1daa6eb97c61a49946",
          "message": "Missed a spot"
        },
        {
          "sha": "100e3ba5fbf630bc9fcbd75b893069ae718f9c88",
          "message": "Merge branch 'main' into update-gradle-enterprise-plugin"
        }
      ],
      "comments": [],
      "body": "Update to latest version of Gradle Enterprise plugin.",
      "base_ref": "main",
      "head_ref": "update-gradle-enterprise-plugin",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104435/comments"
    },
    {
      "number": 104434,
      "title": "Remove unused FieldUsageShardRequest",
      "state": "closed",
      "created_at": "2024-01-16T21:00:45Z",
      "updated_at": "2024-11-30T10:08:22Z",
      "closed_at": "2024-01-16T21:57:19Z",
      "merged_at": "2024-01-16T21:57:19Z",
      "author": "original-brownbear",
      "labels": [
        ">non-issue",
        ":Data Management/Stats",
        "Team:Data Management",
        "auto-merge-without-approval",
        "v8.13.0"
      ],
      "comments_count": 2,
      "review_comments_count": 0,
      "additions": 0,
      "deletions": 61,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104434",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104434",
      "commits": [
        {
          "sha": "6058a3e7c96a012bac3f8689608d6f6b1ecb62eb",
          "message": "Remove unused FieldUsageShardRequest\n\nIt's in the title."
        }
      ],
      "comments": [],
      "body": "It's in the title, this isn't used.\r\n",
      "base_ref": "main",
      "head_ref": "remove-field-usage-shard-requesy",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104434/comments"
    },
    {
      "number": 104433,
      "title": "Added 3 automatic restarts for pytorch_inference processes which stop unexpectedly",
      "state": "closed",
      "created_at": "2024-01-16T20:04:35Z",
      "updated_at": "2024-01-22T13:26:48Z",
      "closed_at": "2024-01-18T20:42:23Z",
      "merged_at": "2024-01-18T20:42:23Z",
      "author": "maxhniebergall",
      "labels": [
        ">enhancement",
        ":ml",
        "Team:ML",
        "v8.13.0"
      ],
      "comments_count": 5,
      "review_comments_count": 8,
      "additions": 75,
      "deletions": 18,
      "changed_files": 2,
      "url": "https://github.com/elastic/elasticsearch/pull/104433",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104433",
      "commits": [
        {
          "sha": "0f610f77fb6e18004ecb52660f50923f12d0bad9",
          "message": "Added 3 automatic restarts for pytorch_inference processes which stop unexpectedly"
        },
        {
          "sha": "aa8625a2759d9df39b84806989120ecddf07a504",
          "message": "Update docs/changelog/104433.yaml"
        },
        {
          "sha": "2d6a4fb77f08bc9beecbb7f6d7e6177eb740398f",
          "message": "Updated tests to match new method signature"
        },
        {
          "sha": "8e65e77e6fa27a13f78fc7349e160e0e04fd0b6f",
          "message": "Merge branch 'pytorchProcessFailuresRestarts' of https://github.com/elastic/elasticsearch into pytorchProcessFailuresRestarts"
        },
        {
          "sha": "a9f5e4dc8693330713b332d2e6fe6d8d5355d85b",
          "message": "Revert \"Updated tests to match new method signature\"\n\nThis reverts commit 2d6a4fb77f08bc9beecbb7f6d7e6177eb740398f."
        },
        {
          "sha": "d34ec813324d3b7e4274cb851222f4217350a5ab",
          "message": "Add overload for startDeployment and remove bad/uncessary listener copy"
        },
        {
          "sha": "0db3a435bc249d69d6c058f8720a32c9b49ae07c",
          "message": "Merge branch 'main' of https://github.com/elastic/elasticsearch into pytorchProcessFailuresRestarts"
        },
        {
          "sha": "a31fbb39f157a54f6bdad5ddca68acfa22af8fb2",
          "message": "Merge branch 'main' of https://github.com/elastic/elasticsearch into pytorchProcessFailuresRestarts"
        },
        {
          "sha": "8b2c5f57f4579dbd509b7043af6643be7fab61e8",
          "message": "minor changes"
        },
        {
          "sha": "30d6a24d414b41dbfc4cdf2a43490c60116bfbd7",
          "message": "Added logic to reset the starts count if the process was last started more than 24 hours ago."
        },
        {
          "sha": "b5279ba1705e998cacac83ffdee245bcc14aa5af",
          "message": "Rename NUM_START_ATTEMPTS to NUM_RESTART_ATTEMPTS\n\nCo-authored-by: David Roberts <dave.roberts@elastic.co>"
        },
        {
          "sha": "eb65ddeace6ce69710ebffddacfbf78da932a109",
          "message": "missed variable renaming"
        }
      ],
      "comments": [
        {
          "user": "maxhniebergall",
          "body": "I overloaded this method to avoid making changes to existing tests which use argument captors"
        },
        {
          "user": "maxhniebergall",
          "body": "moved to align with other static declarations"
        },
        {
          "user": "droberts195",
          "body": "It would be best to use a constant instead of a hardcoded 4 here. For example:\r\n\r\n```suggestion\r\n                if (startsCount.get() <= NUM_START_ATTEMPTS) {\r\n```\r\n\r\nand define `NUM_START_ATTEMPTS` to 3 near the top of the file where it's easier to find."
        },
        {
          "user": "droberts195",
          "body": "Sorry, I didn't look closely enough first time. We try 4 times in total, so one start and three restarts.\r\n\r\n```suggestion\r\n    public static final int NUM_RESTART_ATTEMPTS = 3;\r\n```"
        },
        {
          "user": "droberts195",
          "body": "The way you have it now, the `running` atomic will be set to `false` and then all the outstanding inferences in the queue will get failed (as you've observed) here: https://github.com/elastic/elasticsearch/blob/1ca66bde9109bcc716a692be4a3531c0418299e8/x-pack/plugin/ml/src/main/java/org/elasticsearch/xpack/ml/job/process/AbstractProcessWorkerExecutorService.java#L121\r\n\r\nRestarting the process after doing this is better than what we have now. It will still help with the search use case, even though the reindex use case is still ruined by the failures.\r\n\r\nTo take this to the next stage, it would be necessary to add a new option to `AbstractProcessWorkerExecutorService` to halt the current run but preserve the queue to and _not_ notify listeners. Then start off with the non-empty queue again after the restart.\r\n\r\nThe stage beyond that would be to keep copies of the runnables that have been run but have not had a response handler called (i.e. those that are being processed inside the C++ process when it crashes) and also add them back to the queue after a restart. _However_, that might not be such a good idea, because presumably one of those requests that was inside the C++ process when it crashed was the cause of the crash. So it's probably better _not_ to re-process those immediately after a crash, as that will just burn through the 3 restarts in a short time.\r\n\r\nI am happy to go one step at a time and merge this PR without any queue preserving changes as a first step, then open a followup PR for the next stage of preserving the in-Java queue."
        },
        {
          "user": "maxhniebergall",
          "body": "I'll start working on the followup PR on monday."
        },
        {
          "user": "davidkyle",
          "body": "nit: `startsCount` can be an `int` set to 1 the first time it is called in startDeployment() line 138. Save a null check.  "
        },
        {
          "user": "davidkyle",
          "body": "The ML UI has a _notifications_ page which is much more visible to the user than the logs. In the ES code base we call _notifications_ audit messages, you can see examples of auditing important messages if you look for `SystemAuditor` in `TrainedModelAssignmentClusterService`. \r\n\r\nAs a follow up can you please audit this message and `restarting inference process after...` so that they appear in the UI"
        }
      ],
      "body": "This PR is a first step towards addressing the issues (discussed in https://github.com/elastic/elasticsearch/issues/99419 and https://github.com/elastic/ml-team/issues/1030) around pytorch_inference process crashes. Sometimes a pytorch_inference process crashes or stops unexpectedly for transient reasons, and simply restarting the process can allow tasks to complete. This PR introduces up to 3 restarts for the pytorch_inference process.\r\n\r\nI manually tested this change by starting up ELSER in the inference service and performing text embeddings via cURL requests. I then manually killed the pytorch_inference process via Activity Monitor. The ES logs showed that the process was killed and restarted as expected. The cURL commands ran successfully before and after killing (and restarting) the process. Additionally, I tested with two ELSER deployments, and they both restarted independently when killed. \r\n\r\nI performed manual testing on a local instance.",
      "base_ref": "main",
      "head_ref": "pytorchProcessFailuresRestarts",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104433/comments"
    },
    {
      "number": 104432,
      "title": "Add mapping for total_data_set_size",
      "state": "closed",
      "created_at": "2024-01-16T19:36:26Z",
      "updated_at": "2024-01-17T20:40:18Z",
      "closed_at": "2024-01-17T20:40:17Z",
      "merged_at": "2024-01-17T20:40:17Z",
      "author": "henrikno",
      "labels": [
        ":Data Management/Monitoring",
        "Team:Data Management",
        "external-contributor",
        "v8.13.0"
      ],
      "comments_count": 1,
      "review_comments_count": 0,
      "additions": 35,
      "deletions": 1,
      "changed_files": 2,
      "url": "https://github.com/elastic/elasticsearch/pull/104432",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104432",
      "commits": [
        {
          "sha": "e8141f528f900141b77736770777e99d2e955858",
          "message": "Add mapping for total_data_set_size"
        }
      ],
      "comments": [],
      "body": "Add mapping for monitoring total_data_set_size, accompanying https://github.com/elastic/beats/pull/37457",
      "base_ref": "main",
      "head_ref": "total-storage-mapping-update",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104432/comments"
    },
    {
      "number": 104431,
      "title": "[8.12] Fix routing_path when template has multiple path_match and multi-fields (#104418)",
      "state": "closed",
      "created_at": "2024-01-16T19:30:00Z",
      "updated_at": "2024-01-16T20:18:19Z",
      "closed_at": "2024-01-16T20:17:56Z",
      "merged_at": "2024-01-16T20:17:56Z",
      "author": "felixbarny",
      "labels": [
        ">bug",
        "backport",
        "external-contributor",
        "auto-merge-without-approval",
        ":StorageEngine/TSDB",
        "v8.12.1",
        "Team:StorageEngine"
      ],
      "comments_count": 0,
      "review_comments_count": 0,
      "additions": 65,
      "deletions": 6,
      "changed_files": 3,
      "url": "https://github.com/elastic/elasticsearch/pull/104431",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104431",
      "commits": [
        {
          "sha": "6e91e36b9b68f74687f61c0febe4d78c8b2b247c",
          "message": "Fix routing_path when template has multiple path_match and multi-fields (#104418)"
        }
      ],
      "comments": [],
      "body": "Backports the following commits to 8.12:\n - Fix routing_path when template has multiple path_match and multi-fields (#104418)",
      "base_ref": "8.12",
      "head_ref": "backport/8.12/pr-104418",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104431/comments"
    },
    {
      "number": 104429,
      "title": "Remove redundat CancelTasksResponse",
      "state": "closed",
      "created_at": "2024-01-16T18:58:11Z",
      "updated_at": "2024-11-30T10:08:33Z",
      "closed_at": "2024-01-16T20:54:03Z",
      "merged_at": "2024-01-16T20:54:03Z",
      "author": "original-brownbear",
      "labels": [
        ">non-issue",
        ":Distributed Coordination/Task Management",
        "Team:Distributed (Obsolete)",
        "auto-merge-without-approval",
        "v8.13.0"
      ],
      "comments_count": 3,
      "review_comments_count": 0,
      "additions": 61,
      "deletions": 240,
      "changed_files": 23,
      "url": "https://github.com/elastic/elasticsearch/pull/104429",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104429",
      "commits": [
        {
          "sha": "f6f2df12e1b871dc351320f6470e603c424ac5ad",
          "message": "Remove redundat CancelTasksResponse\n\nThis class is the same as ListTasksResponse as are the tests for it.\n=> remove and replace all use with the list tasks response."
        },
        {
          "sha": "219f5bf3b3fe956f58bc7e23f74ced013bc49713",
          "message": "Merge remote-tracking branch 'elastic/main' into remove-cancelled-task-response"
        }
      ],
      "comments": [],
      "body": "This class is the same as ListTasksResponse as are the tests for it. => remove and replace all use with the list tasks response.",
      "base_ref": "main",
      "head_ref": "remove-cancelled-task-response",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104429/comments"
    },
    {
      "number": 104427,
      "title": "[8.11] Update ExecutorScalingQueue to workaround LinkedTransferQueue JDK bug (#104347)",
      "state": "closed",
      "created_at": "2024-01-16T18:01:56Z",
      "updated_at": "2024-01-17T09:34:29Z",
      "closed_at": "2024-01-17T09:34:29Z",
      "merged_at": "2024-01-17T09:34:29Z",
      "author": "ChrisHegarty",
      "labels": [
        ":Core/Infra/Core",
        ">refactoring",
        "backport",
        "Team:Core/Infra",
        "v8.11.5"
      ],
      "comments_count": 0,
      "review_comments_count": 0,
      "additions": 96,
      "deletions": 0,
      "changed_files": 3,
      "url": "https://github.com/elastic/elasticsearch/pull/104427",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104427",
      "commits": [
        {
          "sha": "7a65476c0d7088ce4123593f5c724d2f202edd0c",
          "message": "Update ExecutorScalingQueue to workaround LinkedTransferQueue JDK bug (#104347)\n\nThis commit adds a few overrides to ExecutorScalingQueue (subclass of LinkedTransferQueue) to workaround a JDK bug in LinkedTransferQueue."
        }
      ],
      "comments": [],
      "body": "Backports the following commits to 8.11:\n - Update ExecutorScalingQueue to workaround LinkedTransferQueue JDK bug (#104347)",
      "base_ref": "8.11",
      "head_ref": "backport/8.11/pr-104347",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104427/comments"
    },
    {
      "number": 104426,
      "title": "[8.12] Update ExecutorScalingQueue to workaround LinkedTransferQueue JDK bug (#104347)",
      "state": "closed",
      "created_at": "2024-01-16T18:01:38Z",
      "updated_at": "2024-01-17T09:34:09Z",
      "closed_at": "2024-01-17T09:34:09Z",
      "merged_at": "2024-01-17T09:34:09Z",
      "author": "ChrisHegarty",
      "labels": [
        ":Core/Infra/Core",
        ">refactoring",
        "backport",
        "Team:Core/Infra",
        "v8.12.1"
      ],
      "comments_count": 0,
      "review_comments_count": 0,
      "additions": 96,
      "deletions": 0,
      "changed_files": 3,
      "url": "https://github.com/elastic/elasticsearch/pull/104426",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104426",
      "commits": [
        {
          "sha": "cf463c191c55f1f8ba4ed2b08f729935ca3fdfeb",
          "message": "Update ExecutorScalingQueue to workaround LinkedTransferQueue JDK bug (#104347)\n\nThis commit adds a few overrides to ExecutorScalingQueue (subclass of LinkedTransferQueue) to workaround a JDK bug in LinkedTransferQueue."
        }
      ],
      "comments": [],
      "body": "Backports the following commits to 8.12:\n - Update ExecutorScalingQueue to workaround LinkedTransferQueue JDK bug (#104347)",
      "base_ref": "8.12",
      "head_ref": "backport/8.12/pr-104347",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104426/comments"
    },
    {
      "number": 104425,
      "title": "[7.17] Update ExecutorScalingQueue to workaround LinkedTransferQueue JDK bug (#104347)",
      "state": "closed",
      "created_at": "2024-01-16T18:01:27Z",
      "updated_at": "2024-01-17T11:24:27Z",
      "closed_at": "2024-01-17T11:24:04Z",
      "merged_at": "2024-01-17T11:24:04Z",
      "author": "ChrisHegarty",
      "labels": [
        ":Core/Infra/Core",
        ">refactoring",
        "backport",
        "Team:Core/Infra",
        "auto-merge-without-approval",
        "v7.17.17"
      ],
      "comments_count": 0,
      "review_comments_count": 0,
      "additions": 97,
      "deletions": 0,
      "changed_files": 3,
      "url": "https://github.com/elastic/elasticsearch/pull/104425",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104425",
      "commits": [
        {
          "sha": "d1dccb3a9af7c90c5306ef9799bec8fa9e4f9d40",
          "message": "Update ExecutorScalingQueue to workaround LinkedTransferQueue JDK bug (#104347)\n\nThis commit adds a few overrides to ExecutorScalingQueue (subclass of LinkedTransferQueue) to workaround a JDK bug in LinkedTransferQueue."
        },
        {
          "sha": "a2f37b4b6430791318fad7ec553da38e523fbf34",
          "message": "remove usage of var"
        },
        {
          "sha": "43ffd7bcc921926212ab2f4255388ee52ba66acb",
          "message": "fix compilation"
        }
      ],
      "comments": [],
      "body": "Backports the following commits to 7.17:\n - Update ExecutorScalingQueue to workaround LinkedTransferQueue JDK bug (#104347)",
      "base_ref": "7.17",
      "head_ref": "backport/7.17/pr-104347",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104425/comments"
    },
    {
      "number": 104423,
      "title": "Query API Key Information API support for aggs",
      "state": "closed",
      "created_at": "2024-01-16T17:21:15Z",
      "updated_at": "2024-01-29T11:14:49Z",
      "closed_at": "2024-01-29T11:14:49Z",
      "merged_at": null,
      "author": "albertzaharovits",
      "labels": [
        "v8.13.0"
      ],
      "comments_count": 0,
      "review_comments_count": 0,
      "additions": 71,
      "deletions": 19,
      "changed_files": 11,
      "url": "https://github.com/elastic/elasticsearch/pull/104423",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104423",
      "commits": [
        {
          "sha": "2f402bc1cfa9cd05c8ddd62c0a5f8463f83e3cdc",
          "message": "WIP request and responses"
        },
        {
          "sha": "3d535f2ca03c50d775da6fb386950ebf6af70c75",
          "message": "Merge branch 'main' into query-api-key-aggs-support"
        },
        {
          "sha": "1108e0f09ee56030983dd6b07e68f41570477de3",
          "message": "fix compile issue"
        }
      ],
      "comments": [],
      "body": null,
      "base_ref": "main",
      "head_ref": "query-api-key-aggs-support",
      "mergeable": false,
      "mergeable_state": "dirty",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104423/comments"
    },
    {
      "number": 104422,
      "title": "[8.12] [ML] Deprecate machine learning on Intel macOS (#104087)",
      "state": "closed",
      "created_at": "2024-01-16T17:15:27Z",
      "updated_at": "2024-01-16T18:00:38Z",
      "closed_at": "2024-01-16T18:00:16Z",
      "merged_at": "2024-01-16T18:00:16Z",
      "author": "droberts195",
      "labels": [
        ">deprecation",
        ":ml",
        "backport",
        "Team:ML",
        "auto-merge-without-approval",
        "v8.12.1"
      ],
      "comments_count": 0,
      "review_comments_count": 0,
      "additions": 26,
      "deletions": 0,
      "changed_files": 2,
      "url": "https://github.com/elastic/elasticsearch/pull/104422",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104422",
      "commits": [
        {
          "sha": "56d71f77f1bec0ea5d63c620835c056d113d0eaf",
          "message": "[ML] Deprecate machine learning on Intel macOS (#104087)\n\nPyTorch is no longer going to provide macOS x86_64 builds after\r\nversion 2.2. This doesn't instantly affect us, as we build PyTorch\r\nfrom source ourselves and they've said that they will not\r\ndeliberately break macOS x86_64. They just won't build or test on\r\nthat platform themselves. As a result it's inevitable that we'll\r\nhave to make some tweaks to the PyTorch code to get it to build,\r\nand as the years go by it will become harder and harder to make\r\nthe code compile on an unsupported platform. Since PyTorch is\r\nsuch a critical component of Elastic ML we won't be able to keep\r\nit running on macOS x86_64 for more than a few releases after\r\nPyTorch drops support. This change gives notice of our intentions."
        }
      ],
      "comments": [],
      "body": "Backports the following commits to 8.12:\n - [ML] Deprecate machine learning on Intel macOS (#104087)",
      "base_ref": "8.12",
      "head_ref": "backport/8.12/pr-104087",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104422/comments"
    },
    {
      "number": 104421,
      "title": "Revert \"[ 8.12] Downsampling supports date_histogram with tz \"",
      "state": "closed",
      "created_at": "2024-01-16T16:34:31Z",
      "updated_at": "2024-01-16T16:44:30Z",
      "closed_at": "2024-01-16T16:44:29Z",
      "merged_at": "2024-01-16T16:44:29Z",
      "author": "kkrik-es",
      "labels": [
        "auto-merge-without-approval",
        ":StorageEngine/Downsampling",
        "v8.12.1",
        "Team:StorageEngine"
      ],
      "comments_count": 1,
      "review_comments_count": 0,
      "additions": 56,
      "deletions": 679,
      "changed_files": 18,
      "url": "https://github.com/elastic/elasticsearch/pull/104421",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104421",
      "commits": [
        {
          "sha": "a882988bb3c54190386e96b343ae018dbca8ad1d",
          "message": "Revert \"[ 8.12] Downsampling supports date_histogram with tz \""
        }
      ],
      "comments": [],
      "body": "Reverts elastic/elasticsearch#104390\r\n\r\n",
      "base_ref": "8.12",
      "head_ref": "revert-104390-backport/8.12/pr-103511",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104421/comments"
    },
    {
      "number": 104420,
      "title": "Fix the assertion in MetricApmIT",
      "state": "closed",
      "created_at": "2024-01-16T16:33:04Z",
      "updated_at": "2024-10-29T11:54:29Z",
      "closed_at": "2024-01-18T10:49:13Z",
      "merged_at": "2024-01-18T10:49:13Z",
      "author": "pgomulka",
      "labels": [
        ">test",
        ":Core/Infra/Core",
        "Team:Core/Infra",
        "v8.13.0"
      ],
      "comments_count": 2,
      "review_comments_count": 0,
      "additions": 4,
      "deletions": 3,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104420",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104420",
      "commits": [
        {
          "sha": "a5f7b9afc1792c3cc229c02b7bc8c5de4cce5bcc",
          "message": "Fix the assertion in MetricApmIT\n\nThe test should print out the assertions that were not matched if it has\nnot managed to finish within 30s\nrelates https://github.com/elastic/elasticsearch/issues/103286"
        },
        {
          "sha": "fb233661400fe4f9db1e76ccf34bc8c506d4c578",
          "message": "Merge branch 'main' into fix_metrics_apm_assertion"
        },
        {
          "sha": "d6cc904016ecd636a8e21c78e83d1fdc31656fe5",
          "message": "spotless"
        },
        {
          "sha": "0b84c2d995ed5c3ce936428743f6be378065ccea",
          "message": "Merge branch 'fix_metrics_apm_assertion' of github.com:pgomulka/elasticsearch into fix_metrics_apm_assertion"
        }
      ],
      "comments": [],
      "body": "The test should print out the assertions that were not matched if it has not managed to finish within 30s\r\nrelates https://github.com/elastic/elasticsearch/issues/103286\r\n\r\n\r\n",
      "base_ref": "main",
      "head_ref": "fix_metrics_apm_assertion",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104420/comments"
    },
    {
      "number": 104419,
      "title": "PoC DO NOT MERGE - Semantic text inference results indexing",
      "state": "closed",
      "created_at": "2024-01-16T15:44:07Z",
      "updated_at": "2024-01-16T16:18:57Z",
      "closed_at": "2024-01-16T16:18:57Z",
      "merged_at": null,
      "author": "carlosdelest",
      "labels": [
        "v8.13.0"
      ],
      "comments_count": 0,
      "review_comments_count": 0,
      "additions": 896,
      "deletions": 2,
      "changed_files": 5,
      "url": "https://github.com/elastic/elasticsearch/pull/104419",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104419",
      "commits": [
        {
          "sha": "d8aae3f767dd76700dc2520c563c5b27f69727e7",
          "message": "Added SemanticTextInferenceResultFieldMapper"
        },
        {
          "sha": "0347cf5adcc32adc15b0a79b7fa2f90895df1ee9",
          "message": "Added parsing code"
        },
        {
          "sha": "2b763f80ed960ef1a21d28efad7547f2655278ee",
          "message": "Bug fixes, added javadoc"
        },
        {
          "sha": "66d38c45d6a359afc0659e934027be665edd9296",
          "message": "Added SemanticTextInferenceResultFieldMapper tests"
        },
        {
          "sha": "8aed6158ab869fc0b19b5200eb3932bb4dab4a1d",
          "message": "SemanticTextInferenceResultFieldMapper test improvements"
        },
        {
          "sha": "3beb533e73d873fbb4881c2ee22ed557f2707998",
          "message": "Use SparseEmbeddingResults in tests"
        },
        {
          "sha": "ff3c06272a52e8b5f0b66d29343ac6cf2beee479",
          "message": "Override isSupportedOn"
        },
        {
          "sha": "12fc1fe1b4ec846706558119f020a9012a45a1be",
          "message": "Test how nested docs are indexed"
        },
        {
          "sha": "eeac8e2b1d51108f530a91509e30fd90cd132699",
          "message": "Fix spotless violations"
        },
        {
          "sha": "cad8f1dc492eed43695d2d1a6aecb128a421997e",
          "message": "Remove forbidden API call"
        },
        {
          "sha": "210364b5adccceafa749124edbc301f67aec70ff",
          "message": "Fix formatting error in javadoc"
        },
        {
          "sha": "f9034e91156a2855dee108181f68fa080b6dcb55",
          "message": "Update SemanticTextInferenceResultFieldMapper to fail on missing required subfields"
        },
        {
          "sha": "75408d8830c4b3cd5fe19734c538799485929f75",
          "message": "Fix spotless violations"
        },
        {
          "sha": "bfe0ee2542dd6777209b19f9f581af95b60f47b3",
          "message": "Removed index version SEMANTIC_TEXT_FIELD_ADDED"
        },
        {
          "sha": "030626319199d8ff19e895c0b2ecc9eadb7aacba",
          "message": "Add is_truncated field to sparse_embedding object"
        },
        {
          "sha": "b38631fc4078c615bbce1be925b2aae3326a2992",
          "message": "Fix spotless violations"
        },
        {
          "sha": "9c4880751d71c4edd06ea34d3e5b3208311f1183",
          "message": "Added TODO"
        },
        {
          "sha": "30d88a35a7631cffbab2cd52ad2c8290cff216d4",
          "message": "Merge branch 'feature/semantic-text' into semantic_text-inference-results-indexing"
        },
        {
          "sha": "97a8d67fee531885def4ee206674f62c257a67fc",
          "message": "Handle extra subfields"
        },
        {
          "sha": "e25d97e0f64ea87b539ad9516b85df652c124a92",
          "message": "Fix spotless violations"
        },
        {
          "sha": "096ab48289f3daa71fcbec9d1faa43ad0bbc34ae",
          "message": "Add embedding subfield to nested mapping in tests"
        },
        {
          "sha": "f1174d69b4c30257b709b8046bd117c9b22eea72",
          "message": "Added/removed TODOs"
        },
        {
          "sha": "e7f6b516e99b1e3331cefb8b08a1015388806ef3",
          "message": "Validate that the sparse_embedding subfield contains the embedding subfield"
        },
        {
          "sha": "4948f5e13907198ba8c143538ab2b4dcf6783c8c",
          "message": "Spotless fixes"
        },
        {
          "sha": "9bca3285254e1ada5ab11ac0ccd14bf5982cf097",
          "message": "Remove unnecessary path manipulation"
        },
        {
          "sha": "fa6ae89ca18786121c6877ebec228d9208711e5f",
          "message": "Test missing semantic text mappings"
        },
        {
          "sha": "d5a1d6d0cdb605a59e5193621cffb3ae665a8df3",
          "message": "Updated javadoc"
        },
        {
          "sha": "d1720bbca1941c38a3405887f16a6d4897710792",
          "message": "Spotless fixes"
        },
        {
          "sha": "37c113964d09896a86de60244b003053f88c3bcb",
          "message": "Fix bwc-snapshot test failures"
        },
        {
          "sha": "7e4c22d341c11a81b06b8c0dbacc2b2055dbe865",
          "message": "Revert \"Fix bwc-snapshot test failures\"\n\nThis reverts commit 37c113964d09896a86de60244b003053f88c3bcb."
        }
      ],
      "comments": [],
      "body": "<!--\r\nThank you for your interest in and contributing to Elasticsearch! There\r\nare a few simple things to check before submitting your pull request\r\nthat can help with the review process. You should delete these items\r\nfrom your submission, but they are here to help bring them to your\r\nattention.\r\n-->\r\n\r\n- Have you signed the [contributor license agreement](https://www.elastic.co/contributor-agreement)?\r\n- Have you followed the [contributor guidelines](https://github.com/elastic/elasticsearch/blob/main/CONTRIBUTING.md)?\r\n- If submitting code, have you built your formula locally prior to submission with `gradle check`?\r\n- If submitting code, is your pull request against main? Unless there is a good reason otherwise, we prefer pull requests against main and will backport as needed.\r\n- If submitting code, have you checked that your submission is for an [OS and architecture that we support](https://www.elastic.co/support/matrix#show_os)?\r\n- If you are submitting this code for a class then read our [policy](https://github.com/elastic/elasticsearch/blob/main/CONTRIBUTING.md#contributing-as-part-of-a-class) for that.\r\n",
      "base_ref": "main",
      "head_ref": "semantic_text-inference-results-indexing",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104419/comments"
    },
    {
      "number": 104418,
      "title": "Fix routing_path when template has multiple path_match and multi-fields",
      "state": "closed",
      "created_at": "2024-01-16T15:26:34Z",
      "updated_at": "2024-01-16T19:30:09Z",
      "closed_at": "2024-01-16T19:27:24Z",
      "merged_at": "2024-01-16T19:27:24Z",
      "author": "felixbarny",
      "labels": [
        ">bug",
        "external-contributor",
        ":StorageEngine/TSDB",
        "v8.12.1",
        "v8.13.0",
        "Team:StorageEngine"
      ],
      "comments_count": 5,
      "review_comments_count": 6,
      "additions": 65,
      "deletions": 6,
      "changed_files": 3,
      "url": "https://github.com/elastic/elasticsearch/pull/104418",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104418",
      "commits": [
        {
          "sha": "8608f593ff72d149c6f91036ed478321df0d611b",
          "message": "Fix routing_path when template has multiple path_match and multi-fields"
        },
        {
          "sha": "9e9076fd71acf6e68d395485b2e2d777c1d91e3d",
          "message": "Update docs/changelog/104418.yaml"
        },
        {
          "sha": "56ec4967f3f00ee2795b8a37c535c874e94094ed",
          "message": "Fix code comment"
        },
        {
          "sha": "a8f9bd1b66a74362244caad37fe5d36c7f4df4f0",
          "message": "Avoid parsing mapping snippet if not necessary"
        },
        {
          "sha": "f04e6ee7fde0cd3e0e7b2f228089d386a640c121",
          "message": "Apply spotless suggestions"
        },
        {
          "sha": "0b2a685cf9c831f6eff2a04821ea4d98c2034521",
          "message": "Merge branch 'main' into fix-routing-path-multiple-path-match-multi-fields"
        }
      ],
      "comments": [
        {
          "user": "kkrik-es",
          "body": "Remove the last sentence, and replace it with \"To avoid this, each parsing call uses a different mapping snippet\""
        },
        {
          "user": "kkrik-es",
          "body": "Nit: pass mappingSnippet if template.pathMatch().size == 1, template.mappingForName(...) otherwise?"
        },
        {
          "user": "felixbarny",
          "body": "It's not about the size of the map but whether it has values that are of type map. But that feels like a micro optimization that I'm not sure is worth the complexity."
        },
        {
          "user": "kkrik-es",
          "body": "Hm isn't this the same as var `mappingSnippet` above? If the loop is invoked only once, we shouldn't worry about mutating that?"
        },
        {
          "user": "felixbarny",
          "body": "Oh, sorry, I misread. I though you meant `if mappingSnippet.size() == 1`"
        },
        {
          "user": "felixbarny",
          "body": "I made some changes in a8f9bd1b66a74362244caad37fe5d36c7f4df4f0. WDYT?"
        }
      ],
      "body": "Fixes #104400",
      "base_ref": "main",
      "head_ref": "fix-routing-path-multiple-path-match-multi-fields",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104418/comments"
    },
    {
      "number": 104416,
      "title": "[Connectors API] Unify timestamp field parsing",
      "state": "closed",
      "created_at": "2024-01-16T15:16:20Z",
      "updated_at": "2024-04-03T10:47:53Z",
      "closed_at": "2024-01-22T15:21:42Z",
      "merged_at": "2024-01-22T15:21:42Z",
      "author": "jedrazb",
      "labels": [
        ">non-issue",
        ":EnterpriseSearch/Application",
        "Team:Enterprise Search",
        "v8.13.0"
      ],
      "comments_count": 5,
      "review_comments_count": 3,
      "additions": 205,
      "deletions": 31,
      "changed_files": 11,
      "url": "https://github.com/elastic/elasticsearch/pull/104416",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104416",
      "commits": [
        {
          "sha": "f91f0e215b1020f227e8f1e6edc59091c1482399",
          "message": "[Connectors API] Fix bug with connectors api timestamps"
        },
        {
          "sha": "5848e4f59067a3405aec409c8178e7957252a906",
          "message": "Delete docs/changelog/104416.yaml"
        },
        {
          "sha": "e219463d1907ff5f7094fe0c39077eeb54e380e3",
          "message": "Remove functionality to format datetime strings"
        },
        {
          "sha": "3de4bd0c17b55055288c7399fcf7e42d722aab1e",
          "message": "Merge branch 'main' into fix-connectors-api-timestamp-handling"
        }
      ],
      "comments": [
        {
          "user": "timgrein",
          "body": "As I'm seeing now `formatInstantToFrameworkString` I'm wondering, if we should fix it the other way around. As the Connectors API guards everything around the protocol it feels cleaner, if the clients (like the framework) adapt to the API and not the other way around. In theory the connectors API should also be useable for other clients/schedulers."
        },
        {
          "user": "jedrazb",
          "body": "I agree that the issue should be fixed at the framework level, and I already filed an enhancement request https://github.com/elastic/connectors/issues/2067 to unify handling (parsing, representing) datetimes in connectors framework. \r\n\r\nWhile this PR doesn't solve the underlying root cause it mitigates the symptoms and allows us move forward with integration. Also, think about the connectors created in older releases, we need to be backward compatible with their representation with timestamps (or prepare a migration). Once the issue is solved in framework we can change the API formatting of timestamps. "
        },
        {
          "user": "timgrein",
          "body": "Thanks for the explanation, makes sense!"
        }
      ],
      "body": "## Changes\r\n- Unify `datetime` parsing logic with `parseInstant` function applied to all datetime fields from user in connectors APIs - user can provide datetime in any ES-compatible format, the API will take care of making it compatible with [connectors protocol](https://github.com/elastic/connectors/blob/main/docs/CONNECTOR_PROTOCOL.md)",
      "base_ref": "main",
      "head_ref": "fix-connectors-api-timestamp-handling",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104416/comments"
    },
    {
      "number": 104415,
      "title": "Update 8.12.0.asciidoc",
      "state": "closed",
      "created_at": "2024-01-16T15:12:56Z",
      "updated_at": "2024-01-16T15:50:55Z",
      "closed_at": "2024-01-16T15:50:54Z",
      "merged_at": "2024-01-16T15:50:54Z",
      "author": "abdonpijpelink",
      "labels": [
        ">docs",
        "Team:Docs",
        "v8.12.1"
      ],
      "comments_count": 2,
      "review_comments_count": 0,
      "additions": 1,
      "deletions": 1,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104415",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104415",
      "commits": [
        {
          "sha": "127d8bbd5b7e4df46d61e53fc66b7e8f1460d563",
          "message": "Update 8.12.0.asciidoc\n\nChange \"Breaking changes\" into \"Breaking and notable changes\" for the 8.12 release notes."
        }
      ],
      "comments": [],
      "body": "Change \"Breaking changes\" into \"Breaking and notable changes\" for the 8.12 release notes.\r\n\r\nFollow up to https://github.com/elastic/elasticsearch/pull/104365",
      "base_ref": "8.12",
      "head_ref": "abdonpijpelink-patch-1",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104415/comments"
    },
    {
      "number": 104410,
      "title": "Remove redudant children of BroadcastResponse",
      "state": "closed",
      "created_at": "2024-01-16T14:11:03Z",
      "updated_at": "2024-11-30T10:08:00Z",
      "closed_at": "2024-01-16T15:56:30Z",
      "merged_at": "2024-01-16T15:56:30Z",
      "author": "original-brownbear",
      "labels": [
        ">non-issue",
        ":Core/Infra/Transport API",
        "Team:Core/Infra",
        "v8.13.0"
      ],
      "comments_count": 2,
      "review_comments_count": 0,
      "additions": 293,
      "deletions": 655,
      "changed_files": 96,
      "url": "https://github.com/elastic/elasticsearch/pull/104410",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104410",
      "commits": [
        {
          "sha": "e2e00384cb04f359d43ff2012e7c1bcbde16fdf2",
          "message": "Remove redudant children of BroadcastResponse\n\nA couple of children of `BroadCastResponse` are completely redundant,\nadding no extra fields or separate serialization.\nRemoved them and replaced their use by the broadcast response itself."
        }
      ],
      "comments": [],
      "body": "A couple of children of `BroadCastResponse` are completely redundant, adding no extra fields or separate serialization.\r\nRemoved them and replaced their use by the broadcast response itself.\r\n",
      "base_ref": "main",
      "head_ref": "delete-redundant-bc-responses",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104410/comments"
    },
    {
      "number": 104409,
      "title": "[ES|QL] Annotate built-in operators and expose them via SHOW FUNCTIONS",
      "state": "open",
      "created_at": "2024-01-16T14:08:10Z",
      "updated_at": "2024-09-11T16:54:51Z",
      "closed_at": null,
      "merged_at": null,
      "author": "dej611",
      "labels": [
        "external-contributor",
        ":Analytics/ES|QL",
        "v9.0.0"
      ],
      "comments_count": 0,
      "review_comments_count": 1,
      "additions": 421,
      "deletions": 285,
      "changed_files": 90,
      "url": "https://github.com/elastic/elasticsearch/pull/104409",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104409",
      "commits": [
        {
          "sha": "49679d6e615856927e9b7b01b89efd24c6f39974",
          "message": ":sparkles: Annotate builtin functions + expose them into show functions"
        }
      ],
      "comments": [
        {
          "user": "dej611",
          "body": "I've hacked this to make it show up in `SHOW FUNCTIONS`, but after discussing with @luigidellaquila it should live probably somewhere else."
        }
      ],
      "body": "This is a PoC on exposing literal operator (functions) via SHOW FUNCTIONS leveraging the function annotation system.\r\n",
      "base_ref": "main",
      "head_ref": "fix/builtin-show-functions",
      "mergeable": false,
      "mergeable_state": "dirty",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104409/comments"
    },
    {
      "number": 104408,
      "title": "Move TransportTermsEnumAction coordination off transport threads",
      "state": "closed",
      "created_at": "2024-01-16T13:47:52Z",
      "updated_at": "2024-06-17T06:16:38Z",
      "closed_at": "2024-01-29T13:38:29Z",
      "merged_at": "2024-01-29T13:38:29Z",
      "author": "DaveCTurner",
      "labels": [
        ">bug",
        ":Search/Search",
        "Team:Search",
        "v8.13.0"
      ],
      "comments_count": 3,
      "review_comments_count": 0,
      "additions": 29,
      "deletions": 11,
      "changed_files": 2,
      "url": "https://github.com/elastic/elasticsearch/pull/104408",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104408",
      "commits": [
        {
          "sha": "cd77ec0eec1a3fb489eeeb79542e31df28c3fb14",
          "message": "Move TransportTermsEnumAction coordination off transport threads\n\nThis action does `O(#shards)` work as part of its coordination and\nresponse-merging phases, which is too much for the latency-sensitive\ntransport worker threads. This commit moves it to the more appropriate\nsearch coordination threadpool instead."
        },
        {
          "sha": "eaccc914d126a71750413e0f6efc4ed3338795d5",
          "message": "Update docs/changelog/104408.yaml"
        },
        {
          "sha": "1e1a7fceba2a3e27a83e8fd0a757ca9ca6e744ce",
          "message": "Workaround for #97916"
        },
        {
          "sha": "f2601386950eb327e30f8768245919baebfaf2a9",
          "message": "Merge branch 'main' into 2024/01/16/TransportTermsEnumAction-coordination"
        }
      ],
      "comments": [],
      "body": "This action does `O(#shards)` work as part of its coordination and\r\nresponse-merging phases, which is too much for the latency-sensitive\r\ntransport worker threads. This commit moves it to the more appropriate\r\nsearch coordination threadpool instead.",
      "base_ref": "main",
      "head_ref": "2024/01/16/TransportTermsEnumAction-coordination",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104408/comments"
    },
    {
      "number": 104407,
      "title": "Set read timeout for fetching IMDSv2 token",
      "state": "closed",
      "created_at": "2024-01-16T13:30:58Z",
      "updated_at": "2024-01-17T10:08:34Z",
      "closed_at": "2024-01-17T10:08:32Z",
      "merged_at": "2024-01-17T10:08:32Z",
      "author": "arteam",
      "labels": [
        ">enhancement",
        ":Distributed Coordination/Discovery-Plugins",
        "Team:Distributed (Obsolete)",
        "v8.13.0"
      ],
      "comments_count": 3,
      "review_comments_count": 4,
      "additions": 31,
      "deletions": 2,
      "changed_files": 3,
      "url": "https://github.com/elastic/elasticsearch/pull/104407",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104407",
      "commits": [
        {
          "sha": "7a417266458f42c7cf841bc4f05fad47217d2b5f",
          "message": "Set read timeout for fetching IMDSv2 token\n\nUse the timeout set by AWS_METADATA_SERVICE_TIMEOUT environment variable both as connect and read timeout analogous to the AWS SDK.\n\nSee https://docs.aws.amazon.com/sdkref/latest/guide/feature-ec2-instance-metadata.html\n\nResolves #104244"
        },
        {
          "sha": "67ca7287ea69e9296db455231bc492a44230e950",
          "message": "Update docs/changelog/104407.yaml"
        },
        {
          "sha": "a9981f97275ab83c50ce80ae80e3680165078ae2",
          "message": "Get rid of randomness in the build"
        }
      ],
      "comments": [
        {
          "user": "arteam",
          "body": "We have to use `environment` instead of `env`, see https://github.com/gradle/gradle/blob/master/platforms/jvm/testing-jvm/src/main/java/org/gradle/api/tasks/testing/Test.java#L600"
        },
        {
          "user": "kingherc",
          "body": "Is there a reason for the random boolean? I thought you wanted to make the test quick in CI and that's why we set the default to 1 here."
        },
        {
          "user": "mark-vieira",
          "body": "We do not want to introduce randomness in this way or we break test avoidance. If we absolutely must inject random input properties we should do this:\r\n\r\n```groovy\r\nenvironment('AWS_METADATA_SERVICE_TIMEOUT', { BuildParams.random.nextBoolean() ? '1' : '0' }, PropertyNormalization.IGNORE_VALUE)\r\n```"
        },
        {
          "user": "ywangd",
          "body": "The code computes the timeout value based on the environment variable or falls back to a hardcoded default if the environment variable does not exist. Ideally we should be testing this behaviour as well. I see introducing this with Gradle build file is not prefered. The other alternative is dependency injection like how it is done for `CustomWebIdentityTokenCredentialsProvider`\r\nhttps://github.com/elastic/elasticsearch/blob/c8fc737846e927f3caa134df395f0f9d71af66f4/modules/repository-s3/src/main/java/org/elasticsearch/repositories/s3/S3Service.java#L332-L335\r\n\r\nBut that requires some cascading refactoring and may _not_ be worth the effort. Hence I am ok with just testing the default behaviour in this PR."
        }
      ],
      "body": "Resubmit of #104397 ~with the fixed signature of setting the environment variable in the build~ without setting `AWS_METADATA_SERVICE_TIMEOUT` randomly in the build.\r\n\r\n> Use the timeout set by AWS_METADATA_SERVICE_TIMEOUT environment variable both as connect and read timeout analogous to the AWS SDK.\r\nSee https://docs.aws.amazon.com/sdkref/latest/guide/feature-ec2-instance-metadata.html\r\n\r\n\r\nResolves #104244",
      "base_ref": "main",
      "head_ref": "retry-read-timeout-imdsv2",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104407/comments"
    },
    {
      "number": 104406,
      "title": "Support patch transport version from 8.12",
      "state": "closed",
      "created_at": "2024-01-16T13:29:30Z",
      "updated_at": "2024-01-19T07:57:39Z",
      "closed_at": "2024-01-17T11:23:15Z",
      "merged_at": "2024-01-17T11:23:15Z",
      "author": "kkrik-es",
      "labels": [
        ">enhancement",
        "test-full-bwc",
        ":StorageEngine/Downsampling",
        "v8.13.0",
        "Team:StorageEngine"
      ],
      "comments_count": 1,
      "review_comments_count": 0,
      "additions": 17,
      "deletions": 2,
      "changed_files": 3,
      "url": "https://github.com/elastic/elasticsearch/pull/104406",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104406",
      "commits": [
        {
          "sha": "a6e23e8282bd4ce40e1d38922ce90c352d1b7f63",
          "message": "Downsampling supports date_histogram with tz\n\nThis comes with caveats, for downsampled indexes at intervals more than\n15 minutes. For instance,\n - 1-hour downsampling will produce inaccurate\nresults for 1-hour histograms on timezones shifted by XX:30\n - 1-day downsampling will produce inaccurate daily\nhistograms for not-UTC timezones as it tracks days at UTC.\n\nRelated to #101309"
        },
        {
          "sha": "cbcb990dff8c579ef7c762a10641d70fd7dc33cb",
          "message": "Update docs/changelog/103511.yaml"
        },
        {
          "sha": "d494feba66e22e62d29c3d37f9b1296f925c4ee4",
          "message": "test daylight savings"
        },
        {
          "sha": "f2efa834b6d19f09fdf59c64b1fde520ddc07182",
          "message": "Merge remote-tracking branch 'origin/fix/101309' into fix/101309"
        },
        {
          "sha": "c59c0e995bf957936a2707d04af76145858ea17d",
          "message": "update documentation"
        },
        {
          "sha": "4505d61017c0862cab39bf41305e1b03c4e45802",
          "message": "Merge branch 'main' into fix/101309"
        },
        {
          "sha": "0b3738bce308870527f2e32e162155be3baf8155",
          "message": "Offset time buckets over downsampled data with TZ"
        },
        {
          "sha": "05e4071755d519e233140be8c0019430bd3f299a",
          "message": "Update docs/changelog/103511.yaml"
        },
        {
          "sha": "61db24c595b6535a96d371dc48e78fa38d3ad18b",
          "message": "check for TSDS"
        },
        {
          "sha": "d301149e8d4429d0baff505902d65181f2794cbd",
          "message": "Merge remote-tracking branch 'origin/fix/101309' into fix/101309"
        },
        {
          "sha": "15f699d314a2e6bd9f7969b084d6ad025bb152d9",
          "message": "Merge branch 'main' into fix/101309"
        },
        {
          "sha": "59e1b5bac7c1ffd1fbe59994e090b772307c0742",
          "message": "fixme for transport version"
        },
        {
          "sha": "611a7114a612d35ce7f32c47db2146faa6f6978a",
          "message": "add interval to index metadata"
        },
        {
          "sha": "b4d37733b764d2433a6c641f61161a253b3922ba",
          "message": "Merge branch 'main' into fix/101309"
        },
        {
          "sha": "47687485da66d1ec31b4492b46084b875404d865",
          "message": "Merge branch 'main' into fix/101309"
        },
        {
          "sha": "f4c5182efa108df92120f8eca07be67a59dd21a6",
          "message": "add transport version"
        },
        {
          "sha": "6b677474173bae0dc02f99308d1cdf011369cb2c",
          "message": "bump up transport version"
        },
        {
          "sha": "440a3ae226ef4d40f1e774c014834bd6ba256eb6",
          "message": "address feedbcak"
        },
        {
          "sha": "bfa253f0950f5b184e59c4db845131daaa2ab319",
          "message": "spotless fix"
        },
        {
          "sha": "8b737b8e351089c202e0089a2924c92826e20f24",
          "message": "Merge branch 'main' into fix/101309"
        },
        {
          "sha": "570fad7549e92d04dca598375574d7d8cf286d23",
          "message": "Merge branch 'main' into fix/101309"
        },
        {
          "sha": "138d55261881b42a42aa84c52721fabab53490a7",
          "message": "Support patch transport version from 8.12"
        },
        {
          "sha": "b385e78f309737842cdc488f2ce7b9624ae1281f",
          "message": "Update docs/changelog/104406.yaml"
        },
        {
          "sha": "803d7b502fc4462136bc6ba0af15e762f486cb95",
          "message": "Merge branch 'main' into fix/101309"
        },
        {
          "sha": "744ab6115f56e3f47581a966c1d3e2e134376ad7",
          "message": "Merge remote-tracking branch 'origin/fix/101309' into fix/101309"
        }
      ],
      "comments": [],
      "body": "This is a follow-up on #103511 The transport version change will be ported to 8.12 as a patch version in #104446, so main needs to be updated to support that.\r\n\r\nRelated to #101309",
      "base_ref": "main",
      "head_ref": "fix/101309",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104406/comments"
    },
    {
      "number": 104405,
      "title": "Collapse transport versions used in 8.11",
      "state": "closed",
      "created_at": "2024-01-16T13:19:32Z",
      "updated_at": "2024-01-29T13:36:43Z",
      "closed_at": "2024-01-29T13:36:40Z",
      "merged_at": "2024-01-29T13:36:40Z",
      "author": "thecoop",
      "labels": [
        ":Core/Infra/Transport API",
        ">refactoring",
        "Team:Core/Infra",
        "v8.13.0"
      ],
      "comments_count": 2,
      "review_comments_count": 2,
      "additions": 65,
      "deletions": 104,
      "changed_files": 37,
      "url": "https://github.com/elastic/elasticsearch/pull/104405",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104405",
      "commits": [
        {
          "sha": "f40af743a3abefe5f9ce0e2e81446cef0d8ae626",
          "message": "Collapse transport versions used in 8.11"
        },
        {
          "sha": "7b340f95687394bac55270bc7fa3c6049017873f",
          "message": "Make sure constants used are the right ones"
        },
        {
          "sha": "cce800d6cfa34ed942a06dc118c28e1bfe49f5eb",
          "message": "Merge branch 'main' into collapse-8.11-tv"
        },
        {
          "sha": "1b984a68e4a24166999b0849d65977dee79b3b4b",
          "message": "Update version references"
        },
        {
          "sha": "f570c262fe43566b9e945b628d8aab47c1ee4c81",
          "message": "Merge branch 'main' into collapse-8.11-tv"
        }
      ],
      "comments": [
        {
          "user": "ldematte",
          "body": "Nice spotting this! It was actually the wrong version, but since it was an assertFalse we realized this only when we collapsed - it is \"V_8_10_X\", right?"
        },
        {
          "user": "thecoop",
          "body": "Yeah, this PR doesnt have the rename (yet)"
        }
      ],
      "body": "Collapse all transport versions between 8.10 & 8.11 into 8.11",
      "base_ref": "main",
      "head_ref": "collapse-8.11-tv",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104405/comments"
    },
    {
      "number": 104404,
      "title": "[8.12] Simplify the int8_hnsw MIP yaml test (#104331)",
      "state": "closed",
      "created_at": "2024-01-16T13:08:48Z",
      "updated_at": "2024-01-16T13:49:52Z",
      "closed_at": "2024-01-16T13:49:29Z",
      "merged_at": "2024-01-16T13:49:29Z",
      "author": "benwtrent",
      "labels": [
        ">test",
        "backport",
        "Team:Search",
        "auto-merge-without-approval",
        ":Search Relevance/Vectors",
        "v8.12.1"
      ],
      "comments_count": 0,
      "review_comments_count": 0,
      "additions": 5,
      "deletions": 5,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104404",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104404",
      "commits": [
        {
          "sha": "b5f125110f06ca364b0b22298cf3e2507ca955f8",
          "message": "Simplify the int8_hnsw MIP yaml test (#104331)\n\nThe test is unnecessarily complicated with its vectors. This simplifies\nthe vectors and the test. We mainly care about extreme weirdness &\nserver level failures.\n\ncloses: https://github.com/elastic/elasticsearch/issues/104297"
        }
      ],
      "comments": [],
      "body": "Backports the following commits to 8.12:\n - Simplify the int8_hnsw MIP yaml test (#104331)",
      "base_ref": "8.12",
      "head_ref": "backport/8.12/pr-104331",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104404/comments"
    },
    {
      "number": 104403,
      "title": "Rename transport version constant used for 8.10 releases",
      "state": "closed",
      "created_at": "2024-01-16T12:55:15Z",
      "updated_at": "2024-01-17T10:48:04Z",
      "closed_at": "2024-01-17T10:48:00Z",
      "merged_at": "2024-01-17T10:48:00Z",
      "author": "thecoop",
      "labels": [
        ":Core/Infra/Transport API",
        ">refactoring",
        "Team:Core/Infra",
        "v8.13.0"
      ],
      "comments_count": 1,
      "review_comments_count": 0,
      "additions": 51,
      "deletions": 52,
      "changed_files": 34,
      "url": "https://github.com/elastic/elasticsearch/pull/104403",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104403",
      "commits": [
        {
          "sha": "10da554293df0e0a7fa39b3bfa650c815e9a5c52",
          "message": "Rename transport version constant used for 8.10 releases"
        },
        {
          "sha": "f0a06c224f947e6e05cdbd8fc1dafb36d32390c5",
          "message": "Splotless"
        },
        {
          "sha": "23df3270e0783a55d8c83e4ddc9fcda276e62b4d",
          "message": "Merge remote-tracking branch 'upstream/main' into rename-8.10-tv"
        }
      ],
      "comments": [],
      "body": "Rename the constant to make it clear its the one used for 8.10, for multiple different reasons",
      "base_ref": "main",
      "head_ref": "rename-8.10-tv",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104403/comments"
    },
    {
      "number": 104402,
      "title": "Rename transport version constant used for 8.9 releases",
      "state": "closed",
      "created_at": "2024-01-16T12:53:41Z",
      "updated_at": "2024-01-17T09:39:27Z",
      "closed_at": "2024-01-17T09:39:23Z",
      "merged_at": "2024-01-17T09:39:23Z",
      "author": "thecoop",
      "labels": [
        ":Core/Infra/Transport API",
        ">refactoring",
        "Team:Core/Infra",
        "v8.13.0"
      ],
      "comments_count": 1,
      "review_comments_count": 0,
      "additions": 84,
      "deletions": 88,
      "changed_files": 45,
      "url": "https://github.com/elastic/elasticsearch/pull/104402",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104402",
      "commits": [
        {
          "sha": "659f64e31663b9be854404641feacb6055494c60",
          "message": "Rename transport version constant used for 8.9 releases"
        },
        {
          "sha": "179fd8cdee235ba30d55b7061c4f00cc30df47ab",
          "message": "Splotless"
        }
      ],
      "comments": [],
      "body": "Rename the constant to make it clear its the one used for 8.9, for multiple different reasons",
      "base_ref": "main",
      "head_ref": "rename-8.9-tv",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104402/comments"
    },
    {
      "number": 104401,
      "title": "ESQL: Add constant scalar function",
      "state": "closed",
      "created_at": "2024-01-16T12:22:35Z",
      "updated_at": "2024-01-17T18:02:48Z",
      "closed_at": "2024-01-17T18:02:48Z",
      "merged_at": null,
      "author": "alex-spies",
      "labels": [
        "v8.13.0"
      ],
      "comments_count": 0,
      "review_comments_count": 0,
      "additions": 177,
      "deletions": 0,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104401",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104401",
      "commits": [
        {
          "sha": "45999b0116c23e9a44ce9447d59ce4025404ba0f",
          "message": "Implement is_sv function"
        },
        {
          "sha": "18b348cc8e32cb31f4886d8c7ea420c0184e3b34",
          "message": "Implement a const function instead"
        }
      ],
      "comments": [],
      "body": "Add a `ScalarFunction` that maps to a single literal.\r\n\r\nIn contrast to just replacing an expression by a literal, this also maps nulls and multi-values to nulls, consistently with other functions. It also logs a warning if it encounters multi-values.",
      "base_ref": "main",
      "head_ref": "is_sv_function",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104401/comments"
    },
    {
      "number": 104398,
      "title": "Add test coverage for permission behaviour in SymbolicLinkPreservingTar",
      "state": "closed",
      "created_at": "2024-01-16T11:57:15Z",
      "updated_at": "2024-01-16T15:22:56Z",
      "closed_at": "2024-01-16T15:22:52Z",
      "merged_at": "2024-01-16T15:22:52Z",
      "author": "breskeby",
      "labels": [
        ">non-issue",
        ":Delivery/Build",
        "Team:Delivery",
        "auto-merge-without-approval",
        "v7.17.17",
        "v8.12.1",
        "v8.13.0"
      ],
      "comments_count": 1,
      "review_comments_count": 0,
      "additions": 20,
      "deletions": 2,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104398",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104398",
      "commits": [
        {
          "sha": "14b0e2d78d7058c53db6f52fdfb941c43d157e55",
          "message": "Add test coverage for permission behaviour in SymbolicLinkPreservingTar"
        }
      ],
      "comments": [],
      "body": null,
      "base_ref": "main",
      "head_ref": "tar-permission-handling",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104398/comments"
    },
    {
      "number": 104397,
      "title": "Revert \"Set read timeout for fetching IMDSv2 token\"",
      "state": "closed",
      "created_at": "2024-01-16T11:54:31Z",
      "updated_at": "2024-01-16T11:58:51Z",
      "closed_at": "2024-01-16T11:58:50Z",
      "merged_at": "2024-01-16T11:58:50Z",
      "author": "arteam",
      "labels": [
        ">non-issue",
        ":Distributed Coordination/Discovery-Plugins",
        "Team:Distributed (Obsolete)",
        "v8.13.0"
      ],
      "comments_count": 1,
      "review_comments_count": 0,
      "additions": 2,
      "deletions": 34,
      "changed_files": 4,
      "url": "https://github.com/elastic/elasticsearch/pull/104397",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104397",
      "commits": [
        {
          "sha": "60380f289154a2e32cc1bc5a4592bacc2b5972fd",
          "message": "Revert \"Set read timeout for fetching IMDSv2 token\""
        }
      ],
      "comments": [],
      "body": "Reverts #104253",
      "base_ref": "main",
      "head_ref": "revert-104253-IMDSv2-add-read-timeout",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104397/comments"
    },
    {
      "number": 104396,
      "title": "Report current master in PeerFinder",
      "state": "closed",
      "created_at": "2024-01-16T11:51:31Z",
      "updated_at": "2024-06-17T06:16:54Z",
      "closed_at": "2024-01-16T20:27:25Z",
      "merged_at": "2024-01-16T20:27:25Z",
      "author": "DaveCTurner",
      "labels": [
        ">enhancement",
        ":Distributed Coordination/Cluster Coordination",
        "Team:Distributed (Obsolete)",
        "auto-merge-without-approval",
        "v8.13.0"
      ],
      "comments_count": 3,
      "review_comments_count": 3,
      "additions": 194,
      "deletions": 8,
      "changed_files": 9,
      "url": "https://github.com/elastic/elasticsearch/pull/104396",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104396",
      "commits": [
        {
          "sha": "464fee506eaa079be31e3c5ca2ba0069cc568111",
          "message": "Report current master in PeerFinder\n\nIf we cannot join a cluster because the currently-elected master is\nunreachable to us, but we can reach enough other master-eligible nodes,\nthen it can be a little hard to determine the problem from the logs: the\n`ClusterFormationFailureHelper` reports that we have discovered a\npossible quorum, but this is no help if we cannot contact the master\nitself. The `PeerFinder` eventually starts to report the connection\nfailures, but it's hard to tell that they're the important onces.\n\nThis commit adjusts the logging from the `PeerFinder` to include an\nindication that the connection we're attempting is to a node that was\nrecently believed to be the elected master by one of our peers."
        },
        {
          "sha": "2e4c164aefe09f9c76d00a9ea107f6b628eb3afd",
          "message": "Update docs/changelog/104396.yaml"
        },
        {
          "sha": "e5e3c1750e7e686ed3171bb792263fbf60a26151",
          "message": "Merge branch 'main' into 2024/01/16/PeerFinder-report-master"
        },
        {
          "sha": "3809b8b738765aeacde318b8b927d55f2c3a20d2",
          "message": "Test improvement"
        },
        {
          "sha": "7b12d704d5c767e38410565b9348af7060df9076",
          "message": "Fix CoordinationDiagnosticsServiceTests"
        },
        {
          "sha": "8802ebf6216b853f1b14396cd92025340d0be0f6",
          "message": "Set instead of distinct List"
        },
        {
          "sha": "f97e704f5b011bd8f8550468dcf8f5888f9f83ca",
          "message": "Merge branch 'main' into 2024/01/16/PeerFinder-report-master"
        },
        {
          "sha": "ef133e0642691f92117377743a8b1957755b607a",
          "message": "CI poke"
        },
        {
          "sha": "afbf2434d14cb31458b1d4228ad85990fd78a111",
          "message": "Merge branch 'main' into 2024/01/16/PeerFinder-report-master"
        }
      ],
      "comments": [
        {
          "user": "idegtiarenko",
          "body": "NIT: consider using `assertThatLogger` to minimize the setup"
        },
        {
          "user": "idegtiarenko",
          "body": "I believe this is used to populate the new `List<DiscoveryNode> mastersOfPeers`. I was originally assuming we report master seen by each node to verify each have the same, however here it is using `distinct()`. Why not using a set to make it obvious there are no duplicates?"
        },
        {
          "user": "DaveCTurner",
          "body": "Fair point, done in 8802ebf"
        }
      ],
      "body": "If we cannot join a cluster because the currently-elected master is\r\nunreachable to us, but we can reach enough other master-eligible nodes,\r\nthen it can be a little hard to determine the problem from the logs: the\r\n`ClusterFormationFailureHelper` reports that we have discovered a\r\npossible quorum, but this is no help if we cannot contact the master\r\nitself. The `PeerFinder` eventually starts to report the connection\r\nfailures, but it's hard to tell that they're the important onces.\r\n\r\nThis commit adjusts the logging from the `PeerFinder` to include an\r\nindication that the connection we're attempting is to a node that was\r\nrecently believed to be the elected master by one of our peers.",
      "base_ref": "main",
      "head_ref": "2024/01/16/PeerFinder-report-master",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104396/comments"
    },
    {
      "number": 104395,
      "title": "Add stable master indicator troubleshooting links",
      "state": "closed",
      "created_at": "2024-01-16T11:39:29Z",
      "updated_at": "2024-06-17T06:16:58Z",
      "closed_at": "2024-01-16T20:22:34Z",
      "merged_at": "2024-01-16T20:22:34Z",
      "author": "DaveCTurner",
      "labels": [
        ">non-issue",
        "Team:Data Management",
        "auto-merge-without-approval",
        ":Data Management/Health",
        "v8.13.0"
      ],
      "comments_count": 2,
      "review_comments_count": 2,
      "additions": 61,
      "deletions": 22,
      "changed_files": 5,
      "url": "https://github.com/elastic/elasticsearch/pull/104395",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104395",
      "commits": [
        {
          "sha": "d12933f1445ba97bcf1964ab1359d84d99187b65",
          "message": "Add stable master indicator troubleshooting links\n\nAdds links from the stable master health indicator to the relevant\ntroubleshooting docs, as well as making the \"contact support\" link a\nversioned link directly to the right subsection of the troubleshooting\ndocs page."
        },
        {
          "sha": "154cc3b9de5be741380593132dee6e0e252e1ebb",
          "message": "Merge branch 'main' into 2024/01/16/stable-master-links"
        },
        {
          "sha": "65fadc595b2e3ec2154b70447a64aa83dc048ef1",
          "message": "Merge branch 'main' into 2024/01/16/stable-master-links"
        },
        {
          "sha": "7b1ea00b374418d84fd5abd4b8b0b4489a95f880",
          "message": "Javadoc fix"
        },
        {
          "sha": "555c36d113fbf7919dd20166d2a4db59dcf49cba",
          "message": "CI poke"
        },
        {
          "sha": "9f0f154522ac18f3fd43b1eec11a98f55c235ca5",
          "message": "Merge branch 'main' into 2024/01/16/stable-master-links"
        }
      ],
      "comments": [
        {
          "user": "dakrone",
          "body": "I can't comment on the line above this one, but this javadoc is now incorrect, can you fix it?"
        },
        {
          "user": "DaveCTurner",
          "body": "++ thanks, fixed in 7b1ea00b374."
        }
      ],
      "body": "Adds links from the stable master health indicator to the relevant\r\ntroubleshooting docs, as well as making the \"contact support\" link a\r\nversioned link directly to the right subsection of the troubleshooting\r\ndocs page.",
      "base_ref": "main",
      "head_ref": "2024/01/16/stable-master-links",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104395/comments"
    },
    {
      "number": 104394,
      "title": "Endpoint to test Grok pattern",
      "state": "closed",
      "created_at": "2024-01-16T11:28:56Z",
      "updated_at": "2024-01-31T14:29:23Z",
      "closed_at": "2024-01-24T08:35:59Z",
      "merged_at": "2024-01-24T08:35:59Z",
      "author": "jan-elastic",
      "labels": [
        ">enhancement",
        ":ml",
        "Team:ML",
        "v8.13.0"
      ],
      "comments_count": 6,
      "review_comments_count": 34,
      "additions": 614,
      "deletions": 13,
      "changed_files": 15,
      "url": "https://github.com/elastic/elasticsearch/pull/104394",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104394",
      "commits": [
        {
          "sha": "2284725b5034d6e4be7df3c9e6a3048e1447245e",
          "message": "Add extract match ranges functionality to Grok."
        },
        {
          "sha": "3e2057e3a9ad68b435539d5e1a6b638c5f214c50",
          "message": "TestGrokPatternAction and Request"
        },
        {
          "sha": "4c925ddacc81a667160385ea90383a44a5c1f7a3",
          "message": "TestGrokPattern response"
        },
        {
          "sha": "84d5b77e0843ba84ef50078b576e9f2863c2e3ac",
          "message": "Update docs/changelog/104394.yaml"
        },
        {
          "sha": "6ed27d238d43c163279127eccd0784ddeb05d73b",
          "message": "Polish validation error message"
        },
        {
          "sha": "83db25ceb8dbbb14e413f5ed0023a62fb7a8463d",
          "message": "Improve test_grok_pattern API"
        },
        {
          "sha": "05f96581cae0ebd7ac775e7f2091b4ebf5245cd7",
          "message": "Add explicit CharSet"
        },
        {
          "sha": "9daa1b615e897f6bc440be49759ad78da9ca9ef4",
          "message": "Add endpoint to operator constants"
        },
        {
          "sha": "5d16a041ab55665cbd9d4ae348d4adf311aeb9b7",
          "message": "Add TransportTestGrokPatternActionTests"
        },
        {
          "sha": "e1b739453cd9b8f8ea245bc3cb22a74997f44ba0",
          "message": "REST API spec"
        },
        {
          "sha": "b18bd1555f9b421e7211e6b93ea7789e15fc8542",
          "message": "One more TransportTestGrokPatternActionTest"
        },
        {
          "sha": "6c22cef6badf3ddfb564ab11afe71042a4214db7",
          "message": "Fix API spec"
        },
        {
          "sha": "21004c9fd2941ffc515e9c3cc3526c30ff5cb8c9",
          "message": "Refactor REST API spec"
        },
        {
          "sha": "3ce30fca36250b3b024828068bb9034befa012c6",
          "message": "Merge branch 'main' of github.com:elastic/elasticsearch into test_grok_pattern"
        },
        {
          "sha": "018614b4bdab76b86da21ae1f863c933c944f7db",
          "message": "Polish code"
        },
        {
          "sha": "4ee8ffb8b63ba0a0c725ecfb77fe801d8cc0a2cb",
          "message": "Replace TransportTestGrokPatternActionTests by a YAML REST test"
        },
        {
          "sha": "2092a89e5a867bf4aeeb818ceafc16b7aed0ba94",
          "message": "Add ecs_compatibility"
        },
        {
          "sha": "f5ca1bd33b9a6cd9c08d29bedc92b25eab580fce",
          "message": "Always return arrays in the API"
        },
        {
          "sha": "6ef2f1e39bedf49fbd89b9d190329ac0774ceb6e",
          "message": "Documentation"
        },
        {
          "sha": "71cea7f59e1e197bfe41eeee4e8f122eacb98da5",
          "message": "YAML test for ecs_compatibility"
        },
        {
          "sha": "a9e1fd198f65be1ebec2e02d911750420dde32b1",
          "message": "Rename doc fileø"
        },
        {
          "sha": "99c6efa0ae4f64ab968c61b59e9c4e8e84179bea",
          "message": "serverless scope"
        },
        {
          "sha": "c7ad51c7f8faa5597f9fd0a3b70036162d6ecbf4",
          "message": "Fix docs (hopefully)"
        },
        {
          "sha": "e906fc80ff85a37cbb2e68d7a75a190a23ce50b8",
          "message": "Update docs/reference/rest-api/index.asciidoc\n\nCo-authored-by: István Zoltán Szabó <istvan.szabo@elastic.co>"
        },
        {
          "sha": "d0441e23e4ac17f1578a38e659e1165291071b95",
          "message": "Add \"text structure APIs\" header in docs TOC"
        },
        {
          "sha": "d16051d1f585c6ef340bba81aa49b922ffb29f68",
          "message": "Move file"
        },
        {
          "sha": "a06000854a0dfd31403f180f94b0e69a6aa0b5a1",
          "message": "Remove test grok from main index"
        },
        {
          "sha": "8bdd92719779c18af05b6504eaf86f9dbf3e75cd",
          "message": "typo"
        },
        {
          "sha": "98953e2701e7e1b1df1ff41a4c752e566a33499c",
          "message": "Nested APIs underneath text structure"
        }
      ],
      "comments": [
        {
          "user": "jan-elastic",
          "body": "Note: this is the first endpoint I've added to Elasticsearch. I did my best to follow the existing pattern."
        },
        {
          "user": "jan-elastic",
          "body": "I feel like I should add another test to test the REST endpoint. Where are such tests?"
        },
        {
          "user": "droberts195",
          "body": "Basic testing is possible today by simulating an ingest pipeline. The novel thing about this endpoint is that it can return the match positions.\r\n\r\n```suggestion\r\nsummary: Endpoint to find positions of Grok pattern matches\r\n```"
        },
        {
          "user": "droberts195",
          "body": "Releasing an API as experimental and then changing it creates extra work for us. For simple APIs that work alongside existing APIs we often release them as stable from the start. This API ought to be in this category. We need to put some effort into getting the response format right, but we know that already so it's best that we do that before merging this PR rather than ship an experimental version that's hard to use and then change it in the future.\r\n\r\n```suggestion\r\n    \"stability\": \"stable\",\r\n```"
        },
        {
          "user": "droberts195",
          "body": "REST tests for this plugin are in `x-pack/plugin/src/yamlRestTest/resources/rest-api-spec/test/text_structure`. There's already a `find_structure.yml` in that directory for testing the other endpoint. You can add a second file with tests for this new endpoint.\r\n\r\nIf you look in the parallel directories, for example `x-pack/plugin/src/yamlRestTest/resources/rest-api-spec/test/ml`, there are masses of examples of other REST tests."
        },
        {
          "user": "droberts195",
          "body": "Since these are just `null` checks it's best to do them in the constructor."
        },
        {
          "user": "droberts195",
          "body": "This will produce a similar effect as the current validation method, but catch problems before strange exceptions might occur in other methods.\r\n\r\n```suggestion\r\n            this.grokPattern = ExceptionsHelper.requireNonNull(grokPattern, GROK_PATTERN.getPreferredName());\r\n            this.text = ExceptionsHelper.requireNonNull(text, TEXT.getPreferredName());\r\n```"
        },
        {
          "user": "droberts195",
          "body": "This line would throw an obscure exception if `grokPattern` was `null`, which is why it's best to prevent that in the constructor."
        },
        {
          "user": "droberts195",
          "body": "I don't think we should log errors in the Grok constructor as warnings here. It will mean that if a slightly suboptimal Grok pattern makes it into our default set then every call to this endpoint will log a warning. (This has happened in the past because, for example, an upgrade to Joni might decide to log that in `.*?` the `?` is redundant when the old version didn't.) That will create a lot of pointless log noise, because the Grok object that gets created for ingest pipelines will have already logged the same error.\r\n\r\nAlso, the [Find structure API](https://www.elastic.co/guide/en/elasticsearch/reference/current/find-structure.html) lets the user choose the ECS compatibility. So this new API should too, otherwise it won't always be possible to use it in conjunction with \"Find structure\". Please add a new `ecs_compatibility` option to the Request class.\r\n\r\n```suggestion\r\n        Grok grok = new Grok(GrokBuiltinPatterns.get(ECS_COMPATIBILITY_V1.equals(request.getEcsCompatibility())), request.getGrokPattern(), logger::debug);\r\n```"
        },
        {
          "user": "droberts195",
          "body": "There's still an open discussion about whether it's better that this case be returned as an array with one element rather than not an array at all."
        },
        {
          "user": "jan-elastic",
          "body": "After I wrote this comment, I've added the [TransportTestGrokPatternActionTests.java](https://github.com/elastic/elasticsearch/pull/104394/files#diff-78022fc2310b954cd5780b783c69945a6a5fbc653f888bfc26450ca208c6a0d3).\r\n\r\nI guess the yamlRestTest is the better/more common way to implement such tests. Should I remove `TransportTestGrokPatternActionTests`?"
        },
        {
          "user": "jan-elastic",
          "body": "Should `ecs_compatibility` be a query param or a body param? And what's the general guideline for such decisions?"
        },
        {
          "user": "droberts195",
          "body": "I think `ecs_compatibility` should be a URL argument, as it's a simple flag.\r\n\r\nThe API design guidelines say:\r\n\r\n1. We should not allow the same option to be passed either in the body or in the URL arguments - I know many existing APIs breach this guideline, but it's the recommended approach going forwards\r\n2. The body should be used for arguments that could be large, or are lists (passing lists in URL arguments is painful)"
        },
        {
          "user": "jan-elastic",
          "body": "thanks"
        },
        {
          "user": "droberts195",
          "body": "I think it’s best that we always return an array. In some languages that will avoid the developer using our client having to have two code branches, one that deals with an array and one that deals with a single object. Callers who know for sure they’ll only ever get a single element array can just get the first element of the array without checking its length to simplify their code."
        },
        {
          "user": "droberts195",
          "body": "The language clients use these tests to ensure that the generated clients work with a real Elasticsearch server. Therefore it's good if the inputs and outputs cover all the possible options. I know our current tests don't for many existing APIs, but in this case it should be easy to send one possible value of the `ecs_compatibility` field, because I don't think it will make any difference to the outputs in these particular tests.\r\n\r\n```suggestion\r\n        ecs_compatibility: v1\r\n        body:\r\n```"
        },
        {
          "user": "jan-elastic",
          "body": "Done!"
        },
        {
          "user": "jan-elastic",
          "body": "fixed"
        },
        {
          "user": "jan-elastic",
          "body": "@droberts195 Is there a way to properly test these docs, especially the link?\r\n\r\nI've just copy-pasted this from [here](https://github.com/elastic/elasticsearch/blob/d44e05d2c24c77932f8895cadc715c6afdbaa6ee/docs/reference/redirects.asciidoc#grok-basics)"
        },
        {
          "user": "droberts195",
          "body": "```suggestion\r\nmatches the input.\r\n```\r\n\r\nThe last sentence relates to the find structure API and doesn't really make sense for this endpoint."
        },
        {
          "user": "droberts195",
          "body": "If you follow the link to the `buildkite/docs-build-pr` check you get to https://buildkite.com/elastic/docs-build-pr/builds/16167#018d3169-e054-4e1b-89fd-fb6fd49f0fd5. At the bottom of that it says:\r\n\r\n> INFO:build_docs:A preview will soon be available at https://elasticsearch_bk_104394.docs-preview.app.elstc.co/diff\r\n\r\nAnd if you find the relevant page in the long list there it takes you to https://elasticsearch_bk_104394.docs-preview.app.elstc.co/guide/en/elasticsearch/reference/master/test-grok-pattern.html. The \"Grokking Grok\" link works. But what should be one page looks like it's split into multiple pages, one for each section of the source file. So I think there must be a format problem somewhere.\r\n\r\n@szabosteve can you spot the problem?"
        },
        {
          "user": "droberts195",
          "body": "```suggestion\r\n@ServerlessScope(Scope.INTERNAL)\r\npublic class RestTestGrokPatternAction extends BaseRestHandler {\r\n```\r\n\r\nPlease make this usable by the ML UI in serverless, matching the visibility of the find structure API."
        },
        {
          "user": "lcawl",
          "body": "Just a quick look, but I suspect you need a \"[discrete]\" or \"[float]\" before the sections that you want to keep on a single page."
        },
        {
          "user": "jan-elastic",
          "body": "fixed"
        },
        {
          "user": "jan-elastic",
          "body": "Oops. sorry about that. Should be a little bit more careful with copy-pasting"
        },
        {
          "user": "jan-elastic",
          "body": "Thanks all!\r\n\r\n`[discrete]` does the job indeed, and the docs now look good to me."
        },
        {
          "user": "jan-elastic",
          "body": "I just don't understand why this docs (which I took as my example) doesn't have `[discrete]`:\r\nhttps://github.com/elastic/elasticsearch/blob/708730e27c7ba397646609e7dd6a20a02d6d08f0/docs/reference/ml/anomaly-detection/apis/close-job.asciidoc"
        },
        {
          "user": "jan-elastic",
          "body": "And I also don't understand why that doesn't render properly in github nor intellij..."
        },
        {
          "user": "szabosteve",
          "body": "As the TOC is broken currently, we either need to add `leveloffset=+1` here or change every section level in the `test-grok-pattern.asciidoc` file one level deeper to make the chapter a subsection of REST APIs.\r\n\r\n```suggestion\r\ninclude::{es-repo-dir}/text-structure/apis/test-grok-pattern.asciidoc[leveloffset=+1]\r\n```"
        },
        {
          "user": "szabosteve",
          "body": "I don't think this line is needed if you included the text structure APIs in line 56 as it will include the Test grok pattern API, too.\r\n\r\n```suggestion\r\n```"
        }
      ],
      "body": "Example use:\r\n```\r\nGET _text_structure/test_grok_pattern\r\n{\r\n  \"grok_pattern\": \"<%{INT:field}>%{INT:field2}: .*?: %{SYSLOGTIMESTAMP:timestamp}.*?: %.*?: .*? .*? .*? .*?%{IP:ipaddress}/%{INT:field3}, .*? .*?%{IP:ipaddress2}, .*?/%{BASE16NUM:field5} .*?/%{INT:field4}/%{NUMBER:field6}.*\",\r\n  \"text\": [\r\n    \"<190>38357577: KfsdOLA2-AR002: Apr 18 08:44:02.434 GMT: %PFR_MC-6-ROUTE_EVENT_INFO: Route changed Prefix 10.192.46.0/23, BR 10.121.32.255, i/f Gi0/0/0.899, Reason None, OOP Reason Timer Expired\"\r\n  ]\r\n}\r\n```\r\nResponse:\r\n```\r\n{\r\n  \"matches\": [\r\n    {\r\n      \"matched\": true,\r\n      \"fields\": {\r\n        \"field\": [\r\n          {\r\n            \"match\": \"190\",\r\n            \"offset\": 1,\r\n            \"length\": 3\r\n          }\r\n        ],\r\n        \"field2\": [\r\n          {\r\n            \"match\": \"38357577\",\r\n            \"offset\": 5,\r\n            \"length\": 8\r\n          }\r\n        ],\r\n        \"timestamp\": [\r\n          {\r\n            \"match\": \"Apr 18 08:44:02.434\",\r\n            \"offset\": 31,\r\n            \"length\": 19\r\n          }\r\n        ],\r\n        \"ipaddress\": [\r\n          {\r\n            \"match\": \"10.192.46.0\",\r\n            \"offset\": 105,\r\n            \"length\": 11\r\n          }\r\n        ],\r\n        \"field3\": [\r\n          {\r\n            \"match\": \"23\",\r\n            \"offset\": 117,\r\n            \"length\": 2\r\n          }\r\n        ],\r\n        \"ipaddress2\": [\r\n          {\r\n            \"match\": \"10.121.32.255\",\r\n            \"offset\": 124,\r\n            \"length\": 13\r\n          }\r\n        ],\r\n        \"field5\": [\r\n          {\r\n            \"match\": \"f\",\r\n            \"offset\": 141,\r\n            \"length\": 1\r\n          }\r\n        ],\r\n        \"field4\": [\r\n          {\r\n            \"match\": \"0\",\r\n            \"offset\": 147,\r\n            \"length\": 1\r\n          }\r\n        ],\r\n        \"field6\": [\r\n          {\r\n            \"match\": \"0.899\",\r\n            \"offset\": 149,\r\n            \"length\": 5\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  ]\r\n}\r\n```",
      "base_ref": "main",
      "head_ref": "test_grok_pattern",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104394/comments"
    },
    {
      "number": 104392,
      "title": "Use LogDocMergePolicy in VariableWidthHistogramAggregatorTests",
      "state": "closed",
      "created_at": "2024-01-16T10:04:01Z",
      "updated_at": "2024-01-23T09:45:54Z",
      "closed_at": "2024-01-17T14:01:49Z",
      "merged_at": "2024-01-17T14:01:49Z",
      "author": "iverase",
      "labels": [
        ">test",
        ":Analytics/Aggregations",
        "Team:Analytics",
        "v8.12.1",
        "v8.13.0"
      ],
      "comments_count": 1,
      "review_comments_count": 0,
      "additions": 8,
      "deletions": 1,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104392",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104392",
      "commits": [
        {
          "sha": "358c192e660259c18fc58cf9732263e3510f54cd",
          "message": "Use LogDocMergePolicy in VariableWidthHistogramAggregatorTests"
        }
      ],
      "comments": [],
      "body": "The latest lucene upgrade adds a new merge policy that reverse the order of the documents. To avoid randomisation we hardcode the merge policy to LogDocMergePolicy.\r\n\r\nrelates https://github.com/elastic/elasticsearch/pull/103040\r\n\r\nfixes https://github.com/elastic/elasticsearch/issues/103976\r\nfixes https://github.com/elastic/elasticsearch/issues/104316",
      "base_ref": "main",
      "head_ref": "VariableWidthHistogramAggregatorTests",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104392/comments"
    },
    {
      "number": 104391,
      "title": "Fix testListTasksWaitForCompletion",
      "state": "closed",
      "created_at": "2024-01-16T09:35:29Z",
      "updated_at": "2024-02-05T13:11:50Z",
      "closed_at": "2024-02-05T13:11:47Z",
      "merged_at": "2024-02-05T13:11:47Z",
      "author": "idegtiarenko",
      "labels": [
        ">test",
        ":Distributed Coordination/Task Management",
        "Team:Distributed (Obsolete)",
        "v8.13.0"
      ],
      "comments_count": 2,
      "review_comments_count": 6,
      "additions": 58,
      "deletions": 60,
      "changed_files": 2,
      "url": "https://github.com/elastic/elasticsearch/pull/104391",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104391",
      "commits": [
        {
          "sha": "6433b0e3ccd87e862ec79d07e43aa6075e8f1b56",
          "message": "Fix testListTasksWaitForCompletion\n\nThis change attempts to fix testListTasksWaitForCompletion by setting bariers to\n verify task started on all nodes and had a chance to list all running tasks\n before canceling the TEST_TASK"
        },
        {
          "sha": "d18f21cf1f31f4e7c5262fa506cfaaea70c28b8a",
          "message": "Merge branch 'main' into fix_97923\n\n# Conflicts:\n#\tserver/src/main/java/org/elasticsearch/action/admin/cluster/node/tasks/list/TransportListTasksAction.java"
        },
        {
          "sha": "39c6e2256a772778cd71654f60090aadae4b3de8",
          "message": "upd"
        },
        {
          "sha": "eaf21effee7df5d1aba6912a4faa9b2e7483d06c",
          "message": "rename"
        },
        {
          "sha": "f7f998c7c15f72761638b3b7ef80868cc1845fda",
          "message": "upd"
        },
        {
          "sha": "fd162ff46273ab320e02759ef08cf4f471206715",
          "message": "cleanup"
        },
        {
          "sha": "0f7b2e70af5e17d4c1a453119f0e98797ce68fe7",
          "message": "Merge branch 'main' into fix_97923"
        }
      ],
      "comments": [
        {
          "user": "idegtiarenko",
          "body": "I am moving this to the test case specific to the list.\r\nThis is irrelevant to get task as it may or may not fork depending on the node receiving request and actually running the TEST_TASK"
        },
        {
          "user": "DaveCTurner",
          "body": "Hmm I don't follow this argument - doesn't the `storeResult == false` case have the same problem?"
        },
        {
          "user": "DaveCTurner",
          "body": "Could we do this with an `onTaskRegistered` listener rather than an `assertBusy()`?"
        },
        {
          "user": "idegtiarenko",
          "body": "Good point."
        },
        {
          "user": "idegtiarenko",
          "body": "I should have clarified it, this waits for the list task to start on all nodes, not the test task, so it is specific to the list test case."
        },
        {
          "user": "idegtiarenko",
          "body": "This does not really need assertBusy, moved it inside `waitForTestTaskStartOnAllNodes` that ensure task is both visible from list/get API after it have started on all nodes."
        }
      ],
      "body": "This change attempts to fix testListTasksWaitForCompletion by setting bariers to\r\n verify task started on all nodes and had a chance to list all running tasks\r\n before canceling the TEST_TASK\r\n\r\nCloses: #97923 ",
      "base_ref": "main",
      "head_ref": "fix_97923",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104391/comments"
    },
    {
      "number": 104390,
      "title": "[ 8.12] Downsampling supports date_histogram with tz ",
      "state": "closed",
      "created_at": "2024-01-16T09:00:12Z",
      "updated_at": "2024-01-17T08:39:29Z",
      "closed_at": "2024-01-16T14:21:15Z",
      "merged_at": "2024-01-16T14:21:15Z",
      "author": "kkrik-es",
      "labels": [
        ">bug",
        "backport",
        ":StorageEngine/Downsampling",
        "v8.12.1",
        "Team:StorageEngine"
      ],
      "comments_count": 1,
      "review_comments_count": 0,
      "additions": 679,
      "deletions": 56,
      "changed_files": 18,
      "url": "https://github.com/elastic/elasticsearch/pull/104390",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104390",
      "commits": [
        {
          "sha": "8c6cafc6947038524f3392bd115fd4217045ef8a",
          "message": "Port pr-103511 to branch 8.12"
        },
        {
          "sha": "76f96d866261df3b6ea8d31255eb0ef72e677ac6",
          "message": "mark changed transport version as patch"
        }
      ],
      "comments": [],
      "body": "Backports the following commits to 8.12:\r\n\r\n- Downsampling supports date_histogram with tz (#103511)\r\n",
      "base_ref": "8.12",
      "head_ref": "backport/8.12/pr-103511",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104390/comments"
    },
    {
      "number": 104389,
      "title": "Add logging to testRefreshingMultipleTimesWithinWindowSucceeds (#103613)",
      "state": "closed",
      "created_at": "2024-01-16T08:57:13Z",
      "updated_at": "2024-01-16T09:41:02Z",
      "closed_at": "2024-01-16T09:41:02Z",
      "merged_at": "2024-01-16T09:41:02Z",
      "author": "jfreden",
      "labels": [
        ">non-issue",
        ">test",
        ":Security/Security",
        "Team:Security",
        "v8.12.1"
      ],
      "comments_count": 1,
      "review_comments_count": 0,
      "additions": 7,
      "deletions": 3,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104389",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104389",
      "commits": [
        {
          "sha": "4c8af42e83e09ef79d892a4f967d49972ef9e369",
          "message": "Add logging to testRefreshingMultipleTimesWithinWindowSucceeds (#103613)"
        }
      ],
      "comments": [],
      "body": "Backport #103613",
      "base_ref": "8.12",
      "head_ref": "backport-ci-fix-auth-integ-test-812",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104389/comments"
    },
    {
      "number": 104388,
      "title": "Add logging to testRefreshingMultipleTimesWithinWindowSucceeds (#103613)",
      "state": "closed",
      "created_at": "2024-01-16T08:55:27Z",
      "updated_at": "2024-01-16T09:40:01Z",
      "closed_at": "2024-01-16T09:40:01Z",
      "merged_at": "2024-01-16T09:40:01Z",
      "author": "jfreden",
      "labels": [
        ">non-issue",
        ">test",
        ":Security/Security",
        "Team:Security",
        "v8.11.5"
      ],
      "comments_count": 1,
      "review_comments_count": 0,
      "additions": 7,
      "deletions": 3,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104388",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104388",
      "commits": [
        {
          "sha": "ec4f576a68e455dd3911aa7f01b3f03239c68267",
          "message": "Add logging to testRefreshingMultipleTimesWithinWindowSucceeds (#103613)"
        }
      ],
      "comments": [],
      "body": "Backport #103613",
      "base_ref": "8.11",
      "head_ref": "backport-ci-fix-auth-integ-test",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104388/comments"
    },
    {
      "number": 104387,
      "title": "ESQL: Nested expressions inside stats command",
      "state": "closed",
      "created_at": "2024-01-16T06:56:28Z",
      "updated_at": "2024-01-18T02:07:21Z",
      "closed_at": "2024-01-17T23:49:21Z",
      "merged_at": "2024-01-17T23:49:20Z",
      "author": "costin",
      "labels": [
        ">enhancement",
        "Team:Analytics",
        ":Analytics/ES|QL",
        "ES|QL-ui",
        "v8.13.0"
      ],
      "comments_count": 7,
      "review_comments_count": 7,
      "additions": 1096,
      "deletions": 899,
      "changed_files": 22,
      "url": "https://github.com/elastic/elasticsearch/pull/104387",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104387",
      "commits": [
        {
          "sha": "898f1e9ee1326179b5e647b4b9937721cdcce1cb",
          "message": "ESQL: Nested expressions inside stats command\n\nAllow nested expressions to be used both for grouping or inside\n aggregate functions inside the stats command.\nAs such the grammar has been tweaked to allow the stats group to have\n optional aliasing.\n\nFix #99828"
        },
        {
          "sha": "34d149d05158f9b5637cf94bc747f1802f645e5d",
          "message": "Address feedback"
        },
        {
          "sha": "bc678b9c9f1e6013666c276a9eb5568280638363",
          "message": "Update docs/changelog/104387.yaml"
        },
        {
          "sha": "67c139e1b3331c674fcb387aad0718ea7c2a41e6",
          "message": "Update tests as the spaces in the original expression are now preserved"
        },
        {
          "sha": "a69bf9b11dc9d1848a227829e331024c76c25f79",
          "message": "Amend bwc tests"
        },
        {
          "sha": "140b0098a27a00ba2d4c52b131f7a42f52a9412f",
          "message": "Address feedback"
        },
        {
          "sha": "add8e44cd3bb99eaff1f7f8960ea58e76713818f",
          "message": "Merge branch 'main' into esql/synthetic-evals"
        }
      ],
      "comments": [
        {
          "user": "astefan",
          "body": "What is rather confusing is that the name of the field is stripped of white spaces. So, if I'm doing `| stats c = avg(salary3*1.5), s = sum(languages / 2 + 1) by concat(\\\"___\\\", left(_id, 1))` and then adding a `sort` after by copy pasting the \"concat....\" construct I am getting a verification exception which will also suggest to use ``concat(\\\"___\\\",left(_id,1))``. It's not a big deal, but it helps having a predictable user experience. Whatever users write in a `stats` in the form of a function, that's the thing that needs to be used in subsequent commands."
        },
        {
          "user": "astefan",
          "body": "Couldn't this shortcut check be done before everything else in this rule? Something like \"if all aggregates act on field attributes, then just return\" (the aggregates will contain the grouping as well so the rule could pass earlier)."
        },
        {
          "user": "costin",
          "body": "Good catch - added a test for it. We used the parsed content (which removed the whitespace) instead of the actual source."
        },
        {
          "user": "costin",
          "body": "This check handles only the aggregation side, not grouping.\r\nAnd here it's right after the alias is potentially unwrapped (which is the case for aggregate functions)."
        },
        {
          "user": "luigidellaquila",
          "body": "Unrelated to this PR: this was never implemented, we should remove it probably."
        },
        {
          "user": "astefan",
          "body": "I think this is a bug here. I've discovered it while testing `from employees | eval sal = salary + 10000 | stats sum(sal), sum(salary + 10000) by left(first_name, 1), concat(gender,to_string(languages))`. The fields are correctly identified as two and each with a different function, but because their names is the same the result of the query has only one grouping column - `left(first_name, 1), concat(gender,to_string(languages))` - which is incorrect.\r\n\r\nInstead of `name = source.text()` it should be `name = source(field).text();`"
        },
        {
          "user": "costin",
          "body": "Fixed."
        }
      ],
      "body": "Allow nested expressions to be used both for grouping or inside\r\n aggregate functions inside the stats command.\r\nThis allows the following stats command:\r\n\r\n stats c = count( a / 2 ) by x + 1\r\n\r\nSince the grouping now can be an expression, the grammar has \r\n been tweaked to allow the stats group to have optional aliasing \r\n similar to aggregate functions\r\n\r\n stats c = count( a / 2 ) by z = b + 1\r\n\r\nFix #99828 ",
      "base_ref": "main",
      "head_ref": "esql/synthetic-evals",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104387/comments"
    },
    {
      "number": 104386,
      "title": "x-pack/plugin/apm-data: add dynamic setting for enabling template registry",
      "state": "closed",
      "created_at": "2024-01-16T05:44:06Z",
      "updated_at": "2024-01-22T08:47:40Z",
      "closed_at": "2024-01-17T08:06:53Z",
      "merged_at": "2024-01-17T08:06:53Z",
      "author": "axw",
      "labels": [
        ">enhancement",
        ":Data Management/Data streams",
        "Team:Data Management",
        "external-contributor",
        "auto-merge-without-approval",
        "v8.13.0"
      ],
      "comments_count": 4,
      "review_comments_count": 16,
      "additions": 178,
      "deletions": 19,
      "changed_files": 5,
      "url": "https://github.com/elastic/elasticsearch/pull/104386",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104386",
      "commits": [
        {
          "sha": "cc39528b9e6bc4ac1686080b6d3b5a078bfe4be0",
          "message": "apm-data: add dynamic setting for registry\n\nAdd `xpack.apm_data.registry.enabled` cluster setting,\nwhich can be used to disable the index template registry\nwhile restoring a snapshot."
        },
        {
          "sha": "f7445620dc13f8a50aec0df36d83f58b9034c969",
          "message": "Update docs/changelog/104386.yaml"
        },
        {
          "sha": "d3bef487ab9193367489fb0f72066a8775fb18c9",
          "message": "Address review comments\n\n- volatile instead of synchronized\n- handle registry enablement setting in APMPlugin\n- simpify createComponents and close:\n  always create registry, never return it"
        },
        {
          "sha": "1a11fbabd2ad29ac99b585bd2bb392be27974c0e",
          "message": "Fix tests; remove leftover"
        },
        {
          "sha": "d27d07fbdb1ca108b1fedbde5f5628bfe4cef337",
          "message": "Merge branch 'main' into apmdata-dynamic-registry"
        },
        {
          "sha": "c30f6beb48e2fa6f6429503d16819de778c4664a",
          "message": "Test that disabling plugin disables registry"
        },
        {
          "sha": "0091e305d3769a5208c0e1b0f500d1acb1527643",
          "message": "Merge branch 'main' into apmdata-dynamic-registry"
        }
      ],
      "comments": [
        {
          "user": "danielmitterdorfer",
          "body": "Using `synchronized` here is fine but declaring `enabled` as `volatile` would do the trick as well and seems to be more common in the code base."
        },
        {
          "user": "danielmitterdorfer",
          "body": "If you declare `enabled` as `volatile` you can keep the current code (same applies to all similar changes below)"
        },
        {
          "user": "danielmitterdorfer",
          "body": "This is fine as is but I'd probably move that code to `APMPlugin` to keep `APMIndexTemplateRegistry` focused on just installing index templates."
        },
        {
          "user": "danielmitterdorfer",
          "body": "If you move enabling the registry out of its constructor and do it in the plugin you can unconditionally close the registry as before."
        },
        {
          "user": "danielmitterdorfer",
          "body": "Assuming you initialize the cluster setting update listener here, you can do something like that:\r\n\r\n```java\r\n    public Collection<?> createComponents(PluginServices services) {\r\n        logger.info(\"APM ingest plugin is {}\", enabled ? \"enabled\" : \"disabled\");\r\n        registry.set(\r\n            new APMIndexTemplateRegistry(\r\n                services.environment().settings(),\r\n                services.clusterService(),\r\n                services.threadPool(),\r\n                services.client(),\r\n                services.xContentRegistry()\r\n            )\r\n        );\r\n        boolean registryEnabled = APM_DATA_REGISTRY_ENABLED.get(settings);\r\n        if (enabled) {\r\n            APMIndexTemplateRegistry registryInstance = registry.get();\r\n            registryInstance.setEnabled(registryEnabled);\r\n            ClusterService clusterService = services.clusterService();\r\n            clusterService.getClusterSettings().addSettingsUpdateConsumer(APM_DATA_REGISTRY_ENABLED, registryInstance::setEnabled);\r\n            registryInstance.initialize();\r\n        }\r\n        return Collections.emptyList();\r\n    }\r\n```\r\n\r\nNote that there is no need to return the registry. That would only be necessary if you'd have Elasticsearch inject it into other components."
        },
        {
          "user": "axw",
          "body": "Good call, moved it there and introduced unit tests for APMPlugin to verify the setting behaviour."
        },
        {
          "user": "axw",
          "body": "Done, thanks."
        },
        {
          "user": "axw",
          "body": "Done, thanks for the tip."
        },
        {
          "user": "axw",
          "body": "Done, thanks."
        },
        {
          "user": "axw",
          "body": "Done, thanks."
        },
        {
          "user": "danielmitterdorfer",
          "body": "Nit: Leftover?"
        },
        {
          "user": "danielmitterdorfer",
          "body": "Just as a suggestion: If you want to be extra cautious you could also add a test to ensure the registry is disabled if the plugin is disabled."
        },
        {
          "user": "axw",
          "body": "Thanks, good idea."
        },
        {
          "user": "gmarouli",
          "body": "We tend to encapsulate this in the code of the class using the `enabled` flag, in this case the `APMIndexTemplateRegistry`. We usually read the value of the setting and we set it in the constructor and in a method like `initialize()` we register the listener. This way it's transparent in the `APMIndexTemplateRegistry` how the enabled flag is changing. "
        },
        {
          "user": "axw",
          "body": "@gmarouli is it worth me changing now? I can go back and update it.\r\n\r\nThe only way the `enabled` flag is updated is through the `setEnabled` method, and I'm not sure why `APMIndexTemplateRegistry` would care what caused that method to be called -- but if it's conventional and this difference will be confusing, I can go back and update it."
        },
        {
          "user": "gmarouli",
          "body": "It's more about encapsulation, the logic of how the flag for this class is changing is contained in the class itself. It's ok for now, if we come back to this we can address it."
        }
      ],
      "body": "Add `xpack.apm_data.registry.enabled` cluster setting, which can be used to disable the index template registry while restoring a snapshot.\r\n\r\nCloses https://github.com/elastic/elasticsearch/issues/104385",
      "base_ref": "main",
      "head_ref": "apmdata-dynamic-registry",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104386/comments"
    },
    {
      "number": 104384,
      "title": "[DOCS] Ingest processors docs improvements",
      "state": "closed",
      "created_at": "2024-01-15T18:11:25Z",
      "updated_at": "2024-01-17T11:43:38Z",
      "closed_at": "2024-01-17T10:50:29Z",
      "merged_at": "2024-01-17T10:50:29Z",
      "author": "leemthompo",
      "labels": [
        ">docs",
        "Team:Docs",
        "v8.11.0",
        "v8.12.0",
        "v8.12.1",
        "v8.13.0"
      ],
      "comments_count": 3,
      "review_comments_count": 9,
      "additions": 191,
      "deletions": 3,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104384",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104384",
      "commits": [
        {
          "sha": "85361ad60fcba2eeb2c0a80f5edfc7ab58f2b2fa",
          "message": "[DOCS] Categorize ingest processors on overview page, summarize use cases"
        },
        {
          "sha": "faadbd0b8ab514feed2eda4a4118d2bca9bec5e1",
          "message": "Add overview info, subheading, links"
        },
        {
          "sha": "23efd96eb3611a5fba369db42dad29676320421d",
          "message": "Apply suggestions from review\n\nCo-authored-by: István Zoltán Szabó <istvan.szabo@elastic.co>"
        },
        {
          "sha": "12f9b9b08744a3f8689f589a53705c67a898a911",
          "message": "Insert space"
        }
      ],
      "comments": [
        {
          "user": "szabosteve",
          "body": "Nit. I found it a bit easier to read this way.\r\n```suggestion\r\nPoints documents to the right time-based index based on a date or timestamp field.\r\n```"
        },
        {
          "user": "szabosteve",
          "body": "Nit.\r\n```suggestion\r\nUses {ml} to classify and tag text fields.\r\n```"
        },
        {
          "user": "szabosteve",
          "body": "```suggestion\r\nUses the <<grok, Grok>> rules engine to obscure text in the input document matching the given Grok patterns.\r\n```"
        },
        {
          "user": "szabosteve",
          "body": "In line 113 (dissect processor), you mention that this processor uses regex. It might be helpful to mention this fact here, too."
        },
        {
          "user": "szabosteve",
          "body": "In the [General guidelines](https://docs.elastic.dev/content-design/inclusivity#write-for-an-international-audience), avoiding the abbreviations is suggested.\r\n```suggestion\r\nConverts a human-readable byte value to its value in bytes (for example`1kb` becomes `1024`).\r\n```"
        },
        {
          "user": "leemthompo",
          "body": "```suggestion\r\nExtracts structured fields out of a single text field within a document, using the <<grok, Grok>> regular expression dialect that supports reusable aliased expressions.\r\n```"
        },
        {
          "user": "leemthompo",
          "body": "Good idea, updated per [this comment](https://github.com/elastic/elasticsearch/pull/104384/files#r1453468290)"
        },
        {
          "user": "leemthompo",
          "body": "Makes sense, also reworked phrase to use just one parenthesis"
        },
        {
          "user": "leemthompo",
          "body": "```suggestion\r\nConverts a human-readable byte value to its value in bytes (for example `1kb` becomes `1024`).\r\n```"
        }
      ],
      "body": "h/t @linyaru for the excellent proposal to improve the ingest processors overview.\r\nDocs issue: https://github.com/elastic/search-docs-team/issues/32 \r\n\r\n### Commits:\r\n\r\n- [Categorize ingest processors on overview page, summarize use cases](https://github.com/elastic/elasticsearch/commit/85361ad60fcba2eeb2c0a80f5edfc7ab58f2b2fa) \r\n- [Add introductory info, subheading, links](https://github.com/elastic/elasticsearch/pull/104384/commits/faadbd0b8ab514feed2eda4a4118d2bca9bec5e1)\r\n\r\n\r\n### ✨  [Screenshot](https://github.com/elastic/elasticsearch/assets/32779855/68fe5ce9-302f-4935-a6c9-91119373fd27)\r\n\r\n([Live preview ](https://github.com/elastic/elasticsearch/pull/104384#issuecomment-1892604924)will be available once get a green CI)\r\n\r\n### Food for thought 🤔 \r\n\r\nMaybe this info would be more digestible in table format? \r\n\r\n[example](https://github.com/elastic/elasticsearch/assets/32779855/711da091-f2d6-4e60-b8f2-b7d99668e4cc)",
      "base_ref": "main",
      "head_ref": "categorize-ingest-processors",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104384/comments"
    },
    {
      "number": 104381,
      "title": "ESQL: implement LIKE~ and =~ operators",
      "state": "open",
      "created_at": "2024-01-15T17:30:42Z",
      "updated_at": "2024-09-11T16:54:50Z",
      "closed_at": null,
      "merged_at": null,
      "author": "luigidellaquila",
      "labels": [
        "v9.0.0"
      ],
      "comments_count": 0,
      "review_comments_count": 0,
      "additions": 3094,
      "deletions": 1371,
      "changed_files": 35,
      "url": "https://github.com/elastic/elasticsearch/pull/104381",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104381",
      "commits": [
        {
          "sha": "87f2ec887ed108044b50d12e161cc070f72ab624",
          "message": "Introduce =~ (case insensitive equals) operator"
        },
        {
          "sha": "4c1e89c7040ac4c0d4c35a16ae959ad6ca4f250f",
          "message": "Lucene pushdown"
        },
        {
          "sha": "67ac5171d97a2ed5a3bc2386c6ee7797a5548f93",
          "message": "Fix pushdown for non-strings"
        },
        {
          "sha": "b2687160682cbbfb67be9e06edcc07ba657f462c",
          "message": "Implement constant evaluator using Automaton"
        },
        {
          "sha": "c54f444168f7ea483d17bc6b0f078edfd540f21b",
          "message": "Implement review suggestions"
        },
        {
          "sha": "e002329ba21527f41b9a9657b3abe12b9e5613d4",
          "message": "Fix folding and verification"
        },
        {
          "sha": "1f16348ec49083f874ac1561396e74bf40dc404c",
          "message": "Merge branch 'main' into esql/equals_tilde"
        },
        {
          "sha": "952f4c30763878f77d5342f7dc7083628bdf8269",
          "message": "Merge branch 'feature/esql_case_insensitive' into esql/equals_tilde"
        },
        {
          "sha": "53c0eec14965ee3ea053d680a61241d74b2045dd",
          "message": "Limit =~ to string fields"
        },
        {
          "sha": "c5be3eea99a43e19f9c1bef836e6a94f117a6734",
          "message": "Merge remote-tracking branch 'luigidellaquila/esql/equals_tilde' into esql/equals_tilde"
        },
        {
          "sha": "5417b2f4e1a7f0aabef45c4d3b55cf65cb2442d5",
          "message": "Add support for wildcards"
        },
        {
          "sha": "d53727bcd6f1f27bee65dc1fb584655725afec4c",
          "message": "Update docs/changelog/103656.yaml"
        },
        {
          "sha": "f1b423dad7747ed15303f64dabc6607f2e6e6901",
          "message": "Merge branch 'main' into esql/equals_tilde"
        },
        {
          "sha": "a79fd5d74a3d50e36193ddfc62b8f612a68b60fb",
          "message": "Add tests and code cleanup"
        },
        {
          "sha": "c50ba9b793da158c3d24eb8a07c066794be9cc4d",
          "message": "Remove dead code"
        },
        {
          "sha": "2dc49b04c20cdf5f8e53d60f2f7ea239cc3d7a70",
          "message": "Merge branch 'main' into esql/equals_tilde"
        },
        {
          "sha": "9ec7fbfb7ac06d287a5ce204147ef0103d33c2d1",
          "message": "Remove ZoneID"
        },
        {
          "sha": "52718ccd91f1d827d5e7dc05092a3aeda3fc1e48",
          "message": "Optimize using term queries when no wildcards in the pattern"
        },
        {
          "sha": "65704f1668c0202e3c62e6e2d7b1531d451a6e6a",
          "message": "Implement LIKE~ operator"
        },
        {
          "sha": "33405c704f89a3047d3285967ab5b192eee24fbf",
          "message": "Fix checkstyle"
        }
      ],
      "comments": [],
      "body": "Implement `LIKE~` operator and `=~` operators for case insensitive comparison.\r\n\r\n- `=~` works only on strings vs strings (`KEYWORD` or `TEXT`) (eg. `WHERE  name =~ surname` or `WHERE name =~ \"foo\"`) and compares them the same as `==` but case insensitive\r\n- `LIKE~` works only on strings (`KEYWORD` or `TEXT`) vs literal strings (eg `WHERE name LIKE~ \"foo*\"`) and accepts wildcards. It has the same behavior as `LIKE`, but case insensitive\r\n\r\n`LIKE~` falls back to `=~` if the right-hand side literal does not contain wildcards",
      "base_ref": "main",
      "head_ref": "esql/case_insensitive",
      "mergeable": false,
      "mergeable_state": "dirty",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104381/comments"
    },
    {
      "number": 104380,
      "title": "Fix deleting index during snapshot finalization",
      "state": "closed",
      "created_at": "2024-01-15T16:47:40Z",
      "updated_at": "2024-06-17T06:17:06Z",
      "closed_at": "2024-01-18T10:38:18Z",
      "merged_at": "2024-01-18T10:38:18Z",
      "author": "DaveCTurner",
      "labels": [
        ">bug",
        ":Distributed Coordination/Snapshot/Restore",
        "backport",
        "auto-merge-without-approval",
        "v7.17.17"
      ],
      "comments_count": 1,
      "review_comments_count": 0,
      "additions": 182,
      "deletions": 17,
      "changed_files": 7,
      "url": "https://github.com/elastic/elasticsearch/pull/104380",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104380",
      "commits": [
        {
          "sha": "277c5469704a07e6971f90253862e1bcf9072603",
          "message": "Fix deleting index during snapshot finalization\n\nToday if an index is deleted during a very specific order of snapshot\nfinalizations then it's possible we'll miscalculate the latest shard\ngenerations for the shards in that index, causing the deletion of a\nshard-level `index-UUID` blob which prevents further snapshots of that\nshard.\n\nBackports #103817 to 7.17\nCloses #101029"
        },
        {
          "sha": "fa107285e760b07c2ea061657c7107b1abe6fef6",
          "message": "Merge branch '7.17' into 2024/01/15/testDeleteIndexWithOutOfOrderFinalization-7.17"
        },
        {
          "sha": "807c753b068fc9344c1671f3f3f45c5a92287b02",
          "message": "Test fixup"
        }
      ],
      "comments": [],
      "body": "Today if an index is deleted during a very specific order of snapshot\r\nfinalizations then it's possible we'll miscalculate the latest shard\r\ngenerations for the shards in that index, causing the deletion of a\r\nshard-level `index-UUID` blob which prevents further snapshots of that\r\nshard.\r\n\r\nBackports #103817 to 7.17\r\nCloses #101029",
      "base_ref": "7.17",
      "head_ref": "2024/01/15/testDeleteIndexWithOutOfOrderFinalization-7.17",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104380/comments"
    },
    {
      "number": 104378,
      "title": "Fix deleting index during snapshot finalization",
      "state": "closed",
      "created_at": "2024-01-15T16:14:05Z",
      "updated_at": "2024-06-17T06:16:44Z",
      "closed_at": "2024-01-15T17:06:41Z",
      "merged_at": "2024-01-15T17:06:41Z",
      "author": "DaveCTurner",
      "labels": [
        ">bug",
        ":Distributed Coordination/Snapshot/Restore",
        "backport",
        "auto-merge-without-approval",
        "v8.12.1"
      ],
      "comments_count": 0,
      "review_comments_count": 0,
      "additions": 169,
      "deletions": 13,
      "changed_files": 6,
      "url": "https://github.com/elastic/elasticsearch/pull/104378",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104378",
      "commits": [
        {
          "sha": "dc977586734d93dddd90c968e91f21e568b6e735",
          "message": "Fix deleting index during snapshot finalization\n\nToday if an index is deleted during a very specific order of snapshot\nfinalizations then it's possible we'll miscalculate the latest shard\ngenerations for the shards in that index, causing the deletion of a\nshard-level `index-UUID` blob which prevents further snapshots of that\nshard.\n\nBackports #103817 to 8.12\nCloses #101029"
        }
      ],
      "comments": [],
      "body": "Today if an index is deleted during a very specific order of snapshot\r\nfinalizations then it's possible we'll miscalculate the latest shard\r\ngenerations for the shards in that index, causing the deletion of a\r\nshard-level `index-UUID` blob which prevents further snapshots of that\r\nshard.\r\n\r\nBackports #103817 to 8.12\r\nCloses #101029",
      "base_ref": "8.12",
      "head_ref": "2024/01/15/testDeleteIndexWithOutOfOrderFinalization-8.12",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104378/comments"
    },
    {
      "number": 104377,
      "title": "Speedup testTasksWaitForAllTask",
      "state": "closed",
      "created_at": "2024-01-15T16:05:05Z",
      "updated_at": "2024-01-17T07:05:41Z",
      "closed_at": "2024-01-17T07:05:38Z",
      "merged_at": "2024-01-17T07:05:38Z",
      "author": "idegtiarenko",
      "labels": [
        ">test",
        ":Distributed Coordination/Task Management",
        "Team:Distributed (Obsolete)",
        "v8.13.0"
      ],
      "comments_count": 1,
      "review_comments_count": 0,
      "additions": 1,
      "deletions": 1,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104377",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104377",
      "commits": [
        {
          "sha": "712e5eedcfafa733791e10710fa0a971207c9f20",
          "message": "Speedup testTasksWaitForAllTask\n\nThis test relies on setWaitForCompletion expiring as task is always running. No\nneed to wait for it 10 seconds."
        }
      ],
      "comments": [],
      "body": "This test relies on testTasksWaitForAllTask expiring as task is always running. No need to wait for it 10 seconds.\r\n",
      "base_ref": "main",
      "head_ref": "speedup_test",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104377/comments"
    },
    {
      "number": 104376,
      "title": "New APM settings using `telemetry.` prefix deprecate ambiguous `tracing.apm.` settings.",
      "state": "closed",
      "created_at": "2024-01-15T15:45:59Z",
      "updated_at": "2024-01-30T08:34:10Z",
      "closed_at": "2024-01-30T08:34:03Z",
      "merged_at": "2024-01-30T08:34:03Z",
      "author": "mosche",
      "labels": [
        ">non-issue",
        ":Core/Infra/Core",
        "Team:Core/Infra",
        "v8.13.0"
      ],
      "comments_count": 1,
      "review_comments_count": 6,
      "additions": 275,
      "deletions": 97,
      "changed_files": 7,
      "url": "https://github.com/elastic/elasticsearch/pull/104376",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104376",
      "commits": [
        {
          "sha": "e858d764c8b489f0c02669705518985d7c05bb7c",
          "message": "New APM settings using \"telemetry.\" prefix deprecate ambiguous \"tracing.apm.\" settings.\n\nAPM settings are renamed from \"tracing.apm.{name}\" to \"telemetry.tracing.{name}\" for tracing related settings. General APM settings are renamed to \"telemetry.{name}\". The old settings are deprecated and applied as fallback.\n\n(ES-7542)"
        },
        {
          "sha": "6130d9bcc132f4ee10b3ca341301cf809cf2ca03",
          "message": "remove fixme"
        },
        {
          "sha": "58fb5ef984db186b1e592aeb019fd6cbcf12ea84",
          "message": "deprecations"
        },
        {
          "sha": "8793d00c6b9010161223732ea02cb97d5117e744",
          "message": "Merge branch 'main' into ES-7542_cleanup_apm_setting_names"
        },
        {
          "sha": "8791d368fdce4d240ed1510d1d142b67e271ac03",
          "message": "fix merge and tests"
        },
        {
          "sha": "9698efe61c094e81bf30fb0de827e5b72c301a6a",
          "message": "Extract deprecations to a follow up PR"
        },
        {
          "sha": "4e4ef07265dda810fd1125b482df64d4dd12c560",
          "message": "Remove randomeness"
        }
      ],
      "comments": [
        {
          "user": "mosche",
          "body": "These settings are not APMAgent specific, should we rename `APMAgentSettings` to `APMSettings` or `TelemetrySettings` in a follow up PR?"
        },
        {
          "user": "pgomulka",
          "body": "by marking a setting with DeprecatedWarning we are indicating that this will be removed. This is simialar to my comment on the affix settings. https://github.com/elastic/elasticsearch/pull/104345#discussion_r1452076987\r\nas per @stu-elastic 's comment it would have to be consulted with Breaking changes committee\r\n\r\nI think it is worth rising now. We don't necessarily need to plan to remove it in near future, but we want to suggest users not to use it (with just a warning - as you have used)."
        },
        {
          "user": "mosche",
          "body": "Is there any docs on the deprecation process @pgomulka? I'm not sure what needs to be done next."
        },
        {
          "user": "mosche",
          "body": "@pgomulka I've removed all deprecation warnings here. I'm going to move those into an independent PR to wrap up this part."
        },
        {
          "user": "pgomulka",
          "body": "sounds good. feel free to merge"
        },
        {
          "user": "stu-elastic",
          "body": "No need for randomness here."
        }
      ],
      "body": "APM settings are renamed from `tracing.apm.{name}` to `telemetry.tracing.{name}` for tracing related settings. General APM settings are renamed to `telemetry.{name}`. The old settings are deprecated and applied as fallback.\r\n\r\n(ES-7542)",
      "base_ref": "main",
      "head_ref": "ES-7542_cleanup_apm_setting_names",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104376/comments"
    },
    {
      "number": 104375,
      "title": "[8.12] Fix ShardSplittingQueryTests by not using MockRandomMergePolicy for IndexWriter (#104358)",
      "state": "closed",
      "created_at": "2024-01-15T15:45:12Z",
      "updated_at": "2024-01-16T15:14:04Z",
      "closed_at": "2024-01-16T15:14:04Z",
      "merged_at": "2024-01-16T15:14:04Z",
      "author": "carlosdelest",
      "labels": [
        ">test",
        ":Search/Search",
        "backport",
        "Team:Search",
        "v8.12.1"
      ],
      "comments_count": 0,
      "review_comments_count": 0,
      "additions": 13,
      "deletions": 5,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104375",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104375",
      "commits": [
        {
          "sha": "556390a48e4b6784c66ca15d59801ec54e578a4d",
          "message": "Fix ShardSplittingQueryTests by not using MockRandomMergePolicy for IndexWriter (#104358)"
        }
      ],
      "comments": [],
      "body": "Backports the following commits to 8.12:\n - Fix ShardSplittingQueryTests by not using MockRandomMergePolicy for IndexWriter (#104358)",
      "base_ref": "8.12",
      "head_ref": "backport/8.12/pr-104358",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104375/comments"
    },
    {
      "number": 104374,
      "title": "Added more information to the \"deprecation\" log for `skip: feature`",
      "state": "closed",
      "created_at": "2024-01-15T15:43:38Z",
      "updated_at": "2024-01-31T11:32:25Z",
      "closed_at": "2024-01-29T08:47:19Z",
      "merged_at": null,
      "author": "ldematte",
      "labels": [
        ">test",
        ":Core/Infra/Core",
        "Team:Core/Infra",
        "v8.13.0"
      ],
      "comments_count": 5,
      "review_comments_count": 0,
      "additions": 34,
      "deletions": 30,
      "changed_files": 5,
      "url": "https://github.com/elastic/elasticsearch/pull/104374",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104374",
      "commits": [
        {
          "sha": "120c2107b04ff2745f054f2ec5f5131301a1ae8d",
          "message": "Added more information to the \"deprecation\" log for `skip: feature`"
        },
        {
          "sha": "d9bc44482081a85689e6fae31d6f88f8740432e7",
          "message": "Merge branch 'main' into better-skip-feature-deprecation-log"
        }
      ],
      "comments": [],
      "body": "The log we introduced in https://github.com/elastic/elasticsearch/pull/104140 to warn about the deprecation of `skip: features` in favour of the less ambiguous `requires: test_runner_features` is not very useful on a test suite with many files and/or many tests (it just repeats the same message over and over again).\r\n\r\nThis PR changes the log to include the test name and the section location, so the info can be used to track down the exact place where to update the test.\r\n\r\nFor the reviewers: should I include other information, like the file name (or the test suite name)?\r\nOr would it be better to keep the log message generic but include it just once per file/per test run?",
      "base_ref": "main",
      "head_ref": "better-skip-feature-deprecation-log",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104374/comments"
    },
    {
      "number": 104373,
      "title": "Fix CoreFullClusterRestartIT testRollover",
      "state": "closed",
      "created_at": "2024-01-15T15:36:41Z",
      "updated_at": "2024-01-16T15:54:21Z",
      "closed_at": "2024-01-16T15:54:18Z",
      "merged_at": "2024-01-16T15:54:17Z",
      "author": "joegallo",
      "labels": [
        ">test",
        ":Data Management/CAT APIs",
        "Team:Data Management",
        "v8.13.0"
      ],
      "comments_count": 1,
      "review_comments_count": 0,
      "additions": 7,
      "deletions": 4,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104373",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104373",
      "commits": [
        {
          "sha": "b80f45f72f043daccd310bd1bbc95762a4937814",
          "message": "Add an assertBusy to work around a bug"
        },
        {
          "sha": "88e902e503379dafe5dc893864ccf4c25901a4d5",
          "message": "Add a comment linking to the bug"
        },
        {
          "sha": "04cd9270fa2f6f38a383fe0871ffbd24ad667273",
          "message": "Include error_trace\n\nIn case some other bug should happen to come up sometime, it'd be nice\nto have the stack trace."
        }
      ],
      "comments": [],
      "body": "Closes #97809\r\n\r\n#104371 is the root issue here, and since the test in question isn't really primarily about testing the cat APIs specifically, I think it's fair to 'just' workaround the bug in the extremely rare case that it happens to come up.",
      "base_ref": "main",
      "head_ref": "fix-CoreFullClusterRestartIT-testRollover",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104373/comments"
    },
    {
      "number": 104372,
      "title": "Treat failed shard as no data in GetStatusActionIT",
      "state": "closed",
      "created_at": "2024-01-15T15:23:03Z",
      "updated_at": "2024-01-17T06:49:31Z",
      "closed_at": "2024-01-17T06:49:28Z",
      "merged_at": "2024-01-17T06:49:28Z",
      "author": "danielmitterdorfer",
      "labels": [
        ">test",
        ":UniversalProfiling/Application",
        "Team:obs-knowledge",
        "v8.13.0"
      ],
      "comments_count": 1,
      "review_comments_count": 0,
      "additions": 16,
      "deletions": 6,
      "changed_files": 3,
      "url": "https://github.com/elastic/elasticsearch/pull/104372",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104372",
      "commits": [
        {
          "sha": "f181534021491160d6dee2a54cb9c634e53e4a04",
          "message": "Treat failed shard as no data in GetStatusActionIT\n\nAmong other things, the profiling get status API checks whether a\ncluster contains any profiling-related data. It uses the search API for\nthat internally since #103920. However, shards might not ready shortly\nafter index creation and consequently that search request will fail.\n\nWith this commit we check whether a search phase has failed and treat\nthis as if the cluster contains no profiling-related data.\n\nCloses #104035"
        },
        {
          "sha": "87cef39ef2142572224db1ffe9fc11ee7508114b",
          "message": "Reenable another test affected by this root cause"
        },
        {
          "sha": "79563d401d553748ba97ad771edfe7ee341bb317",
          "message": "Remove obsolete import"
        }
      ],
      "comments": [],
      "body": "Among other things, the profiling get status API checks whether a cluster contains any profiling-related data. It uses the search API for that internally since #103920. However, shards might not be ready shortly after index creation and consequently that search request will fail.\r\n\r\nWith this commit we check whether a search phase has failed and treat this as if the cluster contains no profiling-related data.\r\n\r\nCloses #104035\r\nCloses #104038",
      "base_ref": "main",
      "head_ref": "profiling-status-test",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104372/comments"
    },
    {
      "number": 104370,
      "title": "[ML] Detect timeout when waiting for download task (#103197)",
      "state": "closed",
      "created_at": "2024-01-15T14:56:32Z",
      "updated_at": "2024-01-15T15:44:57Z",
      "closed_at": "2024-01-15T15:44:34Z",
      "merged_at": "2024-01-15T15:44:34Z",
      "author": "davidkyle",
      "labels": [
        ">test",
        ":ml",
        "backport",
        "auto-merge-without-approval",
        "v8.12.1"
      ],
      "comments_count": 0,
      "review_comments_count": 0,
      "additions": 119,
      "deletions": 39,
      "changed_files": 7,
      "url": "https://github.com/elastic/elasticsearch/pull/104370",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104370",
      "commits": [
        {
          "sha": "8578dce17ecb0434d67fe05e5172cad129d6f96c",
          "message": "[ML] Detect timeout when waiting for download task (#103197)\n\nA list tasks timeout indicates the task exists and is in progress.\nInterpreting the timeout as the task not existing meant the download\ncheck would incorrectly assume the download had completed.\n# Conflicts:\n#\tx-pack/plugin/ml-package-loader/src/main/java/org/elasticsearch/xpack/ml/packageloader/action/TransportLoadTrainedModelPackage.java\n#\tx-pack/plugin/src/yamlRestTest/resources/rest-api-spec/test/ml/3rd_party_deployment.yml"
        }
      ],
      "comments": [],
      "body": "A list tasks timeout indicates the task exists and is in progress. Interpreting the timeout as the task not existing meant the download check would incorrectly assume the download had completed.\r\n\r\nbackport of #103197",
      "base_ref": "8.12",
      "head_ref": "waiting-on-download-812",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104370/comments"
    },
    {
      "number": 104369,
      "title": "[8.12] Don't throw error for remote shards that open PIT filtered out (#104288)",
      "state": "closed",
      "created_at": "2024-01-15T14:38:16Z",
      "updated_at": "2024-01-15T15:30:37Z",
      "closed_at": "2024-01-15T15:30:36Z",
      "merged_at": "2024-01-15T15:30:36Z",
      "author": "javanna",
      "labels": [
        ">bug",
        ":Search/Search",
        "backport",
        "Team:Search",
        "v8.12.1"
      ],
      "comments_count": 0,
      "review_comments_count": 0,
      "additions": 161,
      "deletions": 20,
      "changed_files": 6,
      "url": "https://github.com/elastic/elasticsearch/pull/104369",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104369",
      "commits": [
        {
          "sha": "52d5938882c0c83f471e95b8f84e1090ab240dd1",
          "message": "Don't throw error for remote shards that open PIT filtered out (#104288)\n\nWe recently introduced support for index_filter to the open point in time API (see #102388).\r\nOpen point in time supports executing against remote indices, in which case it will open a\r\nreader context against the target remote shards. With support for index_filter, shards that\r\ncannot match the filter are not even included in the PIT id that open PIT returns.\r\n\r\nWhen the following search is executed that includes such PIT id, there is one search shards call\r\nper cluster performed, which will return all shards from the targeted indices, including those\r\nthat open PIT has filtered out. In that case, we should just ignore those shards instead of\r\nthrowing exception when those are looked up in the search context id map built from the PIT id.\r\n\r\nCloses #102596"
        }
      ],
      "comments": [],
      "body": "Backports the following commits to 8.12:\n - Don't throw error for remote shards that open PIT filtered out (#104288)",
      "base_ref": "8.12",
      "head_ref": "backport/8.12/pr-104288",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104369/comments"
    },
    {
      "number": 104367,
      "title": "Add .status to end of HealthPeriodicLogger metric names",
      "state": "closed",
      "created_at": "2024-01-15T14:00:47Z",
      "updated_at": "2024-01-15T14:59:11Z",
      "closed_at": "2024-01-15T14:59:07Z",
      "merged_at": "2024-01-15T14:59:07Z",
      "author": "mattc58",
      "labels": [
        ">non-issue",
        "Team:Data Management",
        ":Data Management/Health",
        "v8.13.0"
      ],
      "comments_count": 1,
      "review_comments_count": 0,
      "additions": 1,
      "deletions": 1,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104367",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104367",
      "commits": [
        {
          "sha": "49d886946c04016495f8168cf95d828776382312",
          "message": "Add .status to end of HealthPeriodicLogger metric names"
        }
      ],
      "comments": [],
      "body": "This adds `.status` to the end of the APM metrics in `HealthPeriodicLogger`. PR https://github.com/elastic/elasticsearch/pull/103388 added the validation for the metric names.",
      "base_ref": "main",
      "head_ref": "fix-hpl-metric-name",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104367/comments"
    },
    {
      "number": 104366,
      "title": "Account for shard count in profiling test timeout",
      "state": "closed",
      "created_at": "2024-01-15T13:15:00Z",
      "updated_at": "2024-01-16T14:06:48Z",
      "closed_at": "2024-01-16T14:06:45Z",
      "merged_at": "2024-01-16T14:06:45Z",
      "author": "danielmitterdorfer",
      "labels": [
        ">test",
        ":UniversalProfiling/Application",
        "Team:obs-knowledge",
        "v8.13.0"
      ],
      "comments_count": 1,
      "review_comments_count": 0,
      "additions": 3,
      "deletions": 8,
      "changed_files": 4,
      "url": "https://github.com/elastic/elasticsearch/pull/104366",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104366",
      "commits": [
        {
          "sha": "8379b21cd6963feb51385b7c5c65e70caba1096b",
          "message": "Account for shard count in profiling test timeout\n\nWith this commit we increase the timeout to wait for a green cluster\nstate in the integration tests for the profiling plugin. We do this\nbecause the tests create all profiling-related indices with more shards\nthan usual and that might take longer than usual until the cluster is\ngreen.\n\nCloses #103809"
        }
      ],
      "comments": [],
      "body": "With this commit we increase the timeout to wait for a green cluster state in the integration tests for the profiling plugin. We do this because the tests create all profiling-related indices with more shards than usual and that might take longer than usual until the cluster is green.\r\n\r\nCloses #103809",
      "base_ref": "main",
      "head_ref": "profiling-tests",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104366/comments"
    },
    {
      "number": 104365,
      "title": "Update migrate_8_12.asciidoc",
      "state": "closed",
      "created_at": "2024-01-15T11:59:40Z",
      "updated_at": "2024-01-16T12:55:19Z",
      "closed_at": "2024-01-16T12:55:17Z",
      "merged_at": "2024-01-16T12:55:17Z",
      "author": "dbrimley",
      "labels": [
        ">docs",
        "Team:Docs",
        "v8.12.1"
      ],
      "comments_count": 3,
      "review_comments_count": 1,
      "additions": 11,
      "deletions": 6,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104365",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104365",
      "commits": [
        {
          "sha": "14ded58cab8443f555456bb2f3fa7f6f9fefdf5e",
          "message": "Update migrate_8_12.asciidoc\n\nFrom 8.12 we are providing a more specific approach to how we document breaking changes.  We are introducing a new section called \"Notable Changes\", these are changes to areas that we do not commit to not break, but may have a minor impact to users."
        },
        {
          "sha": "447458520067d6b082030cf195a2f370945daf10",
          "message": "Update docs/reference/migration/migrate_8_12.asciidoc"
        }
      ],
      "comments": [
        {
          "user": "abdonpijpelink",
          "body": "```suggestion\r\n[[notable-changes-8.12]]\r\n```\r\nOtherwise we'll have a duplicate ID."
        }
      ],
      "body": "From 8.12 we are providing a more specific approach to how we document breaking changes.  We are introducing a new section called \"Notable Changes\", these are changes to areas that we do not commit to not break, but may have a minor impact to users.\r\n\r\n<!--\r\nThank you for your interest in and contributing to Elasticsearch! There\r\nare a few simple things to check before submitting your pull request\r\nthat can help with the review process. You should delete these items\r\nfrom your submission, but they are here to help bring them to your\r\nattention.\r\n-->\r\n\r\n- Have you signed the [contributor license agreement](https://www.elastic.co/contributor-agreement)?\r\n- Yes\r\n- Have you followed the [contributor guidelines](https://github.com/elastic/elasticsearch/blob/main/CONTRIBUTING.md)?\r\n- Yes\r\n- If submitting code, have you built your formula locally prior to submission with `gradle check`?\r\n- If submitting code, is your pull request against main? Unless there is a good reason otherwise, we prefer pull requests against main and will backport as needed.\r\n- If submitting code, have you checked that your submission is for an [OS and architecture that we support](https://www.elastic.co/support/matrix#show_os)?\r\n- If you are submitting this code for a class then read our [policy](https://github.com/elastic/elasticsearch/blob/main/CONTRIBUTING.md#contributing-as-part-of-a-class) for that.\r\n",
      "base_ref": "8.12",
      "head_ref": "dbrimley-patch-1",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104365/comments"
    },
    {
      "number": 104364,
      "title": "[8.12][DOCS] Adds relevant ML-CPP items to release notes",
      "state": "closed",
      "created_at": "2024-01-15T11:26:14Z",
      "updated_at": "2024-01-15T16:04:29Z",
      "closed_at": "2024-01-15T16:04:25Z",
      "merged_at": "2024-01-15T16:04:25Z",
      "author": "szabosteve",
      "labels": [
        ">docs",
        ":ml",
        "Team:Docs",
        "Team:ML",
        "v8.12.0"
      ],
      "comments_count": 3,
      "review_comments_count": 0,
      "additions": 3,
      "deletions": 0,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104364",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104364",
      "commits": [
        {
          "sha": "d368dc8e8693c45ee59010179f8be658de6f91e0",
          "message": "[8.12][DOCS] Adds relevant ML-CPP items to release notes."
        },
        {
          "sha": "3e361b325c3b7602c0aa3cafafb718292ca73c65",
          "message": "[DOCS] Fixes URLs."
        }
      ],
      "comments": [],
      "body": "## Overview\r\n\r\nThis PR copies [release note items](https://github.com/elastic/ml-cpp/blob/main/docs/CHANGELOG.asciidoc#es-version-8120) from the ML-CPP repo to the ES release notes.",
      "base_ref": "8.12",
      "head_ref": "8.12-sdt-25",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104364/comments"
    },
    {
      "number": 104363,
      "title": "[ML] Apply windowing and chunking to long documents",
      "state": "closed",
      "created_at": "2024-01-15T11:18:51Z",
      "updated_at": "2024-04-02T15:34:02Z",
      "closed_at": "2024-02-01T19:21:49Z",
      "merged_at": "2024-02-01T19:21:49Z",
      "author": "davidkyle",
      "labels": [
        ":ml",
        "Team:ML",
        "v8.13.0"
      ],
      "comments_count": 4,
      "review_comments_count": 21,
      "additions": 1639,
      "deletions": 228,
      "changed_files": 76,
      "url": "https://github.com/elastic/elasticsearch/pull/104363",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104363",
      "commits": [
        {
          "sha": "3ba84bd4a3e686635ab7341ad0c8e586becb1b7f",
          "message": "Chunk text expansion and embedding results"
        },
        {
          "sha": "07237e64c070041e8fe683e15a9cb0068f5df754",
          "message": "Add windowing options"
        },
        {
          "sha": "8c077ec76a1e7672b1f2e92b6189b367c94142e3",
          "message": "Update docs/changelog/104363.yaml"
        },
        {
          "sha": "f2657a9d73602de1a37e6e212381d8ba25ac9d52",
          "message": "timout"
        },
        {
          "sha": "44caf2124e68c0407e215d37f65168f439bf05ed",
          "message": "oops"
        },
        {
          "sha": "96909112bd202ddd3832dff81476aae93dedb8e9",
          "message": "fix operatorprivilegesit"
        },
        {
          "sha": "f567e87ae6b8ec41b1838569f5f002955d579117",
          "message": "Address review comments"
        },
        {
          "sha": "45f275ae43f3e60498518c3be3aa121fe5c760b7",
          "message": "Merge branch 'main' into chunking\n\n# Conflicts:\n#\tserver/src/main/java/org/elasticsearch/TransportVersions.java"
        },
        {
          "sha": "cc752e38d29765f3e16f001b26678d61c720008c",
          "message": "fix test"
        },
        {
          "sha": "aaed76529ac9b488da36729169786e36f232ce25",
          "message": "Default span value"
        },
        {
          "sha": "ef277e6846f6c03f88eed58ac63ceba0cb9b83c0",
          "message": "Merge branch 'main' into chunking\n\n# Conflicts:\n#\tserver/src/main/java/org/elasticsearch/TransportVersions.java"
        },
        {
          "sha": "27e277dc8d3fcd63000a03dec22b3d44ab8ae096",
          "message": "Add chunked inference method to services"
        },
        {
          "sha": "b92a2cf3a07b060d72ec8c244aa32bc51a1f231f",
          "message": "Merge branch 'main' into chunking\n\n# Conflicts:\n#\tserver/src/main/java/org/elasticsearch/TransportVersions.java"
        },
        {
          "sha": "4ab95beb412844c7821fb99302c2fa8f6f6834aa",
          "message": "fix compilation after merge"
        },
        {
          "sha": "f0037a902335dfff316a6eb9fed5fe1848728f36",
          "message": "Remove chunked inference action"
        },
        {
          "sha": "20fbd93c12d691e16eeaf2275062d8fb0885ad4b",
          "message": "Add input type to chunk method"
        },
        {
          "sha": "1a3cdf9d2c47ab5c98a706e6b314229f2fbfd8bb",
          "message": "more tests for tokenisation update"
        },
        {
          "sha": "2a2bcaaf3bb65a5cb09c2d46c0367e69fb6b6681",
          "message": "validation on window size"
        },
        {
          "sha": "be4a8cd880123fa43e390a6403f5993353cf0a43",
          "message": "fix compilation"
        },
        {
          "sha": "3fde8b239b9b839a491de3a148282b4641af5fec",
          "message": "Fix operator privileges test"
        },
        {
          "sha": "2c7736f9da0503036a5ca44ef40332b937f09ea6",
          "message": "address review feedback"
        },
        {
          "sha": "9a6d6446aec61dec01c2547916b4b632ab1cd46b",
          "message": "Merge branch 'main' into chunking\n\n# Conflicts:\n#\tserver/src/main/java/org/elasticsearch/TransportVersions.java"
        },
        {
          "sha": "40173a1ff3537f0fab4bf012a8624269f6fb5e8e",
          "message": "revert accidental serialisation change"
        },
        {
          "sha": "d51ed8b3ffd2fec739ccd65434dcbeb6aeec744a",
          "message": "Merge branch 'main' into chunking\n\n# Conflicts:\n#\tserver/src/main/java/org/elasticsearch/TransportVersions.java"
        }
      ],
      "comments": [
        {
          "user": "jonathan-buttner",
          "body": "Should we use `Objects.equals()` for `span` here like `windowSize`?"
        },
        {
          "user": "jonathan-buttner",
          "body": "Should this be `inference` to match the field name in the `toXContent`?"
        },
        {
          "user": "jonathan-buttner",
          "body": "Do we need to override `equals` and `hashCode` for this class?"
        },
        {
          "user": "jonathan-buttner",
          "body": "Should the timeout here be based on the timeout passed in the chunked request?"
        },
        {
          "user": "jonathan-buttner",
          "body": "Just checking, is this used? Sorry if I missed it, but it looks like it's shadowed in a couple places below, so I wasn't sure."
        },
        {
          "user": "davidkyle",
          "body": "++ the tests didn't catch it as `null == null` "
        },
        {
          "user": "davidkyle",
          "body": "Yes. The serialisation tests didn't catch this because there is a non default implementation of `equals` and `hashCode` higher up the class hierarchy. "
        },
        {
          "user": "davidkyle",
          "body": "Good catch, I added a test"
        },
        {
          "user": "davidkyle",
          "body": "yup leftover from the first testing I did "
        },
        {
          "user": "jonathan-buttner",
          "body": "Can we make this optional without checking the transport version and ensuring we're on the right transport version?"
        },
        {
          "user": "jonathan-buttner",
          "body": "I might have missed it but is this variable used?"
        },
        {
          "user": "jonathan-buttner",
          "body": "nit: My ide was telling me before that I think `ANY` and `SPARE_EMBEDDING` can be combined into one case."
        },
        {
          "user": "jonathan-buttner",
          "body": "👍 since we don't support chunking in cohere we can just add this when we add support in cohere."
        },
        {
          "user": "jonathan-buttner",
          "body": "Should we return immediately after this?"
        },
        {
          "user": "jonathan-buttner",
          "body": "Should we return immediately after this?"
        },
        {
          "user": "jonathan-buttner",
          "body": "Not sure if it isn't feasible but should we be using an enum for these special values instead?"
        },
        {
          "user": "davidkyle",
          "body": "Good catch I thought I had introduced the class in this PR. I switched to using the `-1` for not set pattern"
        },
        {
          "user": "davidkyle",
          "body": "yup not used, removed now thanks"
        },
        {
          "user": "davidkyle",
          "body": "😨 good catch"
        },
        {
          "user": "davidkyle",
          "body": "Probably not worth the BWC serialisation hassle now but if I was starting from scratch then yes"
        },
        {
          "user": "droberts195",
          "body": "`-1` won't work with `writeVInt()`. Maybe it needs bespoke serialization code of sending a separate `boolean` _if_ the remote version is high enough."
        }
      ],
      "body": "Adds a `chunkedInfer()` method to the `InferenceService` interface which automatically splits long text before sending the inputs to the model. Chunking is done via a sliding window of length `window_size` with an overlap of `span`. \r\n\r\nBy default the window size is equal to the model's max sequence length and span is 50% of that (after accounting for special tokens). One reason to choose a smaller window size is that processing time is exponential on the number of input tokens, reducing the window size results in some lost context (fewer tokens per input) but may be the fastest strategy for ingesting long text.\r\n\r\nThis change only applies to the ELSER model and Text Embedding models deployed locally in the cluster\r\n\r\n### Response Structure\r\n(Field names subject to change)\r\n```\r\n{\r\n  \"sparse_embedding_chunk\": [\r\n       {\r\n          \"text\": \"first text chunk\",\r\n          \"inference\": { sparse embedding tokens...}\r\n        },\r\n        {\r\n          \"text\": \"second text chunk\",\r\n          \"inference\": { sparse embedding tokens...}\r\n        }, ...\r\n    ]\r\n}\r\n```\r\n\r\n\r\n   \r\n\r\n\r\n",
      "base_ref": "main",
      "head_ref": "chunking",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104363/comments"
    },
    {
      "number": 104360,
      "title": "[8.12] [DOCS] Adds Hugging Face service to the inference API docs (#104190)",
      "state": "closed",
      "created_at": "2024-01-15T10:23:22Z",
      "updated_at": "2024-01-15T10:49:15Z",
      "closed_at": "2024-01-15T10:49:10Z",
      "merged_at": "2024-01-15T10:49:10Z",
      "author": "szabosteve",
      "labels": [
        ">docs",
        "backport",
        "Team:Docs",
        "v8.12.1"
      ],
      "comments_count": 1,
      "review_comments_count": 0,
      "additions": 69,
      "deletions": 2,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104360",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104360",
      "commits": [
        {
          "sha": "ea0cfebe6f1801f6bd8bbad08c51af9b0bac1111",
          "message": "[DOCS] Adds Hugging Face service to the inference API docs (#104190)"
        }
      ],
      "comments": [],
      "body": "Backports the following commits to 8.12:\n - [DOCS] Adds Hugging Face service to the inference API docs (#104190)",
      "base_ref": "8.12",
      "head_ref": "backport/8.12/pr-104190",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104360/comments"
    },
    {
      "number": 104359,
      "title": "Remove obsolete comments on block filtering",
      "state": "closed",
      "created_at": "2024-01-15T10:16:36Z",
      "updated_at": "2024-01-16T09:00:15Z",
      "closed_at": "2024-01-16T09:00:12Z",
      "merged_at": "2024-01-16T09:00:12Z",
      "author": "alex-spies",
      "labels": [
        ">non-issue",
        "Team:Analytics",
        ":Analytics/ES|QL",
        "v8.13.0"
      ],
      "comments_count": 1,
      "review_comments_count": 0,
      "additions": 1,
      "deletions": 13,
      "changed_files": 12,
      "url": "https://github.com/elastic/elasticsearch/pull/104359",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104359",
      "commits": [
        {
          "sha": "605b19776492ec89ec0b125d9f6ab40d5529f674",
          "message": "Remove obsolete comments on block filtering\n\nFiltering with shallow copies is not planned for now."
        }
      ],
      "comments": [],
      "body": "Filtering with shallow copies is not planned for now.",
      "base_ref": "main",
      "head_ref": "esql-remove-obsolete-comments",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104359/comments"
    },
    {
      "number": 104358,
      "title": "Fix ShardSplittingQueryTests by not using MockRandomMergePolicy for IndexWriter",
      "state": "closed",
      "created_at": "2024-01-15T09:27:22Z",
      "updated_at": "2024-01-15T15:45:27Z",
      "closed_at": "2024-01-15T15:44:05Z",
      "merged_at": "2024-01-15T15:44:05Z",
      "author": "carlosdelest",
      "labels": [
        ">test",
        ":Search/Search",
        "Team:Search",
        "auto-backport",
        "v8.12.0",
        "v8.12.1",
        "v8.13.0"
      ],
      "comments_count": 2,
      "review_comments_count": 0,
      "additions": 13,
      "deletions": 5,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104358",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104358",
      "commits": [
        {
          "sha": "1c2f3869ee86772661cabd46b65c0332d1668803",
          "message": "Fix ShardSplittingQueryTests by not using MockRandomMergePolicy for the IndexWriter"
        },
        {
          "sha": "c96b307978790755d8312fb35af95dacd98b8f3c",
          "message": "Merge remote-tracking branch 'origin/main' into carlosdelest/fix/fix-shard-splitting-query-tests"
        },
        {
          "sha": "6757ec47739488f383e5a067431b8ff1b516dd08",
          "message": "Remove AwaitsFix"
        }
      ],
      "comments": [],
      "body": "This test relies on docIDs being in order. Using a random merge policy makes that assumption false.\r\n\r\nWe disable the use of MockRandomMergePolicy for these tests so we ensure the doc ID check is valid.\r\n\r\nFixes https://github.com/elastic/elasticsearch/issues/104111\r\nFixes https://github.com/elastic/elasticsearch/issues/104349\r\n",
      "base_ref": "main",
      "head_ref": "carlosdelest/fix/fix-shard-splitting-query-tests",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104358/comments"
    },
    {
      "number": 104357,
      "title": "Update example action plugin",
      "state": "closed",
      "created_at": "2024-01-15T09:08:22Z",
      "updated_at": "2024-01-16T13:48:02Z",
      "closed_at": "2024-01-16T12:46:08Z",
      "merged_at": "2024-01-16T12:46:07Z",
      "author": "thecoop",
      "labels": [
        ":Core/Infra/Plugins",
        ">refactoring",
        "Team:Core/Infra",
        "v8.13.0"
      ],
      "comments_count": 2,
      "review_comments_count": 0,
      "additions": 2,
      "deletions": 0,
      "changed_files": 1,
      "url": "https://github.com/elastic/elasticsearch/pull/104357",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104357",
      "commits": [
        {
          "sha": "20822a2f7438cef072929929466d87b30abc8bdd",
          "message": "Update example plugin for API changes in #103277"
        }
      ],
      "comments": [],
      "body": "Update example plugin for API changes in #103277.\r\n\r\nThis closes #104350",
      "base_ref": "main",
      "head_ref": "example-action-plugin",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104357/comments"
    },
    {
      "number": 104356,
      "title": "[Profiling] Extract properties faster from source",
      "state": "closed",
      "created_at": "2024-01-15T07:53:52Z",
      "updated_at": "2024-01-15T10:18:18Z",
      "closed_at": "2024-01-15T10:18:12Z",
      "merged_at": "2024-01-15T10:18:12Z",
      "author": "danielmitterdorfer",
      "labels": [
        ">enhancement",
        ":UniversalProfiling/Application",
        "Team:obs-knowledge",
        "v8.13.0"
      ],
      "comments_count": 3,
      "review_comments_count": 0,
      "additions": 12,
      "deletions": 3,
      "changed_files": 3,
      "url": "https://github.com/elastic/elasticsearch/pull/104356",
      "api_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104356",
      "commits": [
        {
          "sha": "beb7c7a525fad1ab30ade765ed578d57c333be99",
          "message": "[Profiling] Extract properties faster from source\n\nPreviously the extraction code for reading stacktrace and executable\nproperties has used an implementation of `ObjectPath#eval()` that split\nthe provided object path using a regex. As the object path is constant\nand known in advance we can directly provide the final object path\navoing this costly step."
        },
        {
          "sha": "2c8c925f4547e984a9410151e040b04581774eda",
          "message": "Update docs/changelog/104356.yaml"
        }
      ],
      "comments": [],
      "body": "Previously the extraction code for reading stacktrace and executable properties has used an implementation of `ObjectPath#eval()` that split the provided object path using a regex. As the object path is constant and known in advance we can directly provide the final object path avoiding this costly step.\r\n",
      "base_ref": "main",
      "head_ref": "profiling-eval",
      "mergeable": null,
      "mergeable_state": "unknown",
      "review_comments_url": "https://api.github.com/repos/elastic/elasticsearch/pulls/104356/comments"
    }
  ]
}